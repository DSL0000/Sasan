!function(t){function n(l){if(c[l])return c[l].exports;var d=c[l]={exports:{},id:l,loaded:!1};return t[l].call(d.exports,d,d.exports,n),d.loaded=!0,d.exports}var c={};return n.m=t,n.c=c,n.p="",n(0)}([function(t,n,c){t.exports=c(7)},,function(module,exports){eval('/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n/* Zepto 1.1.6 - zepto ajax event data form touch fx fx_methods - zeptojs.com/license */\nvar Zepto=function(){function L(t){return null==t?String(t):j[S.call(t)]||"object"}function A(t){return"function"==L(t)}function Z(t){return null!=t&&t==t.window}function $(t){return null!=t&&t.nodeType==t.DOCUMENT_NODE}function R(t){return"object"==L(t)}function k(t){return R(t)&&!Z(t)&&Object.getPrototypeOf(t)==Object.prototype}function z(t){return"number"==typeof t.length}function F(t){return a.call(t,function(t){return null!=t})}function _(t){return t.length>0?n.fn.concat.apply([],t):t}function I(t){return t.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()}function q(t){return t in c?c[t]:c[t]=new RegExp("(^|\\\\s)"+t+"(\\\\s|$)")}function H(t,e){return"number"!=typeof e||l[I(t)]?e:e+"px"}function U(t){var e,n;return f[t]||(e=u.createElement(t),u.body.appendChild(e),n=getComputedStyle(e,"").getPropertyValue("display"),e.parentNode.removeChild(e),"none"==n&&(n="block"),f[t]=n),f[t]}function X(t){return"children"in t?s.call(t.children):n.map(t.childNodes,function(t){return 1==t.nodeType?t:void 0})}function V(t,e){var n,i=t?t.length:0;for(n=0;i>n;n++)this[n]=t[n];this.length=i,this.selector=e||""}function B(n,i,r){for(e in i)r&&(k(i[e])||D(i[e]))?(k(i[e])&&!k(n[e])&&(n[e]={}),D(i[e])&&!D(n[e])&&(n[e]=[]),B(n[e],i[e],r)):i[e]!==t&&(n[e]=i[e])}function Y(t,e){return null==e?n(t):n(t).filter(e)}function J(t,e,n,i){return A(e)?e.call(t,n,i):e}function W(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function G(e,n){var i=e.className||"",r=i&&i.baseVal!==t;return n===t?r?i.baseVal:i:void(r?i.baseVal=n:e.className=n)}function K(t){try{return t?"true"==t||("false"==t?!1:"null"==t?null:+t+""==t?+t:/^[\\[\\{]/.test(t)?n.parseJSON(t):t):t}catch(e){return t}}function Q(t,e){e(t);for(var n=0,i=t.childNodes.length;i>n;n++)Q(t.childNodes[n],e)}var t,e,n,i,P,N,r=[],o=r.concat,a=r.filter,s=r.slice,u=window.document,f={},c={},l={"column-count":1,columns:1,"font-weight":1,"line-height":1,opacity:1,"z-index":1,zoom:1},h=/^\\s*<(\\w+|!)[^>]*>/,p=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,d=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,m=/^(?:body|html)$/i,g=/([A-Z])/g,v=["val","css","html","text","data","width","height","offset"],y=["after","prepend","before","append"],x=u.createElement("table"),w=u.createElement("tr"),b={tr:u.createElement("tbody"),tbody:x,thead:x,tfoot:x,td:w,th:w,"*":u.createElement("div")},E=/complete|loaded|interactive/,T=/^[\\w-]*$/,j={},S=j.toString,C={},O=u.createElement("div"),M={tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},D=Array.isArray||function(t){return t instanceof Array};return C.matches=function(t,e){if(!e||!t||1!==t.nodeType)return!1;var n=t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.matchesSelector;if(n)return n.call(t,e);var i,r=t.parentNode,o=!r;return o&&(r=O).appendChild(t),i=~C.qsa(r,e).indexOf(t),o&&O.removeChild(t),i},P=function(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():""})},N=function(t){return a.call(t,function(e,n){return t.indexOf(e)==n})},C.fragment=function(e,i,r){var o,a,f;return p.test(e)&&(o=n(u.createElement(RegExp.$1))),o||(e.replace&&(e=e.replace(d,"<$1></$2>")),i===t&&(i=h.test(e)&&RegExp.$1),i in b||(i="*"),f=b[i],f.innerHTML=""+e,o=n.each(s.call(f.childNodes),function(){f.removeChild(this)})),k(r)&&(a=n(o),n.each(r,function(t,e){v.indexOf(t)>-1?a[t](e):a.attr(t,e)})),o},C.Z=function(t,e){return new V(t,e)},C.isZ=function(t){return t instanceof C.Z},C.init=function(e,i){var r;if(!e)return C.Z();if("string"==typeof e)if(e=e.trim(),"<"==e[0]&&h.test(e))r=C.fragment(e,RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=C.qsa(u,e)}else{if(A(e))return n(u).ready(e);if(C.isZ(e))return e;if(D(e))r=F(e);else if(R(e))r=[e],e=null;else if(h.test(e))r=C.fragment(e.trim(),RegExp.$1,i),e=null;else{if(i!==t)return n(i).find(e);r=C.qsa(u,e)}}return C.Z(r,e)},n=function(t,e){return C.init(t,e)},n.extend=function(t){var e,n=s.call(arguments,1);return"boolean"==typeof t&&(e=t,t=n.shift()),n.forEach(function(n){B(t,n,e)}),t},C.qsa=function(t,e){var n,i="#"==e[0],r=!i&&"."==e[0],o=i||r?e.slice(1):e,a=T.test(o);return t.getElementById&&a&&i?(n=t.getElementById(o))?[n]:[]:1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType?[]:s.call(a&&!i&&t.getElementsByClassName?r?t.getElementsByClassName(o):t.getElementsByTagName(e):t.querySelectorAll(e))},n.contains=u.documentElement.contains?function(t,e){return t!==e&&t.contains(e)}:function(t,e){for(;e&&(e=e.parentNode);)if(e===t)return!0;return!1},n.type=L,n.isFunction=A,n.isWindow=Z,n.isArray=D,n.isPlainObject=k,n.isEmptyObject=function(t){var e;for(e in t)return!1;return!0},n.inArray=function(t,e,n){return r.indexOf.call(e,t,n)},n.camelCase=P,n.trim=function(t){return null==t?"":String.prototype.trim.call(t)},n.uuid=0,n.support={},n.expr={},n.noop=function(){},n.map=function(t,e){var n,r,o,i=[];if(z(t))for(r=0;r<t.length;r++)n=e(t[r],r),null!=n&&i.push(n);else for(o in t)n=e(t[o],o),null!=n&&i.push(n);return _(i)},n.each=function(t,e){var n,i;if(z(t)){for(n=0;n<t.length;n++)if(e.call(t[n],n,t[n])===!1)return t}else for(i in t)if(e.call(t[i],i,t[i])===!1)return t;return t},n.grep=function(t,e){return a.call(t,e)},window.JSON&&(n.parseJSON=JSON.parse),n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(t,e){j["[object "+e+"]"]=e.toLowerCase()}),n.fn={constructor:C.Z,length:0,forEach:r.forEach,reduce:r.reduce,push:r.push,sort:r.sort,splice:r.splice,indexOf:r.indexOf,concat:function(){var t,e,n=[];for(t=0;t<arguments.length;t++)e=arguments[t],n[t]=C.isZ(e)?e.toArray():e;return o.apply(C.isZ(this)?this.toArray():this,n)},map:function(t){return n(n.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return n(s.apply(this,arguments))},ready:function(t){return E.test(u.readyState)&&u.body?t(n):u.addEventListener("DOMContentLoaded",function(){t(n)},!1),this},get:function(e){return e===t?s.call(this):this[e>=0?e:e+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(t){return r.every.call(this,function(e,n){return t.call(e,n,e)!==!1}),this},filter:function(t){return A(t)?this.not(this.not(t)):n(a.call(this,function(e){return C.matches(e,t)}))},add:function(t,e){return n(N(this.concat(n(t,e))))},is:function(t){return this.length>0&&C.matches(this[0],t)},not:function(e){var i=[];if(A(e)&&e.call!==t)this.each(function(t){e.call(this,t)||i.push(this)});else{var r="string"==typeof e?this.filter(e):z(e)&&A(e.item)?s.call(e):n(e);this.forEach(function(t){r.indexOf(t)<0&&i.push(t)})}return n(i)},has:function(t){return this.filter(function(){return R(t)?n.contains(this,t):n(this).find(t).size()})},eq:function(t){return-1===t?this.slice(t):this.slice(t,+t+1)},first:function(){var t=this[0];return t&&!R(t)?t:n(t)},last:function(){var t=this[this.length-1];return t&&!R(t)?t:n(t)},find:function(t){var e,i=this;return e=t?"object"==typeof t?n(t).filter(function(){var t=this;return r.some.call(i,function(e){return n.contains(e,t)})}):1==this.length?n(C.qsa(this[0],t)):this.map(function(){return C.qsa(this,t)}):n()},closest:function(t,e){var i=this[0],r=!1;for("object"==typeof t&&(r=n(t));i&&!(r?r.indexOf(i)>=0:C.matches(i,t));)i=i!==e&&!$(i)&&i.parentNode;return n(i)},parents:function(t){for(var e=[],i=this;i.length>0;)i=n.map(i,function(t){return(t=t.parentNode)&&!$(t)&&e.indexOf(t)<0?(e.push(t),t):void 0});return Y(e,t)},parent:function(t){return Y(N(this.pluck("parentNode")),t)},children:function(t){return Y(this.map(function(){return X(this)}),t)},contents:function(){return this.map(function(){return this.contentDocument||s.call(this.childNodes)})},siblings:function(t){return Y(this.map(function(t,e){return a.call(X(e.parentNode),function(t){return t!==e})}),t)},empty:function(){return this.each(function(){this.innerHTML=""})},pluck:function(t){return n.map(this,function(e){return e[t]})},show:function(){return this.each(function(){"none"==this.style.display&&(this.style.display=""),"none"==getComputedStyle(this,"").getPropertyValue("display")&&(this.style.display=U(this.nodeName))})},replaceWith:function(t){return this.before(t).remove()},wrap:function(t){var e=A(t);if(this[0]&&!e)var i=n(t).get(0),r=i.parentNode||this.length>1;return this.each(function(o){n(this).wrapAll(e?t.call(this,o):r?i.cloneNode(!0):i)})},wrapAll:function(t){if(this[0]){n(this[0]).before(t=n(t));for(var e;(e=t.children()).length;)t=e.first();n(t).append(this)}return this},wrapInner:function(t){var e=A(t);return this.each(function(i){var r=n(this),o=r.contents(),a=e?t.call(this,i):t;o.length?o.wrapAll(a):r.append(a)})},unwrap:function(){return this.parent().each(function(){n(this).replaceWith(n(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css("display","none")},toggle:function(e){return this.each(function(){var i=n(this);(e===t?"none"==i.css("display"):e)?i.show():i.hide()})},prev:function(t){return n(this.pluck("previousElementSibling")).filter(t||"*")},next:function(t){return n(this.pluck("nextElementSibling")).filter(t||"*")},html:function(t){return 0 in arguments?this.each(function(e){var i=this.innerHTML;n(this).empty().append(J(this,t,e,i))}):0 in this?this[0].innerHTML:null},text:function(t){return 0 in arguments?this.each(function(e){var n=J(this,t,e,this.textContent);this.textContent=null==n?"":""+n}):0 in this?this[0].textContent:null},attr:function(n,i){var r;return"string"!=typeof n||1 in arguments?this.each(function(t){if(1===this.nodeType)if(R(n))for(e in n)W(this,e,n[e]);else W(this,n,J(this,i,t,this.getAttribute(n)))}):this.length&&1===this[0].nodeType?!(r=this[0].getAttribute(n))&&n in this[0]?this[0][n]:r:t},removeAttr:function(t){return this.each(function(){1===this.nodeType&&t.split(" ").forEach(function(t){W(this,t)},this)})},prop:function(t,e){return t=M[t]||t,1 in arguments?this.each(function(n){this[t]=J(this,e,n,this[t])}):this[0]&&this[0][t]},data:function(e,n){var i="data-"+e.replace(g,"-$1").toLowerCase(),r=1 in arguments?this.attr(i,n):this.attr(i);return null!==r?K(r):t},val:function(t){return 0 in arguments?this.each(function(e){this.value=J(this,t,e,this.value)}):this[0]&&(this[0].multiple?n(this[0]).find("option").filter(function(){return this.selected}).pluck("value"):this[0].value)},offset:function(t){if(t)return this.each(function(e){var i=n(this),r=J(this,t,e,i.offset()),o=i.offsetParent().offset(),a={top:r.top-o.top,left:r.left-o.left};"static"==i.css("position")&&(a.position="relative"),i.css(a)});if(!this.length)return null;if(!n.contains(u.documentElement,this[0]))return{top:0,left:0};var e=this[0].getBoundingClientRect();return{left:e.left+window.pageXOffset,top:e.top+window.pageYOffset,width:Math.round(e.width),height:Math.round(e.height)}},css:function(t,i){if(arguments.length<2){var r,o=this[0];if(!o)return;if(r=getComputedStyle(o,""),"string"==typeof t)return o.style[P(t)]||r.getPropertyValue(t);if(D(t)){var a={};return n.each(t,function(t,e){a[e]=o.style[P(e)]||r.getPropertyValue(e)}),a}}var s="";if("string"==L(t))i||0===i?s=I(t)+":"+H(t,i):this.each(function(){this.style.removeProperty(I(t))});else for(e in t)t[e]||0===t[e]?s+=I(e)+":"+H(e,t[e])+";":this.each(function(){this.style.removeProperty(I(e))});return this.each(function(){this.style.cssText+=";"+s})},index:function(t){return t?this.indexOf(n(t)[0]):this.parent().children().indexOf(this[0])},hasClass:function(t){return t?r.some.call(this,function(t){return this.test(G(t))},q(t)):!1},addClass:function(t){return t?this.each(function(e){if("className"in this){i=[];var r=G(this),o=J(this,t,e,r);o.split(/\\s+/g).forEach(function(t){n(this).hasClass(t)||i.push(t)},this),i.length&&G(this,r+(r?" ":"")+i.join(" "))}}):this},removeClass:function(e){return this.each(function(n){if("className"in this){if(e===t)return G(this,"");i=G(this),J(this,e,n,i).split(/\\s+/g).forEach(function(t){i=i.replace(q(t)," ")}),G(this,i.trim())}})},toggleClass:function(e,i){return e?this.each(function(r){var o=n(this),a=J(this,e,r,G(this));a.split(/\\s+/g).forEach(function(e){(i===t?!o.hasClass(e):i)?o.addClass(e):o.removeClass(e)})}):this},scrollTop:function(e){if(this.length){var n="scrollTop"in this[0];return e===t?n?this[0].scrollTop:this[0].pageYOffset:this.each(n?function(){this.scrollTop=e}:function(){this.scrollTo(this.scrollX,e)})}},scrollLeft:function(e){if(this.length){var n="scrollLeft"in this[0];return e===t?n?this[0].scrollLeft:this[0].pageXOffset:this.each(n?function(){this.scrollLeft=e}:function(){this.scrollTo(e,this.scrollY)})}},position:function(){if(this.length){var t=this[0],e=this.offsetParent(),i=this.offset(),r=m.test(e[0].nodeName)?{top:0,left:0}:e.offset();return i.top-=parseFloat(n(t).css("margin-top"))||0,i.left-=parseFloat(n(t).css("margin-left"))||0,r.top+=parseFloat(n(e[0]).css("border-top-width"))||0,r.left+=parseFloat(n(e[0]).css("border-left-width"))||0,{top:i.top-r.top,left:i.left-r.left}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||u.body;t&&!m.test(t.nodeName)&&"static"==n(t).css("position");)t=t.offsetParent;return t})}},n.fn.detach=n.fn.remove,["width","height"].forEach(function(e){var i=e.replace(/./,function(t){return t[0].toUpperCase()});n.fn[e]=function(r){var o,a=this[0];return r===t?Z(a)?a["inner"+i]:$(a)?a.documentElement["scroll"+i]:(o=this.offset())&&o[e]:this.each(function(t){a=n(this),a.css(e,J(this,r,t,a[e]()))})}}),y.forEach(function(t,e){var i=e%2;n.fn[t]=function(){var t,o,r=n.map(arguments,function(e){return t=L(e),"object"==t||"array"==t||null==e?e:C.fragment(e)}),a=this.length>1;return r.length<1?this:this.each(function(t,s){o=i?s:s.parentNode,s=0==e?s.nextSibling:1==e?s.firstChild:2==e?s:null;var f=n.contains(u.documentElement,o);r.forEach(function(t){if(a)t=t.cloneNode(!0);else if(!o)return n(t).remove();o.insertBefore(t,s),f&&Q(t,function(t){null==t.nodeName||"SCRIPT"!==t.nodeName.toUpperCase()||t.type&&"text/javascript"!==t.type||t.src||window.eval.call(window,t.innerHTML)})})})},n.fn[i?t+"To":"insert"+(e?"Before":"After")]=function(e){return n(e)[t](this),this}}),C.Z.prototype=V.prototype=n.fn,C.uniq=N,C.deserializeValue=K,n.zepto=C,n}();window.Zepto=Zepto,void 0===window.$&&(window.$=Zepto),function(t){function h(e,n,i){var r=t.Event(n);return t(e).trigger(r,i),!r.isDefaultPrevented()}function p(t,e,i,r){return t.global?h(e||n,i,r):void 0}function d(e){e.global&&0===t.active++&&p(e,null,"ajaxStart")}function m(e){e.global&&!--t.active&&p(e,null,"ajaxStop")}function g(t,e){var n=e.context;return e.beforeSend.call(n,t,e)===!1||p(e,n,"ajaxBeforeSend",[t,e])===!1?!1:void p(e,n,"ajaxSend",[t,e])}function v(t,e,n,i){var r=n.context,o="success";n.success.call(r,t,o,e),i&&i.resolveWith(r,[t,o,e]),p(n,r,"ajaxSuccess",[e,n,t]),x(o,e,n)}function y(t,e,n,i,r){var o=i.context;i.error.call(o,n,e,t),r&&r.rejectWith(o,[n,e,t]),p(i,o,"ajaxError",[n,i,t||e]),x(e,n,i)}function x(t,e,n){var i=n.context;n.complete.call(i,e,t),p(n,i,"ajaxComplete",[e,n]),m(n)}function w(){}function b(t){return t&&(t=t.split(";",2)[0]),t&&(t==f?"html":t==u?"json":a.test(t)?"script":s.test(t)&&"xml")||"text"}function E(t,e){return""==e?t:(t+"&"+e).replace(/[&?]{1,2}/,"?")}function T(e){e.processData&&e.data&&"string"!=t.type(e.data)&&(e.data=t.param(e.data,e.traditional)),!e.data||e.type&&"GET"!=e.type.toUpperCase()||(e.url=E(e.url,e.data),e.data=void 0)}function j(e,n,i,r){return t.isFunction(n)&&(r=i,i=n,n=void 0),t.isFunction(i)||(r=i,i=void 0),{url:e,data:n,success:i,dataType:r}}function C(e,n,i,r){var o,a=t.isArray(n),s=t.isPlainObject(n);t.each(n,function(n,u){o=t.type(u),r&&(n=i?r:r+"["+(s||"object"==o||"array"==o?n:"")+"]"),!r&&a?e.add(u.name,u.value):"array"==o||!i&&"object"==o?C(e,u,i,n):e.add(n,u)})}var i,r,e=0,n=window.document,o=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,a=/^(?:text|application)\\/javascript/i,s=/^(?:text|application)\\/xml/i,u="application/json",f="text/html",c=/^\\s*$/,l=n.createElement("a");l.href=window.location.href,t.active=0,t.ajaxJSONP=function(i,r){if(!("type"in i))return t.ajax(i);var f,h,o=i.jsonpCallback,a=(t.isFunction(o)?o():o)||"jsonp"+ ++e,s=n.createElement("script"),u=window[a],c=function(e){t(s).triggerHandler("error",e||"abort")},l={abort:c};return r&&r.promise(l),t(s).on("load error",function(e,n){clearTimeout(h),t(s).off().remove(),"error"!=e.type&&f?v(f[0],l,i,r):y(null,n||"error",l,i,r),window[a]=u,f&&t.isFunction(u)&&u(f[0]),u=f=void 0}),g(l,i)===!1?(c("abort"),l):(window[a]=function(){f=arguments},s.src=i.url.replace(/\\?(.+)=\\?/,"?$1="+a),n.head.appendChild(s),i.timeout>0&&(h=setTimeout(function(){c("timeout")},i.timeout)),l)},t.ajaxSettings={type:"GET",beforeSend:w,success:w,error:w,complete:w,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:"text/javascript, application/javascript, application/x-javascript",json:u,xml:"application/xml, text/xml",html:f,text:"text/plain"},crossDomain:!1,timeout:0,processData:!0,cache:!0},t.ajax=function(e){var s,u,o=t.extend({},e||{}),a=t.Deferred&&t.Deferred();for(i in t.ajaxSettings)void 0===o[i]&&(o[i]=t.ajaxSettings[i]);d(o),o.crossDomain||(s=n.createElement("a"),s.href=o.url,s.href=s.href,o.crossDomain=l.protocol+"//"+l.host!=s.protocol+"//"+s.host),o.url||(o.url=window.location.toString()),(u=o.url.indexOf("#"))>-1&&(o.url=o.url.slice(0,u)),T(o);var f=o.dataType,h=/\\?.+=\\?/.test(o.url);if(h&&(f="jsonp"),o.cache!==!1&&(e&&e.cache===!0||"script"!=f&&"jsonp"!=f)||(o.url=E(o.url,"_="+Date.now())),"jsonp"==f)return h||(o.url=E(o.url,o.jsonp?o.jsonp+"=?":o.jsonp===!1?"":"callback=?")),t.ajaxJSONP(o,a);var P,p=o.accepts[f],m={},x=function(t,e){m[t.toLowerCase()]=[t,e]},j=/^([\\w-]+:)\\/\\//.test(o.url)?RegExp.$1:window.location.protocol,S=o.xhr(),C=S.setRequestHeader;if(a&&a.promise(S),o.crossDomain||x("X-Requested-With","XMLHttpRequest"),x("Accept",p||"*/*"),(p=o.mimeType||p)&&(p.indexOf(",")>-1&&(p=p.split(",",2)[0]),S.overrideMimeType&&S.overrideMimeType(p)),(o.contentType||o.contentType!==!1&&o.data&&"GET"!=o.type.toUpperCase())&&x("Content-Type",o.contentType||"application/x-www-form-urlencoded"),o.headers)for(r in o.headers)x(r,o.headers[r]);if(S.setRequestHeader=x,S.onreadystatechange=function(){if(4==S.readyState){S.onreadystatechange=w,clearTimeout(P);var e,n=!1;if(S.status>=200&&S.status<300||304==S.status||0==S.status&&"file:"==j){f=f||b(o.mimeType||S.getResponseHeader("content-type")),e=S.responseText;try{"script"==f?(1,eval)(e):"xml"==f?e=S.responseXML:"json"==f&&(e=c.test(e)?null:t.parseJSON(e))}catch(i){n=i}n?y(n,"parsererror",S,o,a):v(e,S,o,a)}else y(S.statusText||null,S.status?"error":"abort",S,o,a)}},g(S,o)===!1)return S.abort(),y(null,"abort",S,o,a),S;if(o.xhrFields)for(r in o.xhrFields)S[r]=o.xhrFields[r];var N="async"in o?o.async:!0;S.open(o.type,o.url,N,o.username,o.password);for(r in m)C.apply(S,m[r]);return o.timeout>0&&(P=setTimeout(function(){S.onreadystatechange=w,S.abort(),y(null,"timeout",S,o,a)},o.timeout)),S.send(o.data?o.data:null),S},t.get=function(){return t.ajax(j.apply(null,arguments))},t.post=function(){var e=j.apply(null,arguments);return e.type="POST",t.ajax(e)},t.getJSON=function(){var e=j.apply(null,arguments);return e.dataType="json",t.ajax(e)},t.fn.load=function(e,n,i){if(!this.length)return this;var s,r=this,a=e.split(/\\s/),u=j(e,n,i),f=u.success;return a.length>1&&(u.url=a[0],s=a[1]),u.success=function(e){r.html(s?t("<div>").html(e.replace(o,"")).find(s):e),f&&f.apply(r,arguments)},t.ajax(u),this};var S=encodeURIComponent;t.param=function(e,n){var i=[];return i.add=function(e,n){t.isFunction(n)&&(n=n()),null==n&&(n=""),this.push(S(e)+"="+S(n))},C(i,e,n),i.join("&").replace(/%20/g,"+")}}(Zepto),function(t){function l(t){return t._zid||(t._zid=e++)}function h(t,e,n,i){if(e=p(e),e.ns)var r=d(e.ns);return(a[l(t)]||[]).filter(function(t){return t&&(!e.e||t.e==e.e)&&(!e.ns||r.test(t.ns))&&(!n||l(t.fn)===l(n))&&(!i||t.sel==i)})}function p(t){var e=(""+t).split(".");return{e:e[0],ns:e.slice(1).sort().join(" ")}}function d(t){return new RegExp("(?:^| )"+t.replace(" "," .* ?")+"(?: |$)")}function m(t,e){return t.del&&!u&&t.e in f||!!e}function g(t){return c[t]||u&&f[t]||t}function v(e,i,r,o,s,u,f){var h=l(e),d=a[h]||(a[h]=[]);i.split(/\\s/).forEach(function(i){if("ready"==i)return t(document).ready(r);var a=p(i);a.fn=r,a.sel=s,a.e in c&&(r=function(e){var n=e.relatedTarget;return!n||n!==this&&!t.contains(this,n)?a.fn.apply(this,arguments):void 0}),a.del=u;var l=u||r;a.proxy=function(t){if(t=T(t),!t.isImmediatePropagationStopped()){t.data=o;var i=l.apply(e,t._args==n?[t]:[t].concat(t._args));return i===!1&&(t.preventDefault(),t.stopPropagation()),i}},a.i=d.length,d.push(a),"addEventListener"in e&&e.addEventListener(g(a.e),a.proxy,m(a,f))})}function y(t,e,n,i,r){var o=l(t);(e||"").split(/\\s/).forEach(function(e){h(t,e,n,i).forEach(function(e){delete a[o][e.i],"removeEventListener"in t&&t.removeEventListener(g(e.e),e.proxy,m(e,r))})})}function T(e,i){return(i||!e.isDefaultPrevented)&&(i||(i=e),t.each(E,function(t,n){var r=i[t];e[t]=function(){return this[n]=x,r&&r.apply(i,arguments)},e[n]=w}),(i.defaultPrevented!==n?i.defaultPrevented:"returnValue"in i?i.returnValue===!1:i.getPreventDefault&&i.getPreventDefault())&&(e.isDefaultPrevented=x)),e}function j(t){var e,i={originalEvent:t};for(e in t)b.test(e)||t[e]===n||(i[e]=t[e]);return T(i,t)}var n,e=1,i=Array.prototype.slice,r=t.isFunction,o=function(t){return"string"==typeof t},a={},s={},u="onfocusin"in window,f={focus:"focusin",blur:"focusout"},c={mouseenter:"mouseover",mouseleave:"mouseout"};s.click=s.mousedown=s.mouseup=s.mousemove="MouseEvents",t.event={add:v,remove:y},t.proxy=function(e,n){var a=2 in arguments&&i.call(arguments,2);if(r(e)){var s=function(){return e.apply(n,a?a.concat(i.call(arguments)):arguments)};return s._zid=l(e),s}if(o(n))return a?(a.unshift(e[n],e),t.proxy.apply(null,a)):t.proxy(e[n],e);throw new TypeError("expected function")},t.fn.bind=function(t,e,n){return this.on(t,e,n)},t.fn.unbind=function(t,e){return this.off(t,e)},t.fn.one=function(t,e,n,i){return this.on(t,e,n,i,1)};var x=function(){return!0},w=function(){return!1},b=/^([A-Z]|returnValue$|layer[XY]$)/,E={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"};t.fn.delegate=function(t,e,n){return this.on(e,t,n)},t.fn.undelegate=function(t,e,n){return this.off(e,t,n)},t.fn.live=function(e,n){return t(document.body).delegate(this.selector,e,n),this},t.fn.die=function(e,n){return t(document.body).undelegate(this.selector,e,n),this},t.fn.on=function(e,a,s,u,f){var c,l,h=this;return e&&!o(e)?(t.each(e,function(t,e){h.on(t,a,s,e,f)}),h):(o(a)||r(u)||u===!1||(u=s,s=a,a=n),(u===n||s===!1)&&(u=s,s=n),u===!1&&(u=w),h.each(function(n,r){f&&(c=function(t){return y(r,t.type,u),u.apply(this,arguments)}),a&&(l=function(e){var n,o=t(e.target).closest(a,r).get(0);return o&&o!==r?(n=t.extend(j(e),{currentTarget:o,liveFired:r}),(c||u).apply(o,[n].concat(i.call(arguments,1)))):void 0}),v(r,e,u,s,a,l||c)}))},t.fn.off=function(e,i,a){var s=this;return e&&!o(e)?(t.each(e,function(t,e){s.off(t,i,e)}),s):(o(i)||r(a)||a===!1||(a=i,i=n),a===!1&&(a=w),s.each(function(){y(this,e,a,i)}))},t.fn.trigger=function(e,n){return e=o(e)||t.isPlainObject(e)?t.Event(e):T(e),e._args=n,this.each(function(){e.type in f&&"function"==typeof this[e.type]?this[e.type]():"dispatchEvent"in this?this.dispatchEvent(e):t(this).triggerHandler(e,n)})},t.fn.triggerHandler=function(e,n){var i,r;return this.each(function(a,s){i=j(o(e)?t.Event(e):e),i._args=n,i.target=s,t.each(h(s,e.type||e),function(t,e){return r=e.proxy(i),i.isImmediatePropagationStopped()?!1:void 0})}),r},"focusin focusout focus blur load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(e){t.fn[e]=function(t){return 0 in arguments?this.bind(e,t):this.trigger(e)}}),t.Event=function(t,e){o(t)||(e=t,t=e.type);var n=document.createEvent(s[t]||"Events"),i=!0;if(e)for(var r in e)"bubbles"==r?i=!!e[r]:n[r]=e[r];return n.initEvent(t,i,!0),T(n)}}(Zepto),function(t){function a(o,a){var u=o[r],f=u&&e[u];if(void 0===a)return f||s(o);if(f){if(a in f)return f[a];var c=i(a);if(c in f)return f[c]}return n.call(t(o),a)}function s(n,o,a){var s=n[r]||(n[r]=++t.uuid),f=e[s]||(e[s]=u(n));return void 0!==o&&(f[i(o)]=a),f}function u(e){var n={};return t.each(e.attributes||o,function(e,r){0==r.name.indexOf("data-")&&(n[i(r.name.replace("data-",""))]=t.zepto.deserializeValue(r.value))}),n}var e={},n=t.fn.data,i=t.camelCase,r=t.expando="Zepto"+ +new Date,o=[];t.fn.data=function(e,n){return void 0===n?t.isPlainObject(e)?this.each(function(n,i){t.each(e,function(t,e){s(i,t,e)})}):0 in this?a(this[0],e):void 0:this.each(function(){s(this,e,n)})},t.fn.removeData=function(n){return"string"==typeof n&&(n=n.split(/\\s+/)),this.each(function(){var o=this[r],a=o&&e[o];a&&t.each(n||a,function(t){delete a[n?i(this):t]})})},["remove","empty"].forEach(function(e){var n=t.fn[e];t.fn[e]=function(){var t=this.find("*");return"remove"===e&&(t=t.add(this)),t.removeData(),n.call(this)}})}(Zepto),function(t){t.fn.serializeArray=function(){var e,n,i=[],r=function(t){return t.forEach?t.forEach(r):void i.push({name:e,value:t})};return this[0]&&t.each(this[0].elements,function(i,o){n=o.type,e=o.name,e&&"fieldset"!=o.nodeName.toLowerCase()&&!o.disabled&&"submit"!=n&&"reset"!=n&&"button"!=n&&"file"!=n&&("radio"!=n&&"checkbox"!=n||o.checked)&&r(t(o).val())}),i},t.fn.serialize=function(){var t=[];return this.serializeArray().forEach(function(e){t.push(encodeURIComponent(e.name)+"="+encodeURIComponent(e.value))}),t.join("&")},t.fn.submit=function(e){if(0 in arguments)this.bind("submit",e);else if(this.length){var n=t.Event("submit");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(Zepto),function(t){function u(t,e,n,i){return Math.abs(t-e)>=Math.abs(n-i)?t-e>0?"Left":"Right":n-i>0?"Up":"Down"}function f(){o=null,e.last&&(e.el.trigger("longTap"),e={})}function c(){o&&clearTimeout(o),o=null}function l(){n&&clearTimeout(n),i&&clearTimeout(i),r&&clearTimeout(r),o&&clearTimeout(o),n=i=r=o=null,e={}}function h(t){return("touch"==t.pointerType||t.pointerType==t.MSPOINTER_TYPE_TOUCH)&&t.isPrimary}function p(t,e){return t.type=="pointer"+e||t.type.toLowerCase()=="mspointer"+e}var n,i,r,o,s,e={},a=750;t(document).ready(function(){var d,m,y,x,g=0,v=0;"MSGesture"in window&&(s=new MSGesture,s.target=document.body),t(document).bind("MSGestureEnd",function(t){var n=t.velocityX>1?"Right":t.velocityX<-1?"Left":t.velocityY>1?"Down":t.velocityY<-1?"Up":null;n&&(e.el.trigger("swipe"),e.el.trigger("swipe"+n))}).on("touchstart MSPointerDown pointerdown",function(i){(!(x=p(i,"down"))||h(i))&&(y=x?i:i.touches[0],i.touches&&1===i.touches.length&&e.x2&&(e.x2=void 0,e.y2=void 0),d=Date.now(),m=d-(e.last||d),e.el=t("tagName"in y.target?y.target:y.target.parentNode),n&&clearTimeout(n),e.x1=y.pageX,e.y1=y.pageY,m>0&&250>=m&&(e.isDoubleTap=!0),e.last=d,o=setTimeout(f,a),s&&x&&s.addPointer(i.pointerId))}).on("touchmove MSPointerMove pointermove",function(t){(!(x=p(t,"move"))||h(t))&&(y=x?t:t.touches[0],c(),e.x2=y.pageX,e.y2=y.pageY,g+=Math.abs(e.x1-e.x2),v+=Math.abs(e.y1-e.y2))}).on("touchend MSPointerUp pointerup",function(o){(!(x=p(o,"up"))||h(o))&&(c(),e.x2&&Math.abs(e.x1-e.x2)>30||e.y2&&Math.abs(e.y1-e.y2)>30?r=setTimeout(function(){e.el.trigger("swipe"),e.el.trigger("swipe"+u(e.x1,e.x2,e.y1,e.y2)),e={}},0):"last"in e&&(30>g&&30>v?i=setTimeout(function(){var i=t.Event("tap");i.cancelTouch=l,e.el.trigger(i),e.isDoubleTap?(e.el&&e.el.trigger("doubleTap"),e={}):n=setTimeout(function(){n=null,e.el&&e.el.trigger("singleTap"),e={}},250)},0):e={}),g=v=0)}).on("touchcancel MSPointerCancel pointercancel",l),t(window).on("scroll",l)}),["swipe","swipeLeft","swipeRight","swipeUp","swipeDown","doubleTap","tap","singleTap","longTap"].forEach(function(e){t.fn[e]=function(t){return this.on(e,t)}})}(Zepto),function(t,e){function v(t){return t.replace(/([a-z])([A-Z])/,"$1-$2").toLowerCase()}function y(t){return i?i+t:t.toLowerCase()}var i,s,u,f,c,l,h,p,d,m,n="",r={Webkit:"webkit",Moz:"",O:"o"},o=document.createElement("div"),a=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,g={};t.each(r,function(t,r){return o.style[t+"TransitionProperty"]!==e?(n="-"+t.toLowerCase()+"-",i=r,!1):void 0}),s=n+"transform",g[u=n+"transition-property"]=g[f=n+"transition-duration"]=g[l=n+"transition-delay"]=g[c=n+"transition-timing-function"]=g[h=n+"animation-name"]=g[p=n+"animation-duration"]=g[m=n+"animation-delay"]=g[d=n+"animation-timing-function"]="",t.fx={off:i===e&&o.style.transitionProperty===e,speeds:{_default:400,fast:200,slow:600},cssPrefix:n,transitionEnd:y("TransitionEnd"),animationEnd:y("AnimationEnd")},t.fn.animate=function(n,i,r,o,a){return t.isFunction(i)&&(o=i,r=e,i=e),t.isFunction(r)&&(o=r,r=e),t.isPlainObject(i)&&(r=i.easing,o=i.complete,a=i.delay,i=i.duration),i&&(i=("number"==typeof i?i:t.fx.speeds[i]||t.fx.speeds._default)/1e3),a&&(a=parseFloat(a)/1e3),this.anim(n,i,r,o,a)},t.fn.anim=function(n,i,r,o,y){var x,b,j,w={},E="",T=this,S=t.fx.transitionEnd,C=!1;if(i===e&&(i=t.fx.speeds._default/1e3),y===e&&(y=0),t.fx.off&&(i=0),"string"==typeof n)w[h]=n,w[p]=i+"s",w[m]=y+"s",w[d]=r||"linear",S=t.fx.animationEnd;else{b=[];for(x in n)a.test(x)?E+=x+"("+n[x]+") ":(w[x]=n[x],b.push(v(x)));E&&(w[s]=E,b.push(s)),i>0&&"object"==typeof n&&(w[u]=b.join(", "),w[f]=i+"s",w[l]=y+"s",w[c]=r||"linear")}return j=function(e){if("undefined"!=typeof e){if(e.target!==e.currentTarget)return;t(e.target).unbind(S,j)}else t(this).unbind(S,j);C=!0,t(this).css(g),o&&o.call(this)},i>0&&(this.bind(S,j),setTimeout(function(){C||j.call(T)},1e3*(i+y)+25)),this.size()&&this.get(0).clientLeft,this.css(w),0>=i&&setTimeout(function(){T.each(function(){j.call(this)})},0),this},o=null}(Zepto),function(t,e){function s(n,i,r,o,a){"function"!=typeof i||a||(a=i,i=e);var s={opacity:r};return o&&(s.scale=o,n.css(t.fx.cssPrefix+"transform-origin","0 0")),n.animate(s,i,null,a)}function u(e,n,i,r){return s(e,n,0,i,function(){o.call(t(this)),r&&r.call(this)})}var n=window.document,r=(n.documentElement,t.fn.show),o=t.fn.hide,a=t.fn.toggle;t.fn.show=function(t,n){return r.call(this),t===e?t=0:this.css("opacity",0),s(this,t,1,"1,1",n)},t.fn.hide=function(t,n){return t===e?o.call(this):u(this,t,"0,0",n)},t.fn.toggle=function(n,i){return n===e||"boolean"==typeof n?a.call(this,n):this.each(function(){var e=t(this);e["none"==e.css("display")?"show":"hide"](n,i)})},t.fn.fadeTo=function(t,e,n){return s(this,t,e,null,n)},t.fn.fadeIn=function(t,e){var n=this.css("opacity");return n>0?this.css("opacity",0):n=1,r.call(this).fadeTo(t,n,e)},t.fn.fadeOut=function(t,e){return u(this,t,null,e)},t.fn.fadeToggle=function(e,n){return this.each(function(){var i=t(this);i[0==i.css("opacity")||"none"==i.css("display")?"fadeIn":"fadeOut"](e,n)})}}(Zepto);\n\n//# sourceMappingURL=data:application/json;base64,');
},,,,,function(module,exports,__webpack_require__){eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n\r\nvar myiscroll =  __webpack_require__(8);  //把iscroll插件引入到 myiscroll对象中\r\n__webpack_require__(2);\r\n__webpack_require__(9);\r\n\r\n\r\nvar myScroll,\r\n	pullDownEl, pullDownOffset,_maxScrollY,\r\n	pullUpEl, pullUpOffset,\r\n	generatedCount = 0,\r\n	num=1;\r\n\r\nfunction pullDownAction () {\r\n	setTimeout(function () {	// <-- Simulate network congestion, remove setTimeout from production!\r\n		var el, li, i;\r\n		el = document.getElementById('thelist');\r\n\r\n		for (i=0; i<3; i++) {\r\n			// li = document.createElement('li');\r\n			li = $('.ulist li').eq(0).clone();\r\n			if(li.hasClass('native')){\r\n				// console.log(1);\r\n				li.removeClass('native');\r\n			}\r\n			// li.innerText = 'Generated down ' + (++generatedCount);\r\n			$('.ulist').prepend(li);\r\n		}\r\n\r\n		myScroll.refresh();		// Remember to refresh when contents are loaded (ie: on ajax completion)\r\n	}, 1000);	// <-- Simulate network congestion, remove setTimeout from production!\r\n}\r\n\r\nfunction pullUpAction () {\r\n\r\n	setTimeout(function () {	// <-- Simulate network congestion, remove setTimeout from production!\r\n		var el, li, i;\r\n		el = document.getElementById('thelist');\r\n		// for (i=++;0; i<3; i++) {\r\n		// 	// li = document.createElement('li');\r\n		// 	// // li.innerText = 'Generated up ' + (++generatedCount);\r\n		// 	// el.appendChild(li, el.childNodes[0]);\r\n		// 	var l = $('.ulist li').size()\r\n		// 	li = $('.ulist li').eq(l-1).clone();\r\n		// 	// li.innerText = 'Generated down ' + (++generatedCount);\r\n		// 	$('.ulist').append(li);\r\n		// }\r\n		    var mydata;\r\n			console.log(num)\r\n			$.ajax({\r\n				url:\"prd/json/data\"+num+\".json\",\r\n				// url:'/api/orders',\r\n				method:\"get\",\r\n				data:num,\r\n				// dataType:'jsonp',\r\n				// async:false,\r\n				success:function(data){\r\n					demo(data);\r\n				}\r\n			});\r\n		num++;\r\n		if(num>=6){\r\n			num=1;\r\n		}\r\n		function demo(data){\r\n			console.log(data);\r\n			var length = data.weikeList.length;\r\n			// mydata  = data;\r\n			// demo(data);\r\n			for(var i=0;i<length;i++){\r\n				li = $('.ulist li').eq(0).clone();\r\n				if(li.hasClass('native')){\r\n					li.removeClass('native');\r\n				}\r\n				li.find('.z-box-text').html(data.weikeList[i].wkTitle)\r\n				$('.ulist').append(li);\r\n\r\n			}\r\n\r\n			var newData = data.weikeList.map(function(item){\r\n				return item.wkTitle;\r\n			})\r\n			console.log(newData);\r\n\r\n			myScroll.refresh();	\r\n		}\r\n			// Remember to refresh when contents are loaded (ie: on ajax completion)\r\n	}, 1000);	// <-- Simulate network congestion, remove setTimeout from production!\r\n}\r\n\r\nfunction loaded() {\r\n	pullDownEl = document.getElementById('pullDown');\r\n	pullDownOffset = pullDownEl.offsetHeight;\r\n	// console.log(pullDownOffset)\r\n	pullUpEl = document.getElementById('pullUp');\r\n	pullUpOffset = pullUpEl.offsetHeight;\r\n	// console.log(pullUpOffset)\r\n	$('.ulist').on('tap','li',function(){\r\n		$(this).addClass('native').siblings().removeClass('native');\r\n	})\r\n	myScroll = new myiscroll.iScroll('wrapper', {\r\n		useTransition: true,       //是否使用css 变形\r\n		topOffset: pullDownOffset,   //已经滚动的基准值\r\n		onRefresh: function () {\r\n			// console.log(maxScrollY)\r\n			// $.each($('ul li'),function(index){\r\n			// 		console.log($(this).index())\r\n			// 	})\r\n            _maxScrollY = this.maxScrollY = this.maxScrollY + pullUpOffset;\r\n            console.log(this.maxScrollY)\r\n			if (pullDownEl.className.match('loading')) {\r\n				pullDownEl.className = '';\r\n				pullDownEl.querySelector('.pullDownLabel').innerHTML = '下拉刷新...';\r\n			} else if (pullUpEl.className.match('loading')) {\r\n				pullUpEl.className = '';\r\n				pullUpEl.querySelector('.pullUpLabel').innerHTML = '加载更多...';\r\n			}\r\n		},\r\n		onScrollMove: function () {\r\n			// console.log(this);\r\n			console.log(this.maxScrollY)\r\n			// y:滚动垂直初始位置 (负值)\r\n			if (this.y > 5 && !pullDownEl.className.match('flip')) {\r\n				pullDownEl.className = 'flip';\r\n				pullDownEl.querySelector('.pullDownLabel').innerHTML = '松开刷新...';  //松开刷新\r\n				// console.log(this.minScrollY)\r\n				this.minScrollY = 0;\r\n				\r\n			} else if (this.y < 5 && pullDownEl.className.match('flip')) {\r\n\r\n				pullDownEl.className = '';\r\n				pullDownEl.querySelector('.pullDownLabel').innerHTML = '下拉刷新...';\r\n				this.minScrollY = -pullDownOffset;\r\n			} else if (this.y <= (_maxScrollY - pullUpOffset) && !pullUpEl.className.match('flip')) {\r\n				pullUpEl.className = 'flip';\r\n				// debugger;;\r\n				pullUpEl.querySelector('.pullUpLabel').innerHTML = '松开刷新...';\r\n                this.maxScrollY = this.maxScrollY - pullUpOffset;\r\n			} else if (this.y > (_maxScrollY - pullUpOffset) && pullUpEl.className.match('flip')) {\r\n				pullUpEl.className = '';\r\n				pullUpEl.querySelector('.pullUpLabel').innerHTML = '加载更多...';\r\n                this.maxScrollY = this.maxScrollY + pullUpOffset;\r\n                console.log(this.y+\"up\")\r\n			}\r\n		},\r\n		onScrollEnd: function () {\r\n			if (pullDownEl.className.match('flip')) {\r\n				pullDownEl.className = 'loading';\r\n				pullDownEl.querySelector('.pullDownLabel').innerHTML = '加载中...';\r\n				pullDownAction();	// Execute custom function (ajax call?)\r\n			} else if (pullUpEl.className.match('flip')) {\r\n				// debugger;\r\n				pullUpEl.className = 'loading';\r\n				pullUpEl.querySelector('.pullUpLabel').innerHTML = '加载中...';\r\n				pullUpAction();	// Execute custom function (ajax call?)\r\n			}\r\n		}\r\n	});\r\n	\r\nsetTimeout(function () { document.getElementById('wrapper').style.left = '0'; }, 800);\r\n}\r\n\r\ndocument.addEventListener('touchmove', function (e) { e.preventDefault(); }, false);\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () { setTimeout(loaded, 200); }, false);\r\n\n\n//# sourceMappingURL=data:application/json;base64,")},function(module,exports,__webpack_require__){eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n/*!\n * iScroll v4.2.5 ~ Copyright (c) 2012 Matteo Spinelli, http://cubiq.org\n * Released under MIT license, http://cubiq.org/license\n */\n(function(window, doc){\nvar m = Math,\n	dummyStyle = doc.createElement('div').style,\n	vendor = (function () {\n		var vendors = 't,webkitT,MozT,msT,OT'.split(','),\n			t,\n			i = 0,\n			l = vendors.length;\n\n		for ( ; i < l; i++ ) {\n			t = vendors[i] + 'ransform';\n			if ( t in dummyStyle ) {\n				return vendors[i].substr(0, vendors[i].length - 1);\n			}\n		}\n\n		return false;\n	})(),\n	cssVendor = vendor ? '-' + vendor.toLowerCase() + '-' : '',\n\n	// Style properties\n	transform = prefixStyle('transform'),\n	transitionProperty = prefixStyle('transitionProperty'),\n	transitionDuration = prefixStyle('transitionDuration'),\n	transformOrigin = prefixStyle('transformOrigin'),\n	transitionTimingFunction = prefixStyle('transitionTimingFunction'),\n	transitionDelay = prefixStyle('transitionDelay'),\n\n    // Browser capabilities\n	isAndroid = (/android/gi).test(navigator.appVersion),\n	isIDevice = (/iphone|ipad/gi).test(navigator.appVersion),\n	isTouchPad = (/hp-tablet/gi).test(navigator.appVersion),\n\n    has3d = prefixStyle('perspective') in dummyStyle,\n    hasTouch = 'ontouchstart' in window && !isTouchPad,\n    hasTransform = vendor !== false,\n    hasTransitionEnd = prefixStyle('transition') in dummyStyle,\n\n	RESIZE_EV = 'onorientationchange' in window ? 'orientationchange' : 'resize',\n	START_EV = hasTouch ? 'touchstart' : 'mousedown',\n	MOVE_EV = hasTouch ? 'touchmove' : 'mousemove',\n	END_EV = hasTouch ? 'touchend' : 'mouseup',\n	CANCEL_EV = hasTouch ? 'touchcancel' : 'mouseup',\n	TRNEND_EV = (function () {\n		if ( vendor === false ) return false;\n\n		var transitionEnd = {\n				''			: 'transitionend',\n				'webkit'	: 'webkitTransitionEnd',\n				'Moz'		: 'transitionend',\n				'O'			: 'otransitionend',\n				'ms'		: 'MSTransitionEnd'\n			};\n\n		return transitionEnd[vendor];\n	})(),\n\n	nextFrame = (function() {\n		return window.requestAnimationFrame ||\n			window.webkitRequestAnimationFrame ||\n			window.mozRequestAnimationFrame ||\n			window.oRequestAnimationFrame ||\n			window.msRequestAnimationFrame ||\n			function(callback) { return setTimeout(callback, 1); };\n	})(),\n	cancelFrame = (function () {\n		return window.cancelRequestAnimationFrame ||\n			window.webkitCancelAnimationFrame ||\n			window.webkitCancelRequestAnimationFrame ||\n			window.mozCancelRequestAnimationFrame ||\n			window.oCancelRequestAnimationFrame ||\n			window.msCancelRequestAnimationFrame ||\n			clearTimeout;\n	})(),\n\n	// Helpers\n	translateZ = has3d ? ' translateZ(0)' : '',\n\n	// Constructor\n	iScroll = function (el, options) {\n		var that = this,\n			i;\n\n		that.wrapper = typeof el == 'object' ? el : doc.getElementById(el);\n		that.wrapper.style.overflow = 'hidden';\n		that.scroller = that.wrapper.children[0];\n\n		// Default options\n		that.options = {\n			hScroll: true,\n			vScroll: true,\n			x: 0,\n			y: 0,\n			bounce: true,\n			bounceLock: false,\n			momentum: true,\n			lockDirection: true,\n			useTransform: true,\n			useTransition: false,\n			topOffset: 0,\n			checkDOMChanges: false,		// Experimental\n			handleClick: true,\n\n			// Scrollbar\n			hScrollbar: true,\n			vScrollbar: true,\n			fixedScrollbar: isAndroid,\n			hideScrollbar: isIDevice,\n			fadeScrollbar: isIDevice && has3d,\n			scrollbarClass: '',\n\n			// Zoom\n			zoom: false,\n			zoomMin: 1,\n			zoomMax: 4,\n			doubleTapZoom: 2,\n			wheelAction: 'scroll',\n\n			// Snap\n			snap: false,\n			snapThreshold: 1,\n\n			// Events\n			onRefresh: null,\n			onBeforeScrollStart: function (e) { e.preventDefault(); },\n			onScrollStart: null,\n			onBeforeScrollMove: null,\n			onScrollMove: null,\n			onBeforeScrollEnd: null,\n			onScrollEnd: null,\n			onTouchEnd: null,\n			onDestroy: null,\n			onZoomStart: null,\n			onZoom: null,\n			onZoomEnd: null\n		};\n\n		// User defined options\n		for (i in options) that.options[i] = options[i];\n		\n		// Set starting position\n		that.x = that.options.x;\n		that.y = that.options.y;\n\n		// Normalize options\n		that.options.useTransform = hasTransform && that.options.useTransform;\n		that.options.hScrollbar = that.options.hScroll && that.options.hScrollbar;\n		that.options.vScrollbar = that.options.vScroll && that.options.vScrollbar;\n		that.options.zoom = that.options.useTransform && that.options.zoom;\n		that.options.useTransition = hasTransitionEnd && that.options.useTransition;\n\n		// Helpers FIX ANDROID BUG!\n		// translate3d and scale doesn't work together!\n		// Ignoring 3d ONLY WHEN YOU SET that.options.zoom\n		if ( that.options.zoom && isAndroid ){\n			translateZ = '';\n		}\n		\n		// Set some default styles\n		that.scroller.style[transitionProperty] = that.options.useTransform ? cssVendor + 'transform' : 'top left';\n		that.scroller.style[transitionDuration] = '0';\n		that.scroller.style[transformOrigin] = '0 0';\n		if (that.options.useTransition) that.scroller.style[transitionTimingFunction] = 'cubic-bezier(0.33,0.66,0.66,1)';\n		\n		if (that.options.useTransform) that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px)' + translateZ;\n		else that.scroller.style.cssText += ';position:absolute;top:' + that.y + 'px;left:' + that.x + 'px';\n\n		if (that.options.useTransition) that.options.fixedScrollbar = true;\n\n		that.refresh();\n\n		that._bind(RESIZE_EV, window);\n		that._bind(START_EV);\n		if (!hasTouch) {\n			if (that.options.wheelAction != 'none') {\n				that._bind('DOMMouseScroll');\n				that._bind('mousewheel');\n			}\n		}\n\n		if (that.options.checkDOMChanges) that.checkDOMTime = setInterval(function () {\n			that._checkDOMChanges();\n		}, 500);\n	};\n\n// Prototype\niScroll.prototype = {\n	enabled: true,\n	x: 0,\n	y: 0,\n	steps: [],\n	scale: 1,\n	currPageX: 0, currPageY: 0,\n	pagesX: [], pagesY: [],\n	aniTime: null,\n	wheelZoomCount: 0,\n	\n	handleEvent: function (e) {\n		var that = this;\n		switch(e.type) {\n			case START_EV:\n				if (!hasTouch && e.button !== 0) return;\n				that._start(e);\n				break;\n			case MOVE_EV: that._move(e); break;\n			case END_EV:\n			case CANCEL_EV: that._end(e); break;\n			case RESIZE_EV: that._resize(); break;\n			case 'DOMMouseScroll': case 'mousewheel': that._wheel(e); break;\n			case TRNEND_EV: that._transitionEnd(e); break;\n		}\n	},\n	\n	_checkDOMChanges: function () {\n		if (this.moved || this.zoomed || this.animating ||\n			(this.scrollerW == this.scroller.offsetWidth * this.scale && this.scrollerH == this.scroller.offsetHeight * this.scale)) return;\n\n		this.refresh();\n	},\n	\n	_scrollbar: function (dir) {\n		var that = this,\n			bar;\n\n		if (!that[dir + 'Scrollbar']) {\n			if (that[dir + 'ScrollbarWrapper']) {\n				if (hasTransform) that[dir + 'ScrollbarIndicator'].style[transform] = '';\n				that[dir + 'ScrollbarWrapper'].parentNode.removeChild(that[dir + 'ScrollbarWrapper']);\n				that[dir + 'ScrollbarWrapper'] = null;\n				that[dir + 'ScrollbarIndicator'] = null;\n			}\n\n			return;\n		}\n\n		if (!that[dir + 'ScrollbarWrapper']) {\n			// Create the scrollbar wrapper\n			bar = doc.createElement('div');\n\n			if (that.options.scrollbarClass) bar.className = that.options.scrollbarClass + dir.toUpperCase();\n			else bar.style.cssText = 'position:absolute;z-index:100;' + (dir == 'h' ? 'height:7px;bottom:1px;left:2px;right:' + (that.vScrollbar ? '7' : '2') + 'px' : 'width:7px;bottom:' + (that.hScrollbar ? '7' : '2') + 'px;top:2px;right:1px');\n\n			bar.style.cssText += ';pointer-events:none;' + cssVendor + 'transition-property:opacity;' + cssVendor + 'transition-duration:' + (that.options.fadeScrollbar ? '350ms' : '0') + ';overflow:hidden;opacity:' + (that.options.hideScrollbar ? '0' : '1');\n\n			that.wrapper.appendChild(bar);\n			that[dir + 'ScrollbarWrapper'] = bar;\n\n			// Create the scrollbar indicator\n			bar = doc.createElement('div');\n			if (!that.options.scrollbarClass) {\n				bar.style.cssText = 'position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);' + cssVendor + 'background-clip:padding-box;' + cssVendor + 'box-sizing:border-box;' + (dir == 'h' ? 'height:100%' : 'width:100%') + ';' + cssVendor + 'border-radius:3px;border-radius:3px';\n			}\n			bar.style.cssText += ';pointer-events:none;' + cssVendor + 'transition-property:' + cssVendor + 'transform;' + cssVendor + 'transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);' + cssVendor + 'transition-duration:0;' + cssVendor + 'transform: translate(0,0)' + translateZ;\n			if (that.options.useTransition) bar.style.cssText += ';' + cssVendor + 'transition-timing-function:cubic-bezier(0.33,0.66,0.66,1)';\n\n			that[dir + 'ScrollbarWrapper'].appendChild(bar);\n			that[dir + 'ScrollbarIndicator'] = bar;\n		}\n\n		if (dir == 'h') {\n			that.hScrollbarSize = that.hScrollbarWrapper.clientWidth;\n			that.hScrollbarIndicatorSize = m.max(m.round(that.hScrollbarSize * that.hScrollbarSize / that.scrollerW), 8);\n			that.hScrollbarIndicator.style.width = that.hScrollbarIndicatorSize + 'px';\n			that.hScrollbarMaxScroll = that.hScrollbarSize - that.hScrollbarIndicatorSize;\n			that.hScrollbarProp = that.hScrollbarMaxScroll / that.maxScrollX;\n		} else {\n			that.vScrollbarSize = that.vScrollbarWrapper.clientHeight;\n			that.vScrollbarIndicatorSize = m.max(m.round(that.vScrollbarSize * that.vScrollbarSize / that.scrollerH), 8);\n			that.vScrollbarIndicator.style.height = that.vScrollbarIndicatorSize + 'px';\n			that.vScrollbarMaxScroll = that.vScrollbarSize - that.vScrollbarIndicatorSize;\n			that.vScrollbarProp = that.vScrollbarMaxScroll / that.maxScrollY;\n		}\n\n		// Reset position\n		that._scrollbarPos(dir, true);\n	},\n	\n	_resize: function () {\n		var that = this;\n		setTimeout(function () { that.refresh(); }, isAndroid ? 200 : 0);\n	},\n	\n	_pos: function (x, y) {\n		if (this.zoomed) return;\n\n		x = this.hScroll ? x : 0;\n		y = this.vScroll ? y : 0;\n\n		if (this.options.useTransform) {\n			this.scroller.style[transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + this.scale + ')' + translateZ;\n		} else {\n			x = m.round(x);\n			y = m.round(y);\n			this.scroller.style.left = x + 'px';\n			this.scroller.style.top = y + 'px';\n		}\n\n		this.x = x;\n		this.y = y;\n\n		this._scrollbarPos('h');\n		this._scrollbarPos('v');\n	},\n\n	_scrollbarPos: function (dir, hidden) {\n		var that = this,\n			pos = dir == 'h' ? that.x : that.y,\n			size;\n\n		if (!that[dir + 'Scrollbar']) return;\n\n		pos = that[dir + 'ScrollbarProp'] * pos;\n\n		if (pos < 0) {\n			if (!that.options.fixedScrollbar) {\n				size = that[dir + 'ScrollbarIndicatorSize'] + m.round(pos * 3);\n				if (size < 8) size = 8;\n				that[dir + 'ScrollbarIndicator'].style[dir == 'h' ? 'width' : 'height'] = size + 'px';\n			}\n			pos = 0;\n		} else if (pos > that[dir + 'ScrollbarMaxScroll']) {\n			if (!that.options.fixedScrollbar) {\n				size = that[dir + 'ScrollbarIndicatorSize'] - m.round((pos - that[dir + 'ScrollbarMaxScroll']) * 3);\n				if (size < 8) size = 8;\n				that[dir + 'ScrollbarIndicator'].style[dir == 'h' ? 'width' : 'height'] = size + 'px';\n				pos = that[dir + 'ScrollbarMaxScroll'] + (that[dir + 'ScrollbarIndicatorSize'] - size);\n			} else {\n				pos = that[dir + 'ScrollbarMaxScroll'];\n			}\n		}\n\n		that[dir + 'ScrollbarWrapper'].style[transitionDelay] = '0';\n		that[dir + 'ScrollbarWrapper'].style.opacity = hidden && that.options.hideScrollbar ? '0' : '1';\n		that[dir + 'ScrollbarIndicator'].style[transform] = 'translate(' + (dir == 'h' ? pos + 'px,0)' : '0,' + pos + 'px)') + translateZ;\n	},\n	\n	_start: function (e) {\n		var that = this,\n			point = hasTouch ? e.touches[0] : e,\n			matrix, x, y,\n			c1, c2;\n\n		if (!that.enabled) return;\n\n		if (that.options.onBeforeScrollStart) that.options.onBeforeScrollStart.call(that, e);\n\n		if (that.options.useTransition || that.options.zoom) that._transitionTime(0);\n\n		that.moved = false;\n		that.animating = false;\n		that.zoomed = false;\n		that.distX = 0;\n		that.distY = 0;\n		that.absDistX = 0;\n		that.absDistY = 0;\n		that.dirX = 0;\n		that.dirY = 0;\n\n		// Gesture start\n		if (that.options.zoom && hasTouch && e.touches.length > 1) {\n			c1 = m.abs(e.touches[0].pageX-e.touches[1].pageX);\n			c2 = m.abs(e.touches[0].pageY-e.touches[1].pageY);\n			that.touchesDistStart = m.sqrt(c1 * c1 + c2 * c2);\n\n			that.originX = m.abs(e.touches[0].pageX + e.touches[1].pageX - that.wrapperOffsetLeft * 2) / 2 - that.x;\n			that.originY = m.abs(e.touches[0].pageY + e.touches[1].pageY - that.wrapperOffsetTop * 2) / 2 - that.y;\n\n			if (that.options.onZoomStart) that.options.onZoomStart.call(that, e);\n		}\n\n		if (that.options.momentum) {\n			if (that.options.useTransform) {\n				// Very lame general purpose alternative to CSSMatrix\n				matrix = getComputedStyle(that.scroller, null)[transform].replace(/[^0-9\\-.,]/g, '').split(',');\n				x = +(matrix[12] || matrix[4]);\n				y = +(matrix[13] || matrix[5]);\n			} else {\n				x = +getComputedStyle(that.scroller, null).left.replace(/[^0-9-]/g, '');\n				y = +getComputedStyle(that.scroller, null).top.replace(/[^0-9-]/g, '');\n			}\n			\n			if (x != that.x || y != that.y) {\n				if (that.options.useTransition) that._unbind(TRNEND_EV);\n				else cancelFrame(that.aniTime);\n				that.steps = [];\n				that._pos(x, y);\n				if (that.options.onScrollEnd) that.options.onScrollEnd.call(that);\n			}\n		}\n\n		that.absStartX = that.x;	// Needed by snap threshold\n		that.absStartY = that.y;\n\n		that.startX = that.x;\n		that.startY = that.y;\n		that.pointX = point.pageX;\n		that.pointY = point.pageY;\n\n		that.startTime = e.timeStamp || Date.now();\n\n		if (that.options.onScrollStart) that.options.onScrollStart.call(that, e);\n\n		that._bind(MOVE_EV, window);\n		that._bind(END_EV, window);\n		that._bind(CANCEL_EV, window);\n	},\n	\n	_move: function (e) {\n		var that = this,\n			point = hasTouch ? e.touches[0] : e,\n			deltaX = point.pageX - that.pointX,\n			deltaY = point.pageY - that.pointY,\n			newX = that.x + deltaX,\n			newY = that.y + deltaY,\n			c1, c2, scale,\n			timestamp = e.timeStamp || Date.now();\n\n		if (that.options.onBeforeScrollMove) that.options.onBeforeScrollMove.call(that, e);\n\n		// Zoom\n		if (that.options.zoom && hasTouch && e.touches.length > 1) {\n			c1 = m.abs(e.touches[0].pageX - e.touches[1].pageX);\n			c2 = m.abs(e.touches[0].pageY - e.touches[1].pageY);\n			that.touchesDist = m.sqrt(c1*c1+c2*c2);\n\n			that.zoomed = true;\n\n			scale = 1 / that.touchesDistStart * that.touchesDist * this.scale;\n\n			if (scale < that.options.zoomMin) scale = 0.5 * that.options.zoomMin * Math.pow(2.0, scale / that.options.zoomMin);\n			else if (scale > that.options.zoomMax) scale = 2.0 * that.options.zoomMax * Math.pow(0.5, that.options.zoomMax / scale);\n\n			that.lastScale = scale / this.scale;\n\n			newX = this.originX - this.originX * that.lastScale + this.x;\n			newY = this.originY - this.originY * that.lastScale + this.y;\n\n			this.scroller.style[transform] = 'translate(' + newX + 'px,' + newY + 'px) scale(' + scale + ')' + translateZ;\n\n			if (that.options.onZoom) that.options.onZoom.call(that, e);\n			return;\n		}\n\n		that.pointX = point.pageX;\n		that.pointY = point.pageY;\n\n		// Slow down if outside of the boundaries\n		if (newX > 0 || newX < that.maxScrollX) {\n			newX = that.options.bounce ? that.x + (deltaX / 2) : newX >= 0 || that.maxScrollX >= 0 ? 0 : that.maxScrollX;\n		}\n		if (newY > that.minScrollY || newY < that.maxScrollY) {\n			newY = that.options.bounce ? that.y + (deltaY / 2) : newY >= that.minScrollY || that.maxScrollY >= 0 ? that.minScrollY : that.maxScrollY;\n		}\n\n		that.distX += deltaX;\n		that.distY += deltaY;\n		that.absDistX = m.abs(that.distX);\n		that.absDistY = m.abs(that.distY);\n\n		if (that.absDistX < 6 && that.absDistY < 6) {\n			return;\n		}\n\n		// Lock direction\n		if (that.options.lockDirection) {\n			if (that.absDistX > that.absDistY + 5) {\n				newY = that.y;\n				deltaY = 0;\n			} else if (that.absDistY > that.absDistX + 5) {\n				newX = that.x;\n				deltaX = 0;\n			}\n		}\n\n		that.moved = true;\n		that._pos(newX, newY);\n		that.dirX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;\n		that.dirY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;\n\n		if (timestamp - that.startTime > 300) {\n			that.startTime = timestamp;\n			that.startX = that.x;\n			that.startY = that.y;\n		}\n		\n		if (that.options.onScrollMove) that.options.onScrollMove.call(that, e);\n	},\n	\n	_end: function (e) {\n		if (hasTouch && e.touches.length !== 0) return;\n\n		var that = this,\n			point = hasTouch ? e.changedTouches[0] : e,\n			target, ev,\n			momentumX = { dist:0, time:0 },\n			momentumY = { dist:0, time:0 },\n			duration = (e.timeStamp || Date.now()) - that.startTime,\n			newPosX = that.x,\n			newPosY = that.y,\n			distX, distY,\n			newDuration,\n			snap,\n			scale;\n\n		that._unbind(MOVE_EV, window);\n		that._unbind(END_EV, window);\n		that._unbind(CANCEL_EV, window);\n\n		if (that.options.onBeforeScrollEnd) that.options.onBeforeScrollEnd.call(that, e);\n\n		if (that.zoomed) {\n			scale = that.scale * that.lastScale;\n			scale = Math.max(that.options.zoomMin, scale);\n			scale = Math.min(that.options.zoomMax, scale);\n			that.lastScale = scale / that.scale;\n			that.scale = scale;\n\n			that.x = that.originX - that.originX * that.lastScale + that.x;\n			that.y = that.originY - that.originY * that.lastScale + that.y;\n			\n			that.scroller.style[transitionDuration] = '200ms';\n			that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px) scale(' + that.scale + ')' + translateZ;\n			\n			that.zoomed = false;\n			that.refresh();\n\n			if (that.options.onZoomEnd) that.options.onZoomEnd.call(that, e);\n			return;\n		}\n\n		if (!that.moved) {\n			if (hasTouch) {\n				if (that.doubleTapTimer && that.options.zoom) {\n					// Double tapped\n					clearTimeout(that.doubleTapTimer);\n					that.doubleTapTimer = null;\n					if (that.options.onZoomStart) that.options.onZoomStart.call(that, e);\n					that.zoom(that.pointX, that.pointY, that.scale == 1 ? that.options.doubleTapZoom : 1);\n					if (that.options.onZoomEnd) {\n						setTimeout(function() {\n							that.options.onZoomEnd.call(that, e);\n						}, 200); // 200 is default zoom duration\n					}\n				} else if (this.options.handleClick) {\n					that.doubleTapTimer = setTimeout(function () {\n						that.doubleTapTimer = null;\n\n						// Find the last touched element\n						target = point.target;\n						while (target.nodeType != 1) target = target.parentNode;\n\n						if (target.tagName != 'SELECT' && target.tagName != 'INPUT' && target.tagName != 'TEXTAREA') {\n							ev = doc.createEvent('MouseEvents');\n							ev.initMouseEvent('click', true, true, e.view, 1,\n								point.screenX, point.screenY, point.clientX, point.clientY,\n								e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,\n								0, null);\n							ev._fake = true;\n							target.dispatchEvent(ev);\n						}\n					}, that.options.zoom ? 250 : 0);\n				}\n			}\n\n			that._resetPos(400);\n\n			if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n			return;\n		}\n\n		if (duration < 300 && that.options.momentum) {\n			momentumX = newPosX ? that._momentum(newPosX - that.startX, duration, -that.x, that.scrollerW - that.wrapperW + that.x, that.options.bounce ? that.wrapperW : 0) : momentumX;\n			momentumY = newPosY ? that._momentum(newPosY - that.startY, duration, -that.y, (that.maxScrollY < 0 ? that.scrollerH - that.wrapperH + that.y - that.minScrollY : 0), that.options.bounce ? that.wrapperH : 0) : momentumY;\n\n			newPosX = that.x + momentumX.dist;\n			newPosY = that.y + momentumY.dist;\n\n			if ((that.x > 0 && newPosX > 0) || (that.x < that.maxScrollX && newPosX < that.maxScrollX)) momentumX = { dist:0, time:0 };\n			if ((that.y > that.minScrollY && newPosY > that.minScrollY) || (that.y < that.maxScrollY && newPosY < that.maxScrollY)) momentumY = { dist:0, time:0 };\n		}\n\n		if (momentumX.dist || momentumY.dist) {\n			newDuration = m.max(m.max(momentumX.time, momentumY.time), 10);\n\n			// Do we need to snap?\n			if (that.options.snap) {\n				distX = newPosX - that.absStartX;\n				distY = newPosY - that.absStartY;\n				if (m.abs(distX) < that.options.snapThreshold && m.abs(distY) < that.options.snapThreshold) { that.scrollTo(that.absStartX, that.absStartY, 200); }\n				else {\n					snap = that._snap(newPosX, newPosY);\n					newPosX = snap.x;\n					newPosY = snap.y;\n					newDuration = m.max(snap.time, newDuration);\n				}\n			}\n\n			that.scrollTo(m.round(newPosX), m.round(newPosY), newDuration);\n\n			if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n			return;\n		}\n\n		// Do we need to snap?\n		if (that.options.snap) {\n			distX = newPosX - that.absStartX;\n			distY = newPosY - that.absStartY;\n			if (m.abs(distX) < that.options.snapThreshold && m.abs(distY) < that.options.snapThreshold) that.scrollTo(that.absStartX, that.absStartY, 200);\n			else {\n				snap = that._snap(that.x, that.y);\n				if (snap.x != that.x || snap.y != that.y) that.scrollTo(snap.x, snap.y, snap.time);\n			}\n\n			if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n			return;\n		}\n\n		that._resetPos(200);\n		if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);\n	},\n	\n	_resetPos: function (time) {\n		var that = this,\n			resetX = that.x >= 0 ? 0 : that.x < that.maxScrollX ? that.maxScrollX : that.x,\n			resetY = that.y >= that.minScrollY || that.maxScrollY > 0 ? that.minScrollY : that.y < that.maxScrollY ? that.maxScrollY : that.y;\n\n		if (resetX == that.x && resetY == that.y) {\n			if (that.moved) {\n				that.moved = false;\n				if (that.options.onScrollEnd) that.options.onScrollEnd.call(that);		// Execute custom code on scroll end\n			}\n\n			if (that.hScrollbar && that.options.hideScrollbar) {\n				if (vendor == 'webkit') that.hScrollbarWrapper.style[transitionDelay] = '300ms';\n				that.hScrollbarWrapper.style.opacity = '0';\n			}\n			if (that.vScrollbar && that.options.hideScrollbar) {\n				if (vendor == 'webkit') that.vScrollbarWrapper.style[transitionDelay] = '300ms';\n				that.vScrollbarWrapper.style.opacity = '0';\n			}\n\n			return;\n		}\n\n		that.scrollTo(resetX, resetY, time || 0);\n	},\n\n	_wheel: function (e) {\n		var that = this,\n			wheelDeltaX, wheelDeltaY,\n			deltaX, deltaY,\n			deltaScale;\n\n		if ('wheelDeltaX' in e) {\n			wheelDeltaX = e.wheelDeltaX / 12;\n			wheelDeltaY = e.wheelDeltaY / 12;\n		} else if('wheelDelta' in e) {\n			wheelDeltaX = wheelDeltaY = e.wheelDelta / 12;\n		} else if ('detail' in e) {\n			wheelDeltaX = wheelDeltaY = -e.detail * 3;\n		} else {\n			return;\n		}\n		\n		if (that.options.wheelAction == 'zoom') {\n			deltaScale = that.scale * Math.pow(2, 1/3 * (wheelDeltaY ? wheelDeltaY / Math.abs(wheelDeltaY) : 0));\n			if (deltaScale < that.options.zoomMin) deltaScale = that.options.zoomMin;\n			if (deltaScale > that.options.zoomMax) deltaScale = that.options.zoomMax;\n			\n			if (deltaScale != that.scale) {\n				if (!that.wheelZoomCount && that.options.onZoomStart) that.options.onZoomStart.call(that, e);\n				that.wheelZoomCount++;\n				\n				that.zoom(e.pageX, e.pageY, deltaScale, 400);\n				\n				setTimeout(function() {\n					that.wheelZoomCount--;\n					if (!that.wheelZoomCount && that.options.onZoomEnd) that.options.onZoomEnd.call(that, e);\n				}, 400);\n			}\n			\n			return;\n		}\n		\n		deltaX = that.x + wheelDeltaX;\n		deltaY = that.y + wheelDeltaY;\n\n		if (deltaX > 0) deltaX = 0;\n		else if (deltaX < that.maxScrollX) deltaX = that.maxScrollX;\n\n		if (deltaY > that.minScrollY) deltaY = that.minScrollY;\n		else if (deltaY < that.maxScrollY) deltaY = that.maxScrollY;\n    \n		if (that.maxScrollY < 0) {\n			that.scrollTo(deltaX, deltaY, 0);\n		}\n	},\n	\n	_transitionEnd: function (e) {\n		var that = this;\n\n		if (e.target != that.scroller) return;\n\n		that._unbind(TRNEND_EV);\n		\n		that._startAni();\n	},\n\n\n	/**\n	*\n	* Utilities\n	*\n	*/\n	_startAni: function () {\n		var that = this,\n			startX = that.x, startY = that.y,\n			startTime = Date.now(),\n			step, easeOut,\n			animate;\n\n		if (that.animating) return;\n		\n		if (!that.steps.length) {\n			that._resetPos(400);\n			return;\n		}\n		\n		step = that.steps.shift();\n		\n		if (step.x == startX && step.y == startY) step.time = 0;\n\n		that.animating = true;\n		that.moved = true;\n		\n		if (that.options.useTransition) {\n			that._transitionTime(step.time);\n			that._pos(step.x, step.y);\n			that.animating = false;\n			if (step.time) that._bind(TRNEND_EV);\n			else that._resetPos(0);\n			return;\n		}\n\n		animate = function () {\n			var now = Date.now(),\n				newX, newY;\n\n			if (now >= startTime + step.time) {\n				that._pos(step.x, step.y);\n				that.animating = false;\n				if (that.options.onAnimationEnd) that.options.onAnimationEnd.call(that);			// Execute custom code on animation end\n				that._startAni();\n				return;\n			}\n\n			now = (now - startTime) / step.time - 1;\n			easeOut = m.sqrt(1 - now * now);\n			newX = (step.x - startX) * easeOut + startX;\n			newY = (step.y - startY) * easeOut + startY;\n			that._pos(newX, newY);\n			if (that.animating) that.aniTime = nextFrame(animate);\n		};\n\n		animate();\n	},\n\n	_transitionTime: function (time) {\n		time += 'ms';\n		this.scroller.style[transitionDuration] = time;\n		if (this.hScrollbar) this.hScrollbarIndicator.style[transitionDuration] = time;\n		if (this.vScrollbar) this.vScrollbarIndicator.style[transitionDuration] = time;\n	},\n\n	_momentum: function (dist, time, maxDistUpper, maxDistLower, size) {\n		var deceleration = 0.0006,\n			speed = m.abs(dist) / time,\n			newDist = (speed * speed) / (2 * deceleration),\n			newTime = 0, outsideDist = 0;\n\n		// Proportinally reduce speed if we are outside of the boundaries\n		if (dist > 0 && newDist > maxDistUpper) {\n			outsideDist = size / (6 / (newDist / speed * deceleration));\n			maxDistUpper = maxDistUpper + outsideDist;\n			speed = speed * maxDistUpper / newDist;\n			newDist = maxDistUpper;\n		} else if (dist < 0 && newDist > maxDistLower) {\n			outsideDist = size / (6 / (newDist / speed * deceleration));\n			maxDistLower = maxDistLower + outsideDist;\n			speed = speed * maxDistLower / newDist;\n			newDist = maxDistLower;\n		}\n\n		newDist = newDist * (dist < 0 ? -1 : 1);\n		newTime = speed / deceleration;\n\n		return { dist: newDist, time: m.round(newTime) };\n	},\n\n	_offset: function (el) {\n		var left = -el.offsetLeft,\n			top = -el.offsetTop;\n			\n		while (el = el.offsetParent) {\n			left -= el.offsetLeft;\n			top -= el.offsetTop;\n		}\n		\n		if (el != this.wrapper) {\n			left *= this.scale;\n			top *= this.scale;\n		}\n\n		return { left: left, top: top };\n	},\n\n	_snap: function (x, y) {\n		var that = this,\n			i, l,\n			page, time,\n			sizeX, sizeY;\n\n		// Check page X\n		page = that.pagesX.length - 1;\n		for (i=0, l=that.pagesX.length; i<l; i++) {\n			if (x >= that.pagesX[i]) {\n				page = i;\n				break;\n			}\n		}\n		if (page == that.currPageX && page > 0 && that.dirX < 0) page--;\n		x = that.pagesX[page];\n		sizeX = m.abs(x - that.pagesX[that.currPageX]);\n		sizeX = sizeX ? m.abs(that.x - x) / sizeX * 500 : 0;\n		that.currPageX = page;\n\n		// Check page Y\n		page = that.pagesY.length-1;\n		for (i=0; i<page; i++) {\n			if (y >= that.pagesY[i]) {\n				page = i;\n				break;\n			}\n		}\n		if (page == that.currPageY && page > 0 && that.dirY < 0) page--;\n		y = that.pagesY[page];\n		sizeY = m.abs(y - that.pagesY[that.currPageY]);\n		sizeY = sizeY ? m.abs(that.y - y) / sizeY * 500 : 0;\n		that.currPageY = page;\n\n		// Snap with constant speed (proportional duration)\n		time = m.round(m.max(sizeX, sizeY)) || 200;\n\n		return { x: x, y: y, time: time };\n	},\n\n	_bind: function (type, el, bubble) {\n		(el || this.scroller).addEventListener(type, this, !!bubble);\n	},\n\n	_unbind: function (type, el, bubble) {\n		(el || this.scroller).removeEventListener(type, this, !!bubble);\n	},\n\n\n	/**\n	*\n	* Public methods\n	*\n	*/\n	destroy: function () {\n		var that = this;\n\n		that.scroller.style[transform] = '';\n\n		// Remove the scrollbars\n		that.hScrollbar = false;\n		that.vScrollbar = false;\n		that._scrollbar('h');\n		that._scrollbar('v');\n\n		// Remove the event listeners\n		that._unbind(RESIZE_EV, window);\n		that._unbind(START_EV);\n		that._unbind(MOVE_EV, window);\n		that._unbind(END_EV, window);\n		that._unbind(CANCEL_EV, window);\n		\n		if (!that.options.hasTouch) {\n			that._unbind('DOMMouseScroll');\n			that._unbind('mousewheel');\n		}\n		\n		if (that.options.useTransition) that._unbind(TRNEND_EV);\n		\n		if (that.options.checkDOMChanges) clearInterval(that.checkDOMTime);\n		\n		if (that.options.onDestroy) that.options.onDestroy.call(that);\n	},\n\n	refresh: function () {\n		var that = this,\n			offset,\n			i, l,\n			els,\n			pos = 0,\n			page = 0;\n\n		if (that.scale < that.options.zoomMin) that.scale = that.options.zoomMin;\n		that.wrapperW = that.wrapper.clientWidth || 1;\n		that.wrapperH = that.wrapper.clientHeight || 1;\n\n		that.minScrollY = -that.options.topOffset || 0;\n		that.scrollerW = m.round(that.scroller.offsetWidth * that.scale);\n		that.scrollerH = m.round((that.scroller.offsetHeight + that.minScrollY) * that.scale);\n		that.maxScrollX = that.wrapperW - that.scrollerW;\n		that.maxScrollY = that.wrapperH - that.scrollerH + that.minScrollY;\n		that.dirX = 0;\n		that.dirY = 0;\n\n		if (that.options.onRefresh) that.options.onRefresh.call(that);\n\n		that.hScroll = that.options.hScroll && that.maxScrollX < 0;\n		that.vScroll = that.options.vScroll && (!that.options.bounceLock && !that.hScroll || that.scrollerH > that.wrapperH);\n\n		that.hScrollbar = that.hScroll && that.options.hScrollbar;\n		that.vScrollbar = that.vScroll && that.options.vScrollbar && that.scrollerH > that.wrapperH;\n\n		offset = that._offset(that.wrapper);\n		that.wrapperOffsetLeft = -offset.left;\n		that.wrapperOffsetTop = -offset.top;\n\n		// Prepare snap\n		if (typeof that.options.snap == 'string') {\n			that.pagesX = [];\n			that.pagesY = [];\n			els = that.scroller.querySelectorAll(that.options.snap);\n			for (i=0, l=els.length; i<l; i++) {\n				pos = that._offset(els[i]);\n				pos.left += that.wrapperOffsetLeft;\n				pos.top += that.wrapperOffsetTop;\n				that.pagesX[i] = pos.left < that.maxScrollX ? that.maxScrollX : pos.left * that.scale;\n				that.pagesY[i] = pos.top < that.maxScrollY ? that.maxScrollY : pos.top * that.scale;\n			}\n		} else if (that.options.snap) {\n			that.pagesX = [];\n			while (pos >= that.maxScrollX) {\n				that.pagesX[page] = pos;\n				pos = pos - that.wrapperW;\n				page++;\n			}\n			if (that.maxScrollX%that.wrapperW) that.pagesX[that.pagesX.length] = that.maxScrollX - that.pagesX[that.pagesX.length-1] + that.pagesX[that.pagesX.length-1];\n\n			pos = 0;\n			page = 0;\n			that.pagesY = [];\n			while (pos >= that.maxScrollY) {\n				that.pagesY[page] = pos;\n				pos = pos - that.wrapperH;\n				page++;\n			}\n			if (that.maxScrollY%that.wrapperH) that.pagesY[that.pagesY.length] = that.maxScrollY - that.pagesY[that.pagesY.length-1] + that.pagesY[that.pagesY.length-1];\n		}\n\n		// Prepare the scrollbars\n		that._scrollbar('h');\n		that._scrollbar('v');\n\n		if (!that.zoomed) {\n			that.scroller.style[transitionDuration] = '0';\n			that._resetPos(400);\n		}\n	},\n\n	scrollTo: function (x, y, time, relative) {\n		var that = this,\n			step = x,\n			i, l;\n\n		that.stop();\n\n		if (!step.length) step = [{ x: x, y: y, time: time, relative: relative }];\n		\n		for (i=0, l=step.length; i<l; i++) {\n			if (step[i].relative) { step[i].x = that.x - step[i].x; step[i].y = that.y - step[i].y; }\n			that.steps.push({ x: step[i].x, y: step[i].y, time: step[i].time || 0 });\n		}\n\n		that._startAni();\n	},\n\n	scrollToElement: function (el, time) {\n		var that = this, pos;\n		el = el.nodeType ? el : that.scroller.querySelector(el);\n		if (!el) return;\n\n		pos = that._offset(el);\n		pos.left += that.wrapperOffsetLeft;\n		pos.top += that.wrapperOffsetTop;\n\n		pos.left = pos.left > 0 ? 0 : pos.left < that.maxScrollX ? that.maxScrollX : pos.left;\n		pos.top = pos.top > that.minScrollY ? that.minScrollY : pos.top < that.maxScrollY ? that.maxScrollY : pos.top;\n		time = time === undefined ? m.max(m.abs(pos.left)*2, m.abs(pos.top)*2) : time;\n\n		that.scrollTo(pos.left, pos.top, time);\n	},\n\n	scrollToPage: function (pageX, pageY, time) {\n		var that = this, x, y;\n		\n		time = time === undefined ? 400 : time;\n\n		if (that.options.onScrollStart) that.options.onScrollStart.call(that);\n\n		if (that.options.snap) {\n			pageX = pageX == 'next' ? that.currPageX+1 : pageX == 'prev' ? that.currPageX-1 : pageX;\n			pageY = pageY == 'next' ? that.currPageY+1 : pageY == 'prev' ? that.currPageY-1 : pageY;\n\n			pageX = pageX < 0 ? 0 : pageX > that.pagesX.length-1 ? that.pagesX.length-1 : pageX;\n			pageY = pageY < 0 ? 0 : pageY > that.pagesY.length-1 ? that.pagesY.length-1 : pageY;\n\n			that.currPageX = pageX;\n			that.currPageY = pageY;\n			x = that.pagesX[pageX];\n			y = that.pagesY[pageY];\n		} else {\n			x = -that.wrapperW * pageX;\n			y = -that.wrapperH * pageY;\n			if (x < that.maxScrollX) x = that.maxScrollX;\n			if (y < that.maxScrollY) y = that.maxScrollY;\n		}\n\n		that.scrollTo(x, y, time);\n	},\n\n	disable: function () {\n		this.stop();\n		this._resetPos(0);\n		this.enabled = false;\n\n		// If disabled after touchstart we make sure that there are no left over events\n		this._unbind(MOVE_EV, window);\n		this._unbind(END_EV, window);\n		this._unbind(CANCEL_EV, window);\n	},\n	\n	enable: function () {\n		this.enabled = true;\n	},\n	\n	stop: function () {\n		if (this.options.useTransition) this._unbind(TRNEND_EV);\n		else cancelFrame(this.aniTime);\n		this.steps = [];\n		this.moved = false;\n		this.animating = false;\n	},\n	\n	zoom: function (x, y, scale, time) {\n		var that = this,\n			relScale = scale / that.scale;\n\n		if (!that.options.useTransform) return;\n\n		that.zoomed = true;\n		time = time === undefined ? 200 : time;\n		x = x - that.wrapperOffsetLeft - that.x;\n		y = y - that.wrapperOffsetTop - that.y;\n		that.x = x - x * relScale + that.x;\n		that.y = y - y * relScale + that.y;\n\n		that.scale = scale;\n		that.refresh();\n\n		that.x = that.x > 0 ? 0 : that.x < that.maxScrollX ? that.maxScrollX : that.x;\n		that.y = that.y > that.minScrollY ? that.minScrollY : that.y < that.maxScrollY ? that.maxScrollY : that.y;\n\n		that.scroller.style[transitionDuration] = time + 'ms';\n		that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px) scale(' + scale + ')' + translateZ;\n		that.zoomed = false;\n	},\n	\n	isReady: function () {\n		return !this.moved && !this.zoomed && !this.animating;\n	}\n};\n\nfunction prefixStyle (style) {\n	if ( vendor === '' ) return style;\n\n	style = style.charAt(0).toUpperCase() + style.substr(1);\n	return vendor + style;\n}\n\ndummyStyle = null;	// for the sake of it\n\nif (true) exports.iScroll = iScroll;\nelse window.iScroll = iScroll;\n\n})(window, document);\n\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi96eC9qcy9pc2Nyb2xsLmpzP2JlZWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUyxPQUFPO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnQ0FBZ0M7QUFDdkQsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0Msb0JBQW9CLEVBQUU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx3Q0FBd0Msa0JBQWtCLHFCQUFxQjs7QUFFL0U7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxnQ0FBZ0M7QUFDaEMsa0NBQWtDO0FBQ2xDLDREQUE0RDtBQUM1RCwwQ0FBMEM7QUFDMUM7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0NBQStDLFlBQVksOEJBQThCLFdBQVcsU0FBUyw0REFBNEQsK0NBQStDLFFBQVE7O0FBRWhPLDBCQUEwQixvQkFBb0IsNkNBQTZDLDBGQUEwRixnQkFBZ0I7O0FBRXJNO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFlBQVksMkJBQTJCLHVDQUF1Qyw2Q0FBNkMsdUNBQXVDLG9EQUFvRCxtQ0FBbUM7QUFDcFM7QUFDQSwwQkFBMEIsb0JBQW9CLGdFQUFnRSwyRUFBMkUsdUNBQXVDO0FBQ2hPLDBEQUEwRDs7QUFFMUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBLDBCQUEwQixnQkFBZ0IsRUFBRTtBQUM1QyxFQUFFOztBQUVGO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7QUFDMUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsaUJBQWlCO0FBQ2pDLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sT0FBTztBQUNkO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw0R0FBNEc7QUFDNUcsd0lBQXdJO0FBQ3hJOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpR0FBaUcsb0RBQW9EO0FBQ3JKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRTtBQUN0RTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBLEVBQUU7OztBQUdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEU7QUFDNUU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsVUFBVTtBQUNWLEVBQUU7O0FBRUY7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVU7QUFDVixFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlDQUFpQyxLQUFLO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxVQUFVO0FBQ1YsRUFBRTs7QUFFRjtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0EsRUFBRTs7O0FBR0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsS0FBSztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSw2QkFBNkIsNkNBQTZDOztBQUUxRSwwQkFBMEIsS0FBSztBQUMvQiwwQkFBMEIsZ0NBQWdDLGdDQUFnQztBQUMxRixvQkFBb0Isc0RBQXNEO0FBQzFFOztBQUVBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRUY7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCOztBQUVsQjtBQUNBOztBQUVBLENBQUMiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiogSU1QT1JUUyBGUk9NIGltcG9ydHMtbG9hZGVyICoqKi9cbnZhciBkZWZpbmUgPSBmYWxzZTtcblxuLyohXG4gKiBpU2Nyb2xsIHY0LjIuNSB+IENvcHlyaWdodCAoYykgMjAxMiBNYXR0ZW8gU3BpbmVsbGksIGh0dHA6Ly9jdWJpcS5vcmdcbiAqIFJlbGVhc2VkIHVuZGVyIE1JVCBsaWNlbnNlLCBodHRwOi8vY3ViaXEub3JnL2xpY2Vuc2VcbiAqL1xuKGZ1bmN0aW9uKHdpbmRvdywgZG9jKXtcbnZhciBtID0gTWF0aCxcblx0ZHVtbXlTdHlsZSA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKS5zdHlsZSxcblx0dmVuZG9yID0gKGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgdmVuZG9ycyA9ICd0LHdlYmtpdFQsTW96VCxtc1QsT1QnLnNwbGl0KCcsJyksXG5cdFx0XHR0LFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdmVuZG9ycy5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHR0ID0gdmVuZG9yc1tpXSArICdyYW5zZm9ybSc7XG5cdFx0XHRpZiAoIHQgaW4gZHVtbXlTdHlsZSApIHtcblx0XHRcdFx0cmV0dXJuIHZlbmRvcnNbaV0uc3Vic3RyKDAsIHZlbmRvcnNbaV0ubGVuZ3RoIC0gMSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9KSgpLFxuXHRjc3NWZW5kb3IgPSB2ZW5kb3IgPyAnLScgKyB2ZW5kb3IudG9Mb3dlckNhc2UoKSArICctJyA6ICcnLFxuXG5cdC8vIFN0eWxlIHByb3BlcnRpZXNcblx0dHJhbnNmb3JtID0gcHJlZml4U3R5bGUoJ3RyYW5zZm9ybScpLFxuXHR0cmFuc2l0aW9uUHJvcGVydHkgPSBwcmVmaXhTdHlsZSgndHJhbnNpdGlvblByb3BlcnR5JyksXG5cdHRyYW5zaXRpb25EdXJhdGlvbiA9IHByZWZpeFN0eWxlKCd0cmFuc2l0aW9uRHVyYXRpb24nKSxcblx0dHJhbnNmb3JtT3JpZ2luID0gcHJlZml4U3R5bGUoJ3RyYW5zZm9ybU9yaWdpbicpLFxuXHR0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gPSBwcmVmaXhTdHlsZSgndHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uJyksXG5cdHRyYW5zaXRpb25EZWxheSA9IHByZWZpeFN0eWxlKCd0cmFuc2l0aW9uRGVsYXknKSxcblxuICAgIC8vIEJyb3dzZXIgY2FwYWJpbGl0aWVzXG5cdGlzQW5kcm9pZCA9ICgvYW5kcm9pZC9naSkudGVzdChuYXZpZ2F0b3IuYXBwVmVyc2lvbiksXG5cdGlzSURldmljZSA9ICgvaXBob25lfGlwYWQvZ2kpLnRlc3QobmF2aWdhdG9yLmFwcFZlcnNpb24pLFxuXHRpc1RvdWNoUGFkID0gKC9ocC10YWJsZXQvZ2kpLnRlc3QobmF2aWdhdG9yLmFwcFZlcnNpb24pLFxuXG4gICAgaGFzM2QgPSBwcmVmaXhTdHlsZSgncGVyc3BlY3RpdmUnKSBpbiBkdW1teVN0eWxlLFxuICAgIGhhc1RvdWNoID0gJ29udG91Y2hzdGFydCcgaW4gd2luZG93ICYmICFpc1RvdWNoUGFkLFxuICAgIGhhc1RyYW5zZm9ybSA9IHZlbmRvciAhPT0gZmFsc2UsXG4gICAgaGFzVHJhbnNpdGlvbkVuZCA9IHByZWZpeFN0eWxlKCd0cmFuc2l0aW9uJykgaW4gZHVtbXlTdHlsZSxcblxuXHRSRVNJWkVfRVYgPSAnb25vcmllbnRhdGlvbmNoYW5nZScgaW4gd2luZG93ID8gJ29yaWVudGF0aW9uY2hhbmdlJyA6ICdyZXNpemUnLFxuXHRTVEFSVF9FViA9IGhhc1RvdWNoID8gJ3RvdWNoc3RhcnQnIDogJ21vdXNlZG93bicsXG5cdE1PVkVfRVYgPSBoYXNUb3VjaCA/ICd0b3VjaG1vdmUnIDogJ21vdXNlbW92ZScsXG5cdEVORF9FViA9IGhhc1RvdWNoID8gJ3RvdWNoZW5kJyA6ICdtb3VzZXVwJyxcblx0Q0FOQ0VMX0VWID0gaGFzVG91Y2ggPyAndG91Y2hjYW5jZWwnIDogJ21vdXNldXAnLFxuXHRUUk5FTkRfRVYgPSAoZnVuY3Rpb24gKCkge1xuXHRcdGlmICggdmVuZG9yID09PSBmYWxzZSApIHJldHVybiBmYWxzZTtcblxuXHRcdHZhciB0cmFuc2l0aW9uRW5kID0ge1xuXHRcdFx0XHQnJ1x0XHRcdDogJ3RyYW5zaXRpb25lbmQnLFxuXHRcdFx0XHQnd2Via2l0J1x0OiAnd2Via2l0VHJhbnNpdGlvbkVuZCcsXG5cdFx0XHRcdCdNb3onXHRcdDogJ3RyYW5zaXRpb25lbmQnLFxuXHRcdFx0XHQnTydcdFx0XHQ6ICdvdHJhbnNpdGlvbmVuZCcsXG5cdFx0XHRcdCdtcydcdFx0OiAnTVNUcmFuc2l0aW9uRW5kJ1xuXHRcdFx0fTtcblxuXHRcdHJldHVybiB0cmFuc2l0aW9uRW5kW3ZlbmRvcl07XG5cdH0pKCksXG5cblx0bmV4dEZyYW1lID0gKGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHR3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHR3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHR3aW5kb3cub1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuXHRcdFx0d2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHRmdW5jdGlvbihjYWxsYmFjaykgeyByZXR1cm4gc2V0VGltZW91dChjYWxsYmFjaywgMSk7IH07XG5cdH0pKCksXG5cdGNhbmNlbEZyYW1lID0gKGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4gd2luZG93LmNhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuXHRcdFx0d2luZG93LndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHR3aW5kb3cud2Via2l0Q2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHR3aW5kb3cubW96Q2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHR3aW5kb3cub0NhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuXHRcdFx0d2luZG93Lm1zQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG5cdFx0XHRjbGVhclRpbWVvdXQ7XG5cdH0pKCksXG5cblx0Ly8gSGVscGVyc1xuXHR0cmFuc2xhdGVaID0gaGFzM2QgPyAnIHRyYW5zbGF0ZVooMCknIDogJycsXG5cblx0Ly8gQ29uc3RydWN0b3Jcblx0aVNjcm9sbCA9IGZ1bmN0aW9uIChlbCwgb3B0aW9ucykge1xuXHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdGk7XG5cblx0XHR0aGF0LndyYXBwZXIgPSB0eXBlb2YgZWwgPT0gJ29iamVjdCcgPyBlbCA6IGRvYy5nZXRFbGVtZW50QnlJZChlbCk7XG5cdFx0dGhhdC53cmFwcGVyLnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG5cdFx0dGhhdC5zY3JvbGxlciA9IHRoYXQud3JhcHBlci5jaGlsZHJlblswXTtcblxuXHRcdC8vIERlZmF1bHQgb3B0aW9uc1xuXHRcdHRoYXQub3B0aW9ucyA9IHtcblx0XHRcdGhTY3JvbGw6IHRydWUsXG5cdFx0XHR2U2Nyb2xsOiB0cnVlLFxuXHRcdFx0eDogMCxcblx0XHRcdHk6IDAsXG5cdFx0XHRib3VuY2U6IHRydWUsXG5cdFx0XHRib3VuY2VMb2NrOiBmYWxzZSxcblx0XHRcdG1vbWVudHVtOiB0cnVlLFxuXHRcdFx0bG9ja0RpcmVjdGlvbjogdHJ1ZSxcblx0XHRcdHVzZVRyYW5zZm9ybTogdHJ1ZSxcblx0XHRcdHVzZVRyYW5zaXRpb246IGZhbHNlLFxuXHRcdFx0dG9wT2Zmc2V0OiAwLFxuXHRcdFx0Y2hlY2tET01DaGFuZ2VzOiBmYWxzZSxcdFx0Ly8gRXhwZXJpbWVudGFsXG5cdFx0XHRoYW5kbGVDbGljazogdHJ1ZSxcblxuXHRcdFx0Ly8gU2Nyb2xsYmFyXG5cdFx0XHRoU2Nyb2xsYmFyOiB0cnVlLFxuXHRcdFx0dlNjcm9sbGJhcjogdHJ1ZSxcblx0XHRcdGZpeGVkU2Nyb2xsYmFyOiBpc0FuZHJvaWQsXG5cdFx0XHRoaWRlU2Nyb2xsYmFyOiBpc0lEZXZpY2UsXG5cdFx0XHRmYWRlU2Nyb2xsYmFyOiBpc0lEZXZpY2UgJiYgaGFzM2QsXG5cdFx0XHRzY3JvbGxiYXJDbGFzczogJycsXG5cblx0XHRcdC8vIFpvb21cblx0XHRcdHpvb206IGZhbHNlLFxuXHRcdFx0em9vbU1pbjogMSxcblx0XHRcdHpvb21NYXg6IDQsXG5cdFx0XHRkb3VibGVUYXBab29tOiAyLFxuXHRcdFx0d2hlZWxBY3Rpb246ICdzY3JvbGwnLFxuXG5cdFx0XHQvLyBTbmFwXG5cdFx0XHRzbmFwOiBmYWxzZSxcblx0XHRcdHNuYXBUaHJlc2hvbGQ6IDEsXG5cblx0XHRcdC8vIEV2ZW50c1xuXHRcdFx0b25SZWZyZXNoOiBudWxsLFxuXHRcdFx0b25CZWZvcmVTY3JvbGxTdGFydDogZnVuY3Rpb24gKGUpIHsgZS5wcmV2ZW50RGVmYXVsdCgpOyB9LFxuXHRcdFx0b25TY3JvbGxTdGFydDogbnVsbCxcblx0XHRcdG9uQmVmb3JlU2Nyb2xsTW92ZTogbnVsbCxcblx0XHRcdG9uU2Nyb2xsTW92ZTogbnVsbCxcblx0XHRcdG9uQmVmb3JlU2Nyb2xsRW5kOiBudWxsLFxuXHRcdFx0b25TY3JvbGxFbmQ6IG51bGwsXG5cdFx0XHRvblRvdWNoRW5kOiBudWxsLFxuXHRcdFx0b25EZXN0cm95OiBudWxsLFxuXHRcdFx0b25ab29tU3RhcnQ6IG51bGwsXG5cdFx0XHRvblpvb206IG51bGwsXG5cdFx0XHRvblpvb21FbmQ6IG51bGxcblx0XHR9O1xuXG5cdFx0Ly8gVXNlciBkZWZpbmVkIG9wdGlvbnNcblx0XHRmb3IgKGkgaW4gb3B0aW9ucykgdGhhdC5vcHRpb25zW2ldID0gb3B0aW9uc1tpXTtcblx0XHRcblx0XHQvLyBTZXQgc3RhcnRpbmcgcG9zaXRpb25cblx0XHR0aGF0LnggPSB0aGF0Lm9wdGlvbnMueDtcblx0XHR0aGF0LnkgPSB0aGF0Lm9wdGlvbnMueTtcblxuXHRcdC8vIE5vcm1hbGl6ZSBvcHRpb25zXG5cdFx0dGhhdC5vcHRpb25zLnVzZVRyYW5zZm9ybSA9IGhhc1RyYW5zZm9ybSAmJiB0aGF0Lm9wdGlvbnMudXNlVHJhbnNmb3JtO1xuXHRcdHRoYXQub3B0aW9ucy5oU2Nyb2xsYmFyID0gdGhhdC5vcHRpb25zLmhTY3JvbGwgJiYgdGhhdC5vcHRpb25zLmhTY3JvbGxiYXI7XG5cdFx0dGhhdC5vcHRpb25zLnZTY3JvbGxiYXIgPSB0aGF0Lm9wdGlvbnMudlNjcm9sbCAmJiB0aGF0Lm9wdGlvbnMudlNjcm9sbGJhcjtcblx0XHR0aGF0Lm9wdGlvbnMuem9vbSA9IHRoYXQub3B0aW9ucy51c2VUcmFuc2Zvcm0gJiYgdGhhdC5vcHRpb25zLnpvb207XG5cdFx0dGhhdC5vcHRpb25zLnVzZVRyYW5zaXRpb24gPSBoYXNUcmFuc2l0aW9uRW5kICYmIHRoYXQub3B0aW9ucy51c2VUcmFuc2l0aW9uO1xuXG5cdFx0Ly8gSGVscGVycyBGSVggQU5EUk9JRCBCVUchXG5cdFx0Ly8gdHJhbnNsYXRlM2QgYW5kIHNjYWxlIGRvZXNuJ3Qgd29yayB0b2dldGhlciFcblx0XHQvLyBJZ25vcmluZyAzZCBPTkxZIFdIRU4gWU9VIFNFVCB0aGF0Lm9wdGlvbnMuem9vbVxuXHRcdGlmICggdGhhdC5vcHRpb25zLnpvb20gJiYgaXNBbmRyb2lkICl7XG5cdFx0XHR0cmFuc2xhdGVaID0gJyc7XG5cdFx0fVxuXHRcdFxuXHRcdC8vIFNldCBzb21lIGRlZmF1bHQgc3R5bGVzXG5cdFx0dGhhdC5zY3JvbGxlci5zdHlsZVt0cmFuc2l0aW9uUHJvcGVydHldID0gdGhhdC5vcHRpb25zLnVzZVRyYW5zZm9ybSA/IGNzc1ZlbmRvciArICd0cmFuc2Zvcm0nIDogJ3RvcCBsZWZ0Jztcblx0XHR0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zaXRpb25EdXJhdGlvbl0gPSAnMCc7XG5cdFx0dGhhdC5zY3JvbGxlci5zdHlsZVt0cmFuc2Zvcm1PcmlnaW5dID0gJzAgMCc7XG5cdFx0aWYgKHRoYXQub3B0aW9ucy51c2VUcmFuc2l0aW9uKSB0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zaXRpb25UaW1pbmdGdW5jdGlvbl0gPSAnY3ViaWMtYmV6aWVyKDAuMzMsMC42NiwwLjY2LDEpJztcblx0XHRcblx0XHRpZiAodGhhdC5vcHRpb25zLnVzZVRyYW5zZm9ybSkgdGhhdC5zY3JvbGxlci5zdHlsZVt0cmFuc2Zvcm1dID0gJ3RyYW5zbGF0ZSgnICsgdGhhdC54ICsgJ3B4LCcgKyB0aGF0LnkgKyAncHgpJyArIHRyYW5zbGF0ZVo7XG5cdFx0ZWxzZSB0aGF0LnNjcm9sbGVyLnN0eWxlLmNzc1RleHQgKz0gJztwb3NpdGlvbjphYnNvbHV0ZTt0b3A6JyArIHRoYXQueSArICdweDtsZWZ0OicgKyB0aGF0LnggKyAncHgnO1xuXG5cdFx0aWYgKHRoYXQub3B0aW9ucy51c2VUcmFuc2l0aW9uKSB0aGF0Lm9wdGlvbnMuZml4ZWRTY3JvbGxiYXIgPSB0cnVlO1xuXG5cdFx0dGhhdC5yZWZyZXNoKCk7XG5cblx0XHR0aGF0Ll9iaW5kKFJFU0laRV9FViwgd2luZG93KTtcblx0XHR0aGF0Ll9iaW5kKFNUQVJUX0VWKTtcblx0XHRpZiAoIWhhc1RvdWNoKSB7XG5cdFx0XHRpZiAodGhhdC5vcHRpb25zLndoZWVsQWN0aW9uICE9ICdub25lJykge1xuXHRcdFx0XHR0aGF0Ll9iaW5kKCdET01Nb3VzZVNjcm9sbCcpO1xuXHRcdFx0XHR0aGF0Ll9iaW5kKCdtb3VzZXdoZWVsJyk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKHRoYXQub3B0aW9ucy5jaGVja0RPTUNoYW5nZXMpIHRoYXQuY2hlY2tET01UaW1lID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXHRcdFx0dGhhdC5fY2hlY2tET01DaGFuZ2VzKCk7XG5cdFx0fSwgNTAwKTtcblx0fTtcblxuLy8gUHJvdG90eXBlXG5pU2Nyb2xsLnByb3RvdHlwZSA9IHtcblx0ZW5hYmxlZDogdHJ1ZSxcblx0eDogMCxcblx0eTogMCxcblx0c3RlcHM6IFtdLFxuXHRzY2FsZTogMSxcblx0Y3VyclBhZ2VYOiAwLCBjdXJyUGFnZVk6IDAsXG5cdHBhZ2VzWDogW10sIHBhZ2VzWTogW10sXG5cdGFuaVRpbWU6IG51bGwsXG5cdHdoZWVsWm9vbUNvdW50OiAwLFxuXHRcblx0aGFuZGxlRXZlbnQ6IGZ1bmN0aW9uIChlKSB7XG5cdFx0dmFyIHRoYXQgPSB0aGlzO1xuXHRcdHN3aXRjaChlLnR5cGUpIHtcblx0XHRcdGNhc2UgU1RBUlRfRVY6XG5cdFx0XHRcdGlmICghaGFzVG91Y2ggJiYgZS5idXR0b24gIT09IDApIHJldHVybjtcblx0XHRcdFx0dGhhdC5fc3RhcnQoZSk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSBNT1ZFX0VWOiB0aGF0Ll9tb3ZlKGUpOyBicmVhaztcblx0XHRcdGNhc2UgRU5EX0VWOlxuXHRcdFx0Y2FzZSBDQU5DRUxfRVY6IHRoYXQuX2VuZChlKTsgYnJlYWs7XG5cdFx0XHRjYXNlIFJFU0laRV9FVjogdGhhdC5fcmVzaXplKCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSAnRE9NTW91c2VTY3JvbGwnOiBjYXNlICdtb3VzZXdoZWVsJzogdGhhdC5fd2hlZWwoZSk7IGJyZWFrO1xuXHRcdFx0Y2FzZSBUUk5FTkRfRVY6IHRoYXQuX3RyYW5zaXRpb25FbmQoZSk7IGJyZWFrO1xuXHRcdH1cblx0fSxcblx0XG5cdF9jaGVja0RPTUNoYW5nZXM6IGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodGhpcy5tb3ZlZCB8fCB0aGlzLnpvb21lZCB8fCB0aGlzLmFuaW1hdGluZyB8fFxuXHRcdFx0KHRoaXMuc2Nyb2xsZXJXID09IHRoaXMuc2Nyb2xsZXIub2Zmc2V0V2lkdGggKiB0aGlzLnNjYWxlICYmIHRoaXMuc2Nyb2xsZXJIID09IHRoaXMuc2Nyb2xsZXIub2Zmc2V0SGVpZ2h0ICogdGhpcy5zY2FsZSkpIHJldHVybjtcblxuXHRcdHRoaXMucmVmcmVzaCgpO1xuXHR9LFxuXHRcblx0X3Njcm9sbGJhcjogZnVuY3Rpb24gKGRpcikge1xuXHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdGJhcjtcblxuXHRcdGlmICghdGhhdFtkaXIgKyAnU2Nyb2xsYmFyJ10pIHtcblx0XHRcdGlmICh0aGF0W2RpciArICdTY3JvbGxiYXJXcmFwcGVyJ10pIHtcblx0XHRcdFx0aWYgKGhhc1RyYW5zZm9ybSkgdGhhdFtkaXIgKyAnU2Nyb2xsYmFySW5kaWNhdG9yJ10uc3R5bGVbdHJhbnNmb3JtXSA9ICcnO1xuXHRcdFx0XHR0aGF0W2RpciArICdTY3JvbGxiYXJXcmFwcGVyJ10ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGF0W2RpciArICdTY3JvbGxiYXJXcmFwcGVyJ10pO1xuXHRcdFx0XHR0aGF0W2RpciArICdTY3JvbGxiYXJXcmFwcGVyJ10gPSBudWxsO1xuXHRcdFx0XHR0aGF0W2RpciArICdTY3JvbGxiYXJJbmRpY2F0b3InXSA9IG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIXRoYXRbZGlyICsgJ1Njcm9sbGJhcldyYXBwZXInXSkge1xuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBzY3JvbGxiYXIgd3JhcHBlclxuXHRcdFx0YmFyID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cdFx0XHRpZiAodGhhdC5vcHRpb25zLnNjcm9sbGJhckNsYXNzKSBiYXIuY2xhc3NOYW1lID0gdGhhdC5vcHRpb25zLnNjcm9sbGJhckNsYXNzICsgZGlyLnRvVXBwZXJDYXNlKCk7XG5cdFx0XHRlbHNlIGJhci5zdHlsZS5jc3NUZXh0ID0gJ3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwOycgKyAoZGlyID09ICdoJyA/ICdoZWlnaHQ6N3B4O2JvdHRvbToxcHg7bGVmdDoycHg7cmlnaHQ6JyArICh0aGF0LnZTY3JvbGxiYXIgPyAnNycgOiAnMicpICsgJ3B4JyA6ICd3aWR0aDo3cHg7Ym90dG9tOicgKyAodGhhdC5oU2Nyb2xsYmFyID8gJzcnIDogJzInKSArICdweDt0b3A6MnB4O3JpZ2h0OjFweCcpO1xuXG5cdFx0XHRiYXIuc3R5bGUuY3NzVGV4dCArPSAnO3BvaW50ZXItZXZlbnRzOm5vbmU7JyArIGNzc1ZlbmRvciArICd0cmFuc2l0aW9uLXByb3BlcnR5Om9wYWNpdHk7JyArIGNzc1ZlbmRvciArICd0cmFuc2l0aW9uLWR1cmF0aW9uOicgKyAodGhhdC5vcHRpb25zLmZhZGVTY3JvbGxiYXIgPyAnMzUwbXMnIDogJzAnKSArICc7b3ZlcmZsb3c6aGlkZGVuO29wYWNpdHk6JyArICh0aGF0Lm9wdGlvbnMuaGlkZVNjcm9sbGJhciA/ICcwJyA6ICcxJyk7XG5cblx0XHRcdHRoYXQud3JhcHBlci5hcHBlbmRDaGlsZChiYXIpO1xuXHRcdFx0dGhhdFtkaXIgKyAnU2Nyb2xsYmFyV3JhcHBlciddID0gYmFyO1xuXG5cdFx0XHQvLyBDcmVhdGUgdGhlIHNjcm9sbGJhciBpbmRpY2F0b3Jcblx0XHRcdGJhciA9IGRvYy5jcmVhdGVFbGVtZW50KCdkaXYnKTtcblx0XHRcdGlmICghdGhhdC5vcHRpb25zLnNjcm9sbGJhckNsYXNzKSB7XG5cdFx0XHRcdGJhci5zdHlsZS5jc3NUZXh0ID0gJ3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTAwO2JhY2tncm91bmQ6cmdiYSgwLDAsMCwwLjUpO2JvcmRlcjoxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjkpOycgKyBjc3NWZW5kb3IgKyAnYmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94OycgKyBjc3NWZW5kb3IgKyAnYm94LXNpemluZzpib3JkZXItYm94OycgKyAoZGlyID09ICdoJyA/ICdoZWlnaHQ6MTAwJScgOiAnd2lkdGg6MTAwJScpICsgJzsnICsgY3NzVmVuZG9yICsgJ2JvcmRlci1yYWRpdXM6M3B4O2JvcmRlci1yYWRpdXM6M3B4Jztcblx0XHRcdH1cblx0XHRcdGJhci5zdHlsZS5jc3NUZXh0ICs9ICc7cG9pbnRlci1ldmVudHM6bm9uZTsnICsgY3NzVmVuZG9yICsgJ3RyYW5zaXRpb24tcHJvcGVydHk6JyArIGNzc1ZlbmRvciArICd0cmFuc2Zvcm07JyArIGNzc1ZlbmRvciArICd0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC4zMywwLjY2LDAuNjYsMSk7JyArIGNzc1ZlbmRvciArICd0cmFuc2l0aW9uLWR1cmF0aW9uOjA7JyArIGNzc1ZlbmRvciArICd0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLDApJyArIHRyYW5zbGF0ZVo7XG5cdFx0XHRpZiAodGhhdC5vcHRpb25zLnVzZVRyYW5zaXRpb24pIGJhci5zdHlsZS5jc3NUZXh0ICs9ICc7JyArIGNzc1ZlbmRvciArICd0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC4zMywwLjY2LDAuNjYsMSknO1xuXG5cdFx0XHR0aGF0W2RpciArICdTY3JvbGxiYXJXcmFwcGVyJ10uYXBwZW5kQ2hpbGQoYmFyKTtcblx0XHRcdHRoYXRbZGlyICsgJ1Njcm9sbGJhckluZGljYXRvciddID0gYmFyO1xuXHRcdH1cblxuXHRcdGlmIChkaXIgPT0gJ2gnKSB7XG5cdFx0XHR0aGF0LmhTY3JvbGxiYXJTaXplID0gdGhhdC5oU2Nyb2xsYmFyV3JhcHBlci5jbGllbnRXaWR0aDtcblx0XHRcdHRoYXQuaFNjcm9sbGJhckluZGljYXRvclNpemUgPSBtLm1heChtLnJvdW5kKHRoYXQuaFNjcm9sbGJhclNpemUgKiB0aGF0LmhTY3JvbGxiYXJTaXplIC8gdGhhdC5zY3JvbGxlclcpLCA4KTtcblx0XHRcdHRoYXQuaFNjcm9sbGJhckluZGljYXRvci5zdHlsZS53aWR0aCA9IHRoYXQuaFNjcm9sbGJhckluZGljYXRvclNpemUgKyAncHgnO1xuXHRcdFx0dGhhdC5oU2Nyb2xsYmFyTWF4U2Nyb2xsID0gdGhhdC5oU2Nyb2xsYmFyU2l6ZSAtIHRoYXQuaFNjcm9sbGJhckluZGljYXRvclNpemU7XG5cdFx0XHR0aGF0LmhTY3JvbGxiYXJQcm9wID0gdGhhdC5oU2Nyb2xsYmFyTWF4U2Nyb2xsIC8gdGhhdC5tYXhTY3JvbGxYO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGF0LnZTY3JvbGxiYXJTaXplID0gdGhhdC52U2Nyb2xsYmFyV3JhcHBlci5jbGllbnRIZWlnaHQ7XG5cdFx0XHR0aGF0LnZTY3JvbGxiYXJJbmRpY2F0b3JTaXplID0gbS5tYXgobS5yb3VuZCh0aGF0LnZTY3JvbGxiYXJTaXplICogdGhhdC52U2Nyb2xsYmFyU2l6ZSAvIHRoYXQuc2Nyb2xsZXJIKSwgOCk7XG5cdFx0XHR0aGF0LnZTY3JvbGxiYXJJbmRpY2F0b3Iuc3R5bGUuaGVpZ2h0ID0gdGhhdC52U2Nyb2xsYmFySW5kaWNhdG9yU2l6ZSArICdweCc7XG5cdFx0XHR0aGF0LnZTY3JvbGxiYXJNYXhTY3JvbGwgPSB0aGF0LnZTY3JvbGxiYXJTaXplIC0gdGhhdC52U2Nyb2xsYmFySW5kaWNhdG9yU2l6ZTtcblx0XHRcdHRoYXQudlNjcm9sbGJhclByb3AgPSB0aGF0LnZTY3JvbGxiYXJNYXhTY3JvbGwgLyB0aGF0Lm1heFNjcm9sbFk7XG5cdFx0fVxuXG5cdFx0Ly8gUmVzZXQgcG9zaXRpb25cblx0XHR0aGF0Ll9zY3JvbGxiYXJQb3MoZGlyLCB0cnVlKTtcblx0fSxcblx0XG5cdF9yZXNpemU6IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXM7XG5cdFx0c2V0VGltZW91dChmdW5jdGlvbiAoKSB7IHRoYXQucmVmcmVzaCgpOyB9LCBpc0FuZHJvaWQgPyAyMDAgOiAwKTtcblx0fSxcblx0XG5cdF9wb3M6IGZ1bmN0aW9uICh4LCB5KSB7XG5cdFx0aWYgKHRoaXMuem9vbWVkKSByZXR1cm47XG5cblx0XHR4ID0gdGhpcy5oU2Nyb2xsID8geCA6IDA7XG5cdFx0eSA9IHRoaXMudlNjcm9sbCA/IHkgOiAwO1xuXG5cdFx0aWYgKHRoaXMub3B0aW9ucy51c2VUcmFuc2Zvcm0pIHtcblx0XHRcdHRoaXMuc2Nyb2xsZXIuc3R5bGVbdHJhbnNmb3JtXSA9ICd0cmFuc2xhdGUoJyArIHggKyAncHgsJyArIHkgKyAncHgpIHNjYWxlKCcgKyB0aGlzLnNjYWxlICsgJyknICsgdHJhbnNsYXRlWjtcblx0XHR9IGVsc2Uge1xuXHRcdFx0eCA9IG0ucm91bmQoeCk7XG5cdFx0XHR5ID0gbS5yb3VuZCh5KTtcblx0XHRcdHRoaXMuc2Nyb2xsZXIuc3R5bGUubGVmdCA9IHggKyAncHgnO1xuXHRcdFx0dGhpcy5zY3JvbGxlci5zdHlsZS50b3AgPSB5ICsgJ3B4Jztcblx0XHR9XG5cblx0XHR0aGlzLnggPSB4O1xuXHRcdHRoaXMueSA9IHk7XG5cblx0XHR0aGlzLl9zY3JvbGxiYXJQb3MoJ2gnKTtcblx0XHR0aGlzLl9zY3JvbGxiYXJQb3MoJ3YnKTtcblx0fSxcblxuXHRfc2Nyb2xsYmFyUG9zOiBmdW5jdGlvbiAoZGlyLCBoaWRkZW4pIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRwb3MgPSBkaXIgPT0gJ2gnID8gdGhhdC54IDogdGhhdC55LFxuXHRcdFx0c2l6ZTtcblxuXHRcdGlmICghdGhhdFtkaXIgKyAnU2Nyb2xsYmFyJ10pIHJldHVybjtcblxuXHRcdHBvcyA9IHRoYXRbZGlyICsgJ1Njcm9sbGJhclByb3AnXSAqIHBvcztcblxuXHRcdGlmIChwb3MgPCAwKSB7XG5cdFx0XHRpZiAoIXRoYXQub3B0aW9ucy5maXhlZFNjcm9sbGJhcikge1xuXHRcdFx0XHRzaXplID0gdGhhdFtkaXIgKyAnU2Nyb2xsYmFySW5kaWNhdG9yU2l6ZSddICsgbS5yb3VuZChwb3MgKiAzKTtcblx0XHRcdFx0aWYgKHNpemUgPCA4KSBzaXplID0gODtcblx0XHRcdFx0dGhhdFtkaXIgKyAnU2Nyb2xsYmFySW5kaWNhdG9yJ10uc3R5bGVbZGlyID09ICdoJyA/ICd3aWR0aCcgOiAnaGVpZ2h0J10gPSBzaXplICsgJ3B4Jztcblx0XHRcdH1cblx0XHRcdHBvcyA9IDA7XG5cdFx0fSBlbHNlIGlmIChwb3MgPiB0aGF0W2RpciArICdTY3JvbGxiYXJNYXhTY3JvbGwnXSkge1xuXHRcdFx0aWYgKCF0aGF0Lm9wdGlvbnMuZml4ZWRTY3JvbGxiYXIpIHtcblx0XHRcdFx0c2l6ZSA9IHRoYXRbZGlyICsgJ1Njcm9sbGJhckluZGljYXRvclNpemUnXSAtIG0ucm91bmQoKHBvcyAtIHRoYXRbZGlyICsgJ1Njcm9sbGJhck1heFNjcm9sbCddKSAqIDMpO1xuXHRcdFx0XHRpZiAoc2l6ZSA8IDgpIHNpemUgPSA4O1xuXHRcdFx0XHR0aGF0W2RpciArICdTY3JvbGxiYXJJbmRpY2F0b3InXS5zdHlsZVtkaXIgPT0gJ2gnID8gJ3dpZHRoJyA6ICdoZWlnaHQnXSA9IHNpemUgKyAncHgnO1xuXHRcdFx0XHRwb3MgPSB0aGF0W2RpciArICdTY3JvbGxiYXJNYXhTY3JvbGwnXSArICh0aGF0W2RpciArICdTY3JvbGxiYXJJbmRpY2F0b3JTaXplJ10gLSBzaXplKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHBvcyA9IHRoYXRbZGlyICsgJ1Njcm9sbGJhck1heFNjcm9sbCddO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoYXRbZGlyICsgJ1Njcm9sbGJhcldyYXBwZXInXS5zdHlsZVt0cmFuc2l0aW9uRGVsYXldID0gJzAnO1xuXHRcdHRoYXRbZGlyICsgJ1Njcm9sbGJhcldyYXBwZXInXS5zdHlsZS5vcGFjaXR5ID0gaGlkZGVuICYmIHRoYXQub3B0aW9ucy5oaWRlU2Nyb2xsYmFyID8gJzAnIDogJzEnO1xuXHRcdHRoYXRbZGlyICsgJ1Njcm9sbGJhckluZGljYXRvciddLnN0eWxlW3RyYW5zZm9ybV0gPSAndHJhbnNsYXRlKCcgKyAoZGlyID09ICdoJyA/IHBvcyArICdweCwwKScgOiAnMCwnICsgcG9zICsgJ3B4KScpICsgdHJhbnNsYXRlWjtcblx0fSxcblx0XG5cdF9zdGFydDogZnVuY3Rpb24gKGUpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRwb2ludCA9IGhhc1RvdWNoID8gZS50b3VjaGVzWzBdIDogZSxcblx0XHRcdG1hdHJpeCwgeCwgeSxcblx0XHRcdGMxLCBjMjtcblxuXHRcdGlmICghdGhhdC5lbmFibGVkKSByZXR1cm47XG5cblx0XHRpZiAodGhhdC5vcHRpb25zLm9uQmVmb3JlU2Nyb2xsU3RhcnQpIHRoYXQub3B0aW9ucy5vbkJlZm9yZVNjcm9sbFN0YXJ0LmNhbGwodGhhdCwgZSk7XG5cblx0XHRpZiAodGhhdC5vcHRpb25zLnVzZVRyYW5zaXRpb24gfHwgdGhhdC5vcHRpb25zLnpvb20pIHRoYXQuX3RyYW5zaXRpb25UaW1lKDApO1xuXG5cdFx0dGhhdC5tb3ZlZCA9IGZhbHNlO1xuXHRcdHRoYXQuYW5pbWF0aW5nID0gZmFsc2U7XG5cdFx0dGhhdC56b29tZWQgPSBmYWxzZTtcblx0XHR0aGF0LmRpc3RYID0gMDtcblx0XHR0aGF0LmRpc3RZID0gMDtcblx0XHR0aGF0LmFic0Rpc3RYID0gMDtcblx0XHR0aGF0LmFic0Rpc3RZID0gMDtcblx0XHR0aGF0LmRpclggPSAwO1xuXHRcdHRoYXQuZGlyWSA9IDA7XG5cblx0XHQvLyBHZXN0dXJlIHN0YXJ0XG5cdFx0aWYgKHRoYXQub3B0aW9ucy56b29tICYmIGhhc1RvdWNoICYmIGUudG91Y2hlcy5sZW5ndGggPiAxKSB7XG5cdFx0XHRjMSA9IG0uYWJzKGUudG91Y2hlc1swXS5wYWdlWC1lLnRvdWNoZXNbMV0ucGFnZVgpO1xuXHRcdFx0YzIgPSBtLmFicyhlLnRvdWNoZXNbMF0ucGFnZVktZS50b3VjaGVzWzFdLnBhZ2VZKTtcblx0XHRcdHRoYXQudG91Y2hlc0Rpc3RTdGFydCA9IG0uc3FydChjMSAqIGMxICsgYzIgKiBjMik7XG5cblx0XHRcdHRoYXQub3JpZ2luWCA9IG0uYWJzKGUudG91Y2hlc1swXS5wYWdlWCArIGUudG91Y2hlc1sxXS5wYWdlWCAtIHRoYXQud3JhcHBlck9mZnNldExlZnQgKiAyKSAvIDIgLSB0aGF0Lng7XG5cdFx0XHR0aGF0Lm9yaWdpblkgPSBtLmFicyhlLnRvdWNoZXNbMF0ucGFnZVkgKyBlLnRvdWNoZXNbMV0ucGFnZVkgLSB0aGF0LndyYXBwZXJPZmZzZXRUb3AgKiAyKSAvIDIgLSB0aGF0Lnk7XG5cblx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25ab29tU3RhcnQpIHRoYXQub3B0aW9ucy5vblpvb21TdGFydC5jYWxsKHRoYXQsIGUpO1xuXHRcdH1cblxuXHRcdGlmICh0aGF0Lm9wdGlvbnMubW9tZW50dW0pIHtcblx0XHRcdGlmICh0aGF0Lm9wdGlvbnMudXNlVHJhbnNmb3JtKSB7XG5cdFx0XHRcdC8vIFZlcnkgbGFtZSBnZW5lcmFsIHB1cnBvc2UgYWx0ZXJuYXRpdmUgdG8gQ1NTTWF0cml4XG5cdFx0XHRcdG1hdHJpeCA9IGdldENvbXB1dGVkU3R5bGUodGhhdC5zY3JvbGxlciwgbnVsbClbdHJhbnNmb3JtXS5yZXBsYWNlKC9bXjAtOVxcLS4sXS9nLCAnJykuc3BsaXQoJywnKTtcblx0XHRcdFx0eCA9ICsobWF0cml4WzEyXSB8fCBtYXRyaXhbNF0pO1xuXHRcdFx0XHR5ID0gKyhtYXRyaXhbMTNdIHx8IG1hdHJpeFs1XSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR4ID0gK2dldENvbXB1dGVkU3R5bGUodGhhdC5zY3JvbGxlciwgbnVsbCkubGVmdC5yZXBsYWNlKC9bXjAtOS1dL2csICcnKTtcblx0XHRcdFx0eSA9ICtnZXRDb21wdXRlZFN0eWxlKHRoYXQuc2Nyb2xsZXIsIG51bGwpLnRvcC5yZXBsYWNlKC9bXjAtOS1dL2csICcnKTtcblx0XHRcdH1cblx0XHRcdFxuXHRcdFx0aWYgKHggIT0gdGhhdC54IHx8IHkgIT0gdGhhdC55KSB7XG5cdFx0XHRcdGlmICh0aGF0Lm9wdGlvbnMudXNlVHJhbnNpdGlvbikgdGhhdC5fdW5iaW5kKFRSTkVORF9FVik7XG5cdFx0XHRcdGVsc2UgY2FuY2VsRnJhbWUodGhhdC5hbmlUaW1lKTtcblx0XHRcdFx0dGhhdC5zdGVwcyA9IFtdO1xuXHRcdFx0XHR0aGF0Ll9wb3MoeCwgeSk7XG5cdFx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25TY3JvbGxFbmQpIHRoYXQub3B0aW9ucy5vblNjcm9sbEVuZC5jYWxsKHRoYXQpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoYXQuYWJzU3RhcnRYID0gdGhhdC54O1x0Ly8gTmVlZGVkIGJ5IHNuYXAgdGhyZXNob2xkXG5cdFx0dGhhdC5hYnNTdGFydFkgPSB0aGF0Lnk7XG5cblx0XHR0aGF0LnN0YXJ0WCA9IHRoYXQueDtcblx0XHR0aGF0LnN0YXJ0WSA9IHRoYXQueTtcblx0XHR0aGF0LnBvaW50WCA9IHBvaW50LnBhZ2VYO1xuXHRcdHRoYXQucG9pbnRZID0gcG9pbnQucGFnZVk7XG5cblx0XHR0aGF0LnN0YXJ0VGltZSA9IGUudGltZVN0YW1wIHx8IERhdGUubm93KCk7XG5cblx0XHRpZiAodGhhdC5vcHRpb25zLm9uU2Nyb2xsU3RhcnQpIHRoYXQub3B0aW9ucy5vblNjcm9sbFN0YXJ0LmNhbGwodGhhdCwgZSk7XG5cblx0XHR0aGF0Ll9iaW5kKE1PVkVfRVYsIHdpbmRvdyk7XG5cdFx0dGhhdC5fYmluZChFTkRfRVYsIHdpbmRvdyk7XG5cdFx0dGhhdC5fYmluZChDQU5DRUxfRVYsIHdpbmRvdyk7XG5cdH0sXG5cdFxuXHRfbW92ZTogZnVuY3Rpb24gKGUpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRwb2ludCA9IGhhc1RvdWNoID8gZS50b3VjaGVzWzBdIDogZSxcblx0XHRcdGRlbHRhWCA9IHBvaW50LnBhZ2VYIC0gdGhhdC5wb2ludFgsXG5cdFx0XHRkZWx0YVkgPSBwb2ludC5wYWdlWSAtIHRoYXQucG9pbnRZLFxuXHRcdFx0bmV3WCA9IHRoYXQueCArIGRlbHRhWCxcblx0XHRcdG5ld1kgPSB0aGF0LnkgKyBkZWx0YVksXG5cdFx0XHRjMSwgYzIsIHNjYWxlLFxuXHRcdFx0dGltZXN0YW1wID0gZS50aW1lU3RhbXAgfHwgRGF0ZS5ub3coKTtcblxuXHRcdGlmICh0aGF0Lm9wdGlvbnMub25CZWZvcmVTY3JvbGxNb3ZlKSB0aGF0Lm9wdGlvbnMub25CZWZvcmVTY3JvbGxNb3ZlLmNhbGwodGhhdCwgZSk7XG5cblx0XHQvLyBab29tXG5cdFx0aWYgKHRoYXQub3B0aW9ucy56b29tICYmIGhhc1RvdWNoICYmIGUudG91Y2hlcy5sZW5ndGggPiAxKSB7XG5cdFx0XHRjMSA9IG0uYWJzKGUudG91Y2hlc1swXS5wYWdlWCAtIGUudG91Y2hlc1sxXS5wYWdlWCk7XG5cdFx0XHRjMiA9IG0uYWJzKGUudG91Y2hlc1swXS5wYWdlWSAtIGUudG91Y2hlc1sxXS5wYWdlWSk7XG5cdFx0XHR0aGF0LnRvdWNoZXNEaXN0ID0gbS5zcXJ0KGMxKmMxK2MyKmMyKTtcblxuXHRcdFx0dGhhdC56b29tZWQgPSB0cnVlO1xuXG5cdFx0XHRzY2FsZSA9IDEgLyB0aGF0LnRvdWNoZXNEaXN0U3RhcnQgKiB0aGF0LnRvdWNoZXNEaXN0ICogdGhpcy5zY2FsZTtcblxuXHRcdFx0aWYgKHNjYWxlIDwgdGhhdC5vcHRpb25zLnpvb21NaW4pIHNjYWxlID0gMC41ICogdGhhdC5vcHRpb25zLnpvb21NaW4gKiBNYXRoLnBvdygyLjAsIHNjYWxlIC8gdGhhdC5vcHRpb25zLnpvb21NaW4pO1xuXHRcdFx0ZWxzZSBpZiAoc2NhbGUgPiB0aGF0Lm9wdGlvbnMuem9vbU1heCkgc2NhbGUgPSAyLjAgKiB0aGF0Lm9wdGlvbnMuem9vbU1heCAqIE1hdGgucG93KDAuNSwgdGhhdC5vcHRpb25zLnpvb21NYXggLyBzY2FsZSk7XG5cblx0XHRcdHRoYXQubGFzdFNjYWxlID0gc2NhbGUgLyB0aGlzLnNjYWxlO1xuXG5cdFx0XHRuZXdYID0gdGhpcy5vcmlnaW5YIC0gdGhpcy5vcmlnaW5YICogdGhhdC5sYXN0U2NhbGUgKyB0aGlzLng7XG5cdFx0XHRuZXdZID0gdGhpcy5vcmlnaW5ZIC0gdGhpcy5vcmlnaW5ZICogdGhhdC5sYXN0U2NhbGUgKyB0aGlzLnk7XG5cblx0XHRcdHRoaXMuc2Nyb2xsZXIuc3R5bGVbdHJhbnNmb3JtXSA9ICd0cmFuc2xhdGUoJyArIG5ld1ggKyAncHgsJyArIG5ld1kgKyAncHgpIHNjYWxlKCcgKyBzY2FsZSArICcpJyArIHRyYW5zbGF0ZVo7XG5cblx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25ab29tKSB0aGF0Lm9wdGlvbnMub25ab29tLmNhbGwodGhhdCwgZSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhhdC5wb2ludFggPSBwb2ludC5wYWdlWDtcblx0XHR0aGF0LnBvaW50WSA9IHBvaW50LnBhZ2VZO1xuXG5cdFx0Ly8gU2xvdyBkb3duIGlmIG91dHNpZGUgb2YgdGhlIGJvdW5kYXJpZXNcblx0XHRpZiAobmV3WCA+IDAgfHwgbmV3WCA8IHRoYXQubWF4U2Nyb2xsWCkge1xuXHRcdFx0bmV3WCA9IHRoYXQub3B0aW9ucy5ib3VuY2UgPyB0aGF0LnggKyAoZGVsdGFYIC8gMikgOiBuZXdYID49IDAgfHwgdGhhdC5tYXhTY3JvbGxYID49IDAgPyAwIDogdGhhdC5tYXhTY3JvbGxYO1xuXHRcdH1cblx0XHRpZiAobmV3WSA+IHRoYXQubWluU2Nyb2xsWSB8fCBuZXdZIDwgdGhhdC5tYXhTY3JvbGxZKSB7XG5cdFx0XHRuZXdZID0gdGhhdC5vcHRpb25zLmJvdW5jZSA/IHRoYXQueSArIChkZWx0YVkgLyAyKSA6IG5ld1kgPj0gdGhhdC5taW5TY3JvbGxZIHx8IHRoYXQubWF4U2Nyb2xsWSA+PSAwID8gdGhhdC5taW5TY3JvbGxZIDogdGhhdC5tYXhTY3JvbGxZO1xuXHRcdH1cblxuXHRcdHRoYXQuZGlzdFggKz0gZGVsdGFYO1xuXHRcdHRoYXQuZGlzdFkgKz0gZGVsdGFZO1xuXHRcdHRoYXQuYWJzRGlzdFggPSBtLmFicyh0aGF0LmRpc3RYKTtcblx0XHR0aGF0LmFic0Rpc3RZID0gbS5hYnModGhhdC5kaXN0WSk7XG5cblx0XHRpZiAodGhhdC5hYnNEaXN0WCA8IDYgJiYgdGhhdC5hYnNEaXN0WSA8IDYpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBMb2NrIGRpcmVjdGlvblxuXHRcdGlmICh0aGF0Lm9wdGlvbnMubG9ja0RpcmVjdGlvbikge1xuXHRcdFx0aWYgKHRoYXQuYWJzRGlzdFggPiB0aGF0LmFic0Rpc3RZICsgNSkge1xuXHRcdFx0XHRuZXdZID0gdGhhdC55O1xuXHRcdFx0XHRkZWx0YVkgPSAwO1xuXHRcdFx0fSBlbHNlIGlmICh0aGF0LmFic0Rpc3RZID4gdGhhdC5hYnNEaXN0WCArIDUpIHtcblx0XHRcdFx0bmV3WCA9IHRoYXQueDtcblx0XHRcdFx0ZGVsdGFYID0gMDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aGF0Lm1vdmVkID0gdHJ1ZTtcblx0XHR0aGF0Ll9wb3MobmV3WCwgbmV3WSk7XG5cdFx0dGhhdC5kaXJYID0gZGVsdGFYID4gMCA/IC0xIDogZGVsdGFYIDwgMCA/IDEgOiAwO1xuXHRcdHRoYXQuZGlyWSA9IGRlbHRhWSA+IDAgPyAtMSA6IGRlbHRhWSA8IDAgPyAxIDogMDtcblxuXHRcdGlmICh0aW1lc3RhbXAgLSB0aGF0LnN0YXJ0VGltZSA+IDMwMCkge1xuXHRcdFx0dGhhdC5zdGFydFRpbWUgPSB0aW1lc3RhbXA7XG5cdFx0XHR0aGF0LnN0YXJ0WCA9IHRoYXQueDtcblx0XHRcdHRoYXQuc3RhcnRZID0gdGhhdC55O1xuXHRcdH1cblx0XHRcblx0XHRpZiAodGhhdC5vcHRpb25zLm9uU2Nyb2xsTW92ZSkgdGhhdC5vcHRpb25zLm9uU2Nyb2xsTW92ZS5jYWxsKHRoYXQsIGUpO1xuXHR9LFxuXHRcblx0X2VuZDogZnVuY3Rpb24gKGUpIHtcblx0XHRpZiAoaGFzVG91Y2ggJiYgZS50b3VjaGVzLmxlbmd0aCAhPT0gMCkgcmV0dXJuO1xuXG5cdFx0dmFyIHRoYXQgPSB0aGlzLFxuXHRcdFx0cG9pbnQgPSBoYXNUb3VjaCA/IGUuY2hhbmdlZFRvdWNoZXNbMF0gOiBlLFxuXHRcdFx0dGFyZ2V0LCBldixcblx0XHRcdG1vbWVudHVtWCA9IHsgZGlzdDowLCB0aW1lOjAgfSxcblx0XHRcdG1vbWVudHVtWSA9IHsgZGlzdDowLCB0aW1lOjAgfSxcblx0XHRcdGR1cmF0aW9uID0gKGUudGltZVN0YW1wIHx8IERhdGUubm93KCkpIC0gdGhhdC5zdGFydFRpbWUsXG5cdFx0XHRuZXdQb3NYID0gdGhhdC54LFxuXHRcdFx0bmV3UG9zWSA9IHRoYXQueSxcblx0XHRcdGRpc3RYLCBkaXN0WSxcblx0XHRcdG5ld0R1cmF0aW9uLFxuXHRcdFx0c25hcCxcblx0XHRcdHNjYWxlO1xuXG5cdFx0dGhhdC5fdW5iaW5kKE1PVkVfRVYsIHdpbmRvdyk7XG5cdFx0dGhhdC5fdW5iaW5kKEVORF9FViwgd2luZG93KTtcblx0XHR0aGF0Ll91bmJpbmQoQ0FOQ0VMX0VWLCB3aW5kb3cpO1xuXG5cdFx0aWYgKHRoYXQub3B0aW9ucy5vbkJlZm9yZVNjcm9sbEVuZCkgdGhhdC5vcHRpb25zLm9uQmVmb3JlU2Nyb2xsRW5kLmNhbGwodGhhdCwgZSk7XG5cblx0XHRpZiAodGhhdC56b29tZWQpIHtcblx0XHRcdHNjYWxlID0gdGhhdC5zY2FsZSAqIHRoYXQubGFzdFNjYWxlO1xuXHRcdFx0c2NhbGUgPSBNYXRoLm1heCh0aGF0Lm9wdGlvbnMuem9vbU1pbiwgc2NhbGUpO1xuXHRcdFx0c2NhbGUgPSBNYXRoLm1pbih0aGF0Lm9wdGlvbnMuem9vbU1heCwgc2NhbGUpO1xuXHRcdFx0dGhhdC5sYXN0U2NhbGUgPSBzY2FsZSAvIHRoYXQuc2NhbGU7XG5cdFx0XHR0aGF0LnNjYWxlID0gc2NhbGU7XG5cblx0XHRcdHRoYXQueCA9IHRoYXQub3JpZ2luWCAtIHRoYXQub3JpZ2luWCAqIHRoYXQubGFzdFNjYWxlICsgdGhhdC54O1xuXHRcdFx0dGhhdC55ID0gdGhhdC5vcmlnaW5ZIC0gdGhhdC5vcmlnaW5ZICogdGhhdC5sYXN0U2NhbGUgKyB0aGF0Lnk7XG5cdFx0XHRcblx0XHRcdHRoYXQuc2Nyb2xsZXIuc3R5bGVbdHJhbnNpdGlvbkR1cmF0aW9uXSA9ICcyMDBtcyc7XG5cdFx0XHR0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zZm9ybV0gPSAndHJhbnNsYXRlKCcgKyB0aGF0LnggKyAncHgsJyArIHRoYXQueSArICdweCkgc2NhbGUoJyArIHRoYXQuc2NhbGUgKyAnKScgKyB0cmFuc2xhdGVaO1xuXHRcdFx0XG5cdFx0XHR0aGF0Lnpvb21lZCA9IGZhbHNlO1xuXHRcdFx0dGhhdC5yZWZyZXNoKCk7XG5cblx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25ab29tRW5kKSB0aGF0Lm9wdGlvbnMub25ab29tRW5kLmNhbGwodGhhdCwgZSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCF0aGF0Lm1vdmVkKSB7XG5cdFx0XHRpZiAoaGFzVG91Y2gpIHtcblx0XHRcdFx0aWYgKHRoYXQuZG91YmxlVGFwVGltZXIgJiYgdGhhdC5vcHRpb25zLnpvb20pIHtcblx0XHRcdFx0XHQvLyBEb3VibGUgdGFwcGVkXG5cdFx0XHRcdFx0Y2xlYXJUaW1lb3V0KHRoYXQuZG91YmxlVGFwVGltZXIpO1xuXHRcdFx0XHRcdHRoYXQuZG91YmxlVGFwVGltZXIgPSBudWxsO1xuXHRcdFx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25ab29tU3RhcnQpIHRoYXQub3B0aW9ucy5vblpvb21TdGFydC5jYWxsKHRoYXQsIGUpO1xuXHRcdFx0XHRcdHRoYXQuem9vbSh0aGF0LnBvaW50WCwgdGhhdC5wb2ludFksIHRoYXQuc2NhbGUgPT0gMSA/IHRoYXQub3B0aW9ucy5kb3VibGVUYXBab29tIDogMSk7XG5cdFx0XHRcdFx0aWYgKHRoYXQub3B0aW9ucy5vblpvb21FbmQpIHtcblx0XHRcdFx0XHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHRoYXQub3B0aW9ucy5vblpvb21FbmQuY2FsbCh0aGF0LCBlKTtcblx0XHRcdFx0XHRcdH0sIDIwMCk7IC8vIDIwMCBpcyBkZWZhdWx0IHpvb20gZHVyYXRpb25cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSBpZiAodGhpcy5vcHRpb25zLmhhbmRsZUNsaWNrKSB7XG5cdFx0XHRcdFx0dGhhdC5kb3VibGVUYXBUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRcdFx0dGhhdC5kb3VibGVUYXBUaW1lciA9IG51bGw7XG5cblx0XHRcdFx0XHRcdC8vIEZpbmQgdGhlIGxhc3QgdG91Y2hlZCBlbGVtZW50XG5cdFx0XHRcdFx0XHR0YXJnZXQgPSBwb2ludC50YXJnZXQ7XG5cdFx0XHRcdFx0XHR3aGlsZSAodGFyZ2V0Lm5vZGVUeXBlICE9IDEpIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlO1xuXG5cdFx0XHRcdFx0XHRpZiAodGFyZ2V0LnRhZ05hbWUgIT0gJ1NFTEVDVCcgJiYgdGFyZ2V0LnRhZ05hbWUgIT0gJ0lOUFVUJyAmJiB0YXJnZXQudGFnTmFtZSAhPSAnVEVYVEFSRUEnKSB7XG5cdFx0XHRcdFx0XHRcdGV2ID0gZG9jLmNyZWF0ZUV2ZW50KCdNb3VzZUV2ZW50cycpO1xuXHRcdFx0XHRcdFx0XHRldi5pbml0TW91c2VFdmVudCgnY2xpY2snLCB0cnVlLCB0cnVlLCBlLnZpZXcsIDEsXG5cdFx0XHRcdFx0XHRcdFx0cG9pbnQuc2NyZWVuWCwgcG9pbnQuc2NyZWVuWSwgcG9pbnQuY2xpZW50WCwgcG9pbnQuY2xpZW50WSxcblx0XHRcdFx0XHRcdFx0XHRlLmN0cmxLZXksIGUuYWx0S2V5LCBlLnNoaWZ0S2V5LCBlLm1ldGFLZXksXG5cdFx0XHRcdFx0XHRcdFx0MCwgbnVsbCk7XG5cdFx0XHRcdFx0XHRcdGV2Ll9mYWtlID0gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0dGFyZ2V0LmRpc3BhdGNoRXZlbnQoZXYpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0sIHRoYXQub3B0aW9ucy56b29tID8gMjUwIDogMCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0dGhhdC5fcmVzZXRQb3MoNDAwKTtcblxuXHRcdFx0aWYgKHRoYXQub3B0aW9ucy5vblRvdWNoRW5kKSB0aGF0Lm9wdGlvbnMub25Ub3VjaEVuZC5jYWxsKHRoYXQsIGUpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmIChkdXJhdGlvbiA8IDMwMCAmJiB0aGF0Lm9wdGlvbnMubW9tZW50dW0pIHtcblx0XHRcdG1vbWVudHVtWCA9IG5ld1Bvc1ggPyB0aGF0Ll9tb21lbnR1bShuZXdQb3NYIC0gdGhhdC5zdGFydFgsIGR1cmF0aW9uLCAtdGhhdC54LCB0aGF0LnNjcm9sbGVyVyAtIHRoYXQud3JhcHBlclcgKyB0aGF0LngsIHRoYXQub3B0aW9ucy5ib3VuY2UgPyB0aGF0LndyYXBwZXJXIDogMCkgOiBtb21lbnR1bVg7XG5cdFx0XHRtb21lbnR1bVkgPSBuZXdQb3NZID8gdGhhdC5fbW9tZW50dW0obmV3UG9zWSAtIHRoYXQuc3RhcnRZLCBkdXJhdGlvbiwgLXRoYXQueSwgKHRoYXQubWF4U2Nyb2xsWSA8IDAgPyB0aGF0LnNjcm9sbGVySCAtIHRoYXQud3JhcHBlckggKyB0aGF0LnkgLSB0aGF0Lm1pblNjcm9sbFkgOiAwKSwgdGhhdC5vcHRpb25zLmJvdW5jZSA/IHRoYXQud3JhcHBlckggOiAwKSA6IG1vbWVudHVtWTtcblxuXHRcdFx0bmV3UG9zWCA9IHRoYXQueCArIG1vbWVudHVtWC5kaXN0O1xuXHRcdFx0bmV3UG9zWSA9IHRoYXQueSArIG1vbWVudHVtWS5kaXN0O1xuXG5cdFx0XHRpZiAoKHRoYXQueCA+IDAgJiYgbmV3UG9zWCA+IDApIHx8ICh0aGF0LnggPCB0aGF0Lm1heFNjcm9sbFggJiYgbmV3UG9zWCA8IHRoYXQubWF4U2Nyb2xsWCkpIG1vbWVudHVtWCA9IHsgZGlzdDowLCB0aW1lOjAgfTtcblx0XHRcdGlmICgodGhhdC55ID4gdGhhdC5taW5TY3JvbGxZICYmIG5ld1Bvc1kgPiB0aGF0Lm1pblNjcm9sbFkpIHx8ICh0aGF0LnkgPCB0aGF0Lm1heFNjcm9sbFkgJiYgbmV3UG9zWSA8IHRoYXQubWF4U2Nyb2xsWSkpIG1vbWVudHVtWSA9IHsgZGlzdDowLCB0aW1lOjAgfTtcblx0XHR9XG5cblx0XHRpZiAobW9tZW50dW1YLmRpc3QgfHwgbW9tZW50dW1ZLmRpc3QpIHtcblx0XHRcdG5ld0R1cmF0aW9uID0gbS5tYXgobS5tYXgobW9tZW50dW1YLnRpbWUsIG1vbWVudHVtWS50aW1lKSwgMTApO1xuXG5cdFx0XHQvLyBEbyB3ZSBuZWVkIHRvIHNuYXA/XG5cdFx0XHRpZiAodGhhdC5vcHRpb25zLnNuYXApIHtcblx0XHRcdFx0ZGlzdFggPSBuZXdQb3NYIC0gdGhhdC5hYnNTdGFydFg7XG5cdFx0XHRcdGRpc3RZID0gbmV3UG9zWSAtIHRoYXQuYWJzU3RhcnRZO1xuXHRcdFx0XHRpZiAobS5hYnMoZGlzdFgpIDwgdGhhdC5vcHRpb25zLnNuYXBUaHJlc2hvbGQgJiYgbS5hYnMoZGlzdFkpIDwgdGhhdC5vcHRpb25zLnNuYXBUaHJlc2hvbGQpIHsgdGhhdC5zY3JvbGxUbyh0aGF0LmFic1N0YXJ0WCwgdGhhdC5hYnNTdGFydFksIDIwMCk7IH1cblx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0c25hcCA9IHRoYXQuX3NuYXAobmV3UG9zWCwgbmV3UG9zWSk7XG5cdFx0XHRcdFx0bmV3UG9zWCA9IHNuYXAueDtcblx0XHRcdFx0XHRuZXdQb3NZID0gc25hcC55O1xuXHRcdFx0XHRcdG5ld0R1cmF0aW9uID0gbS5tYXgoc25hcC50aW1lLCBuZXdEdXJhdGlvbik7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0dGhhdC5zY3JvbGxUbyhtLnJvdW5kKG5ld1Bvc1gpLCBtLnJvdW5kKG5ld1Bvc1kpLCBuZXdEdXJhdGlvbik7XG5cblx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25Ub3VjaEVuZCkgdGhhdC5vcHRpb25zLm9uVG91Y2hFbmQuY2FsbCh0aGF0LCBlKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEbyB3ZSBuZWVkIHRvIHNuYXA/XG5cdFx0aWYgKHRoYXQub3B0aW9ucy5zbmFwKSB7XG5cdFx0XHRkaXN0WCA9IG5ld1Bvc1ggLSB0aGF0LmFic1N0YXJ0WDtcblx0XHRcdGRpc3RZID0gbmV3UG9zWSAtIHRoYXQuYWJzU3RhcnRZO1xuXHRcdFx0aWYgKG0uYWJzKGRpc3RYKSA8IHRoYXQub3B0aW9ucy5zbmFwVGhyZXNob2xkICYmIG0uYWJzKGRpc3RZKSA8IHRoYXQub3B0aW9ucy5zbmFwVGhyZXNob2xkKSB0aGF0LnNjcm9sbFRvKHRoYXQuYWJzU3RhcnRYLCB0aGF0LmFic1N0YXJ0WSwgMjAwKTtcblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRzbmFwID0gdGhhdC5fc25hcCh0aGF0LngsIHRoYXQueSk7XG5cdFx0XHRcdGlmIChzbmFwLnggIT0gdGhhdC54IHx8IHNuYXAueSAhPSB0aGF0LnkpIHRoYXQuc2Nyb2xsVG8oc25hcC54LCBzbmFwLnksIHNuYXAudGltZSk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25Ub3VjaEVuZCkgdGhhdC5vcHRpb25zLm9uVG91Y2hFbmQuY2FsbCh0aGF0LCBlKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGF0Ll9yZXNldFBvcygyMDApO1xuXHRcdGlmICh0aGF0Lm9wdGlvbnMub25Ub3VjaEVuZCkgdGhhdC5vcHRpb25zLm9uVG91Y2hFbmQuY2FsbCh0aGF0LCBlKTtcblx0fSxcblx0XG5cdF9yZXNldFBvczogZnVuY3Rpb24gKHRpbWUpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRyZXNldFggPSB0aGF0LnggPj0gMCA/IDAgOiB0aGF0LnggPCB0aGF0Lm1heFNjcm9sbFggPyB0aGF0Lm1heFNjcm9sbFggOiB0aGF0LngsXG5cdFx0XHRyZXNldFkgPSB0aGF0LnkgPj0gdGhhdC5taW5TY3JvbGxZIHx8IHRoYXQubWF4U2Nyb2xsWSA+IDAgPyB0aGF0Lm1pblNjcm9sbFkgOiB0aGF0LnkgPCB0aGF0Lm1heFNjcm9sbFkgPyB0aGF0Lm1heFNjcm9sbFkgOiB0aGF0Lnk7XG5cblx0XHRpZiAocmVzZXRYID09IHRoYXQueCAmJiByZXNldFkgPT0gdGhhdC55KSB7XG5cdFx0XHRpZiAodGhhdC5tb3ZlZCkge1xuXHRcdFx0XHR0aGF0Lm1vdmVkID0gZmFsc2U7XG5cdFx0XHRcdGlmICh0aGF0Lm9wdGlvbnMub25TY3JvbGxFbmQpIHRoYXQub3B0aW9ucy5vblNjcm9sbEVuZC5jYWxsKHRoYXQpO1x0XHQvLyBFeGVjdXRlIGN1c3RvbSBjb2RlIG9uIHNjcm9sbCBlbmRcblx0XHRcdH1cblxuXHRcdFx0aWYgKHRoYXQuaFNjcm9sbGJhciAmJiB0aGF0Lm9wdGlvbnMuaGlkZVNjcm9sbGJhcikge1xuXHRcdFx0XHRpZiAodmVuZG9yID09ICd3ZWJraXQnKSB0aGF0LmhTY3JvbGxiYXJXcmFwcGVyLnN0eWxlW3RyYW5zaXRpb25EZWxheV0gPSAnMzAwbXMnO1xuXHRcdFx0XHR0aGF0LmhTY3JvbGxiYXJXcmFwcGVyLnN0eWxlLm9wYWNpdHkgPSAnMCc7XG5cdFx0XHR9XG5cdFx0XHRpZiAodGhhdC52U2Nyb2xsYmFyICYmIHRoYXQub3B0aW9ucy5oaWRlU2Nyb2xsYmFyKSB7XG5cdFx0XHRcdGlmICh2ZW5kb3IgPT0gJ3dlYmtpdCcpIHRoYXQudlNjcm9sbGJhcldyYXBwZXIuc3R5bGVbdHJhbnNpdGlvbkRlbGF5XSA9ICczMDBtcyc7XG5cdFx0XHRcdHRoYXQudlNjcm9sbGJhcldyYXBwZXIuc3R5bGUub3BhY2l0eSA9ICcwJztcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoYXQuc2Nyb2xsVG8ocmVzZXRYLCByZXNldFksIHRpbWUgfHwgMCk7XG5cdH0sXG5cblx0X3doZWVsOiBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdHdoZWVsRGVsdGFYLCB3aGVlbERlbHRhWSxcblx0XHRcdGRlbHRhWCwgZGVsdGFZLFxuXHRcdFx0ZGVsdGFTY2FsZTtcblxuXHRcdGlmICgnd2hlZWxEZWx0YVgnIGluIGUpIHtcblx0XHRcdHdoZWVsRGVsdGFYID0gZS53aGVlbERlbHRhWCAvIDEyO1xuXHRcdFx0d2hlZWxEZWx0YVkgPSBlLndoZWVsRGVsdGFZIC8gMTI7XG5cdFx0fSBlbHNlIGlmKCd3aGVlbERlbHRhJyBpbiBlKSB7XG5cdFx0XHR3aGVlbERlbHRhWCA9IHdoZWVsRGVsdGFZID0gZS53aGVlbERlbHRhIC8gMTI7XG5cdFx0fSBlbHNlIGlmICgnZGV0YWlsJyBpbiBlKSB7XG5cdFx0XHR3aGVlbERlbHRhWCA9IHdoZWVsRGVsdGFZID0gLWUuZGV0YWlsICogMztcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHRcblx0XHRpZiAodGhhdC5vcHRpb25zLndoZWVsQWN0aW9uID09ICd6b29tJykge1xuXHRcdFx0ZGVsdGFTY2FsZSA9IHRoYXQuc2NhbGUgKiBNYXRoLnBvdygyLCAxLzMgKiAod2hlZWxEZWx0YVkgPyB3aGVlbERlbHRhWSAvIE1hdGguYWJzKHdoZWVsRGVsdGFZKSA6IDApKTtcblx0XHRcdGlmIChkZWx0YVNjYWxlIDwgdGhhdC5vcHRpb25zLnpvb21NaW4pIGRlbHRhU2NhbGUgPSB0aGF0Lm9wdGlvbnMuem9vbU1pbjtcblx0XHRcdGlmIChkZWx0YVNjYWxlID4gdGhhdC5vcHRpb25zLnpvb21NYXgpIGRlbHRhU2NhbGUgPSB0aGF0Lm9wdGlvbnMuem9vbU1heDtcblx0XHRcdFxuXHRcdFx0aWYgKGRlbHRhU2NhbGUgIT0gdGhhdC5zY2FsZSkge1xuXHRcdFx0XHRpZiAoIXRoYXQud2hlZWxab29tQ291bnQgJiYgdGhhdC5vcHRpb25zLm9uWm9vbVN0YXJ0KSB0aGF0Lm9wdGlvbnMub25ab29tU3RhcnQuY2FsbCh0aGF0LCBlKTtcblx0XHRcdFx0dGhhdC53aGVlbFpvb21Db3VudCsrO1xuXHRcdFx0XHRcblx0XHRcdFx0dGhhdC56b29tKGUucGFnZVgsIGUucGFnZVksIGRlbHRhU2NhbGUsIDQwMCk7XG5cdFx0XHRcdFxuXHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHRoYXQud2hlZWxab29tQ291bnQtLTtcblx0XHRcdFx0XHRpZiAoIXRoYXQud2hlZWxab29tQ291bnQgJiYgdGhhdC5vcHRpb25zLm9uWm9vbUVuZCkgdGhhdC5vcHRpb25zLm9uWm9vbUVuZC5jYWxsKHRoYXQsIGUpO1xuXHRcdFx0XHR9LCA0MDApO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFxuXHRcdGRlbHRhWCA9IHRoYXQueCArIHdoZWVsRGVsdGFYO1xuXHRcdGRlbHRhWSA9IHRoYXQueSArIHdoZWVsRGVsdGFZO1xuXG5cdFx0aWYgKGRlbHRhWCA+IDApIGRlbHRhWCA9IDA7XG5cdFx0ZWxzZSBpZiAoZGVsdGFYIDwgdGhhdC5tYXhTY3JvbGxYKSBkZWx0YVggPSB0aGF0Lm1heFNjcm9sbFg7XG5cblx0XHRpZiAoZGVsdGFZID4gdGhhdC5taW5TY3JvbGxZKSBkZWx0YVkgPSB0aGF0Lm1pblNjcm9sbFk7XG5cdFx0ZWxzZSBpZiAoZGVsdGFZIDwgdGhhdC5tYXhTY3JvbGxZKSBkZWx0YVkgPSB0aGF0Lm1heFNjcm9sbFk7XG4gICAgXG5cdFx0aWYgKHRoYXQubWF4U2Nyb2xsWSA8IDApIHtcblx0XHRcdHRoYXQuc2Nyb2xsVG8oZGVsdGFYLCBkZWx0YVksIDApO1xuXHRcdH1cblx0fSxcblx0XG5cdF90cmFuc2l0aW9uRW5kOiBmdW5jdGlvbiAoZSkge1xuXHRcdHZhciB0aGF0ID0gdGhpcztcblxuXHRcdGlmIChlLnRhcmdldCAhPSB0aGF0LnNjcm9sbGVyKSByZXR1cm47XG5cblx0XHR0aGF0Ll91bmJpbmQoVFJORU5EX0VWKTtcblx0XHRcblx0XHR0aGF0Ll9zdGFydEFuaSgpO1xuXHR9LFxuXG5cblx0LyoqXG5cdCpcblx0KiBVdGlsaXRpZXNcblx0KlxuXHQqL1xuXHRfc3RhcnRBbmk6IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRzdGFydFggPSB0aGF0LngsIHN0YXJ0WSA9IHRoYXQueSxcblx0XHRcdHN0YXJ0VGltZSA9IERhdGUubm93KCksXG5cdFx0XHRzdGVwLCBlYXNlT3V0LFxuXHRcdFx0YW5pbWF0ZTtcblxuXHRcdGlmICh0aGF0LmFuaW1hdGluZykgcmV0dXJuO1xuXHRcdFxuXHRcdGlmICghdGhhdC5zdGVwcy5sZW5ndGgpIHtcblx0XHRcdHRoYXQuX3Jlc2V0UG9zKDQwMCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdFxuXHRcdHN0ZXAgPSB0aGF0LnN0ZXBzLnNoaWZ0KCk7XG5cdFx0XG5cdFx0aWYgKHN0ZXAueCA9PSBzdGFydFggJiYgc3RlcC55ID09IHN0YXJ0WSkgc3RlcC50aW1lID0gMDtcblxuXHRcdHRoYXQuYW5pbWF0aW5nID0gdHJ1ZTtcblx0XHR0aGF0Lm1vdmVkID0gdHJ1ZTtcblx0XHRcblx0XHRpZiAodGhhdC5vcHRpb25zLnVzZVRyYW5zaXRpb24pIHtcblx0XHRcdHRoYXQuX3RyYW5zaXRpb25UaW1lKHN0ZXAudGltZSk7XG5cdFx0XHR0aGF0Ll9wb3Moc3RlcC54LCBzdGVwLnkpO1xuXHRcdFx0dGhhdC5hbmltYXRpbmcgPSBmYWxzZTtcblx0XHRcdGlmIChzdGVwLnRpbWUpIHRoYXQuX2JpbmQoVFJORU5EX0VWKTtcblx0XHRcdGVsc2UgdGhhdC5fcmVzZXRQb3MoMCk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0YW5pbWF0ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBub3cgPSBEYXRlLm5vdygpLFxuXHRcdFx0XHRuZXdYLCBuZXdZO1xuXG5cdFx0XHRpZiAobm93ID49IHN0YXJ0VGltZSArIHN0ZXAudGltZSkge1xuXHRcdFx0XHR0aGF0Ll9wb3Moc3RlcC54LCBzdGVwLnkpO1xuXHRcdFx0XHR0aGF0LmFuaW1hdGluZyA9IGZhbHNlO1xuXHRcdFx0XHRpZiAodGhhdC5vcHRpb25zLm9uQW5pbWF0aW9uRW5kKSB0aGF0Lm9wdGlvbnMub25BbmltYXRpb25FbmQuY2FsbCh0aGF0KTtcdFx0XHQvLyBFeGVjdXRlIGN1c3RvbSBjb2RlIG9uIGFuaW1hdGlvbiBlbmRcblx0XHRcdFx0dGhhdC5fc3RhcnRBbmkoKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRub3cgPSAobm93IC0gc3RhcnRUaW1lKSAvIHN0ZXAudGltZSAtIDE7XG5cdFx0XHRlYXNlT3V0ID0gbS5zcXJ0KDEgLSBub3cgKiBub3cpO1xuXHRcdFx0bmV3WCA9IChzdGVwLnggLSBzdGFydFgpICogZWFzZU91dCArIHN0YXJ0WDtcblx0XHRcdG5ld1kgPSAoc3RlcC55IC0gc3RhcnRZKSAqIGVhc2VPdXQgKyBzdGFydFk7XG5cdFx0XHR0aGF0Ll9wb3MobmV3WCwgbmV3WSk7XG5cdFx0XHRpZiAodGhhdC5hbmltYXRpbmcpIHRoYXQuYW5pVGltZSA9IG5leHRGcmFtZShhbmltYXRlKTtcblx0XHR9O1xuXG5cdFx0YW5pbWF0ZSgpO1xuXHR9LFxuXG5cdF90cmFuc2l0aW9uVGltZTogZnVuY3Rpb24gKHRpbWUpIHtcblx0XHR0aW1lICs9ICdtcyc7XG5cdFx0dGhpcy5zY3JvbGxlci5zdHlsZVt0cmFuc2l0aW9uRHVyYXRpb25dID0gdGltZTtcblx0XHRpZiAodGhpcy5oU2Nyb2xsYmFyKSB0aGlzLmhTY3JvbGxiYXJJbmRpY2F0b3Iuc3R5bGVbdHJhbnNpdGlvbkR1cmF0aW9uXSA9IHRpbWU7XG5cdFx0aWYgKHRoaXMudlNjcm9sbGJhcikgdGhpcy52U2Nyb2xsYmFySW5kaWNhdG9yLnN0eWxlW3RyYW5zaXRpb25EdXJhdGlvbl0gPSB0aW1lO1xuXHR9LFxuXG5cdF9tb21lbnR1bTogZnVuY3Rpb24gKGRpc3QsIHRpbWUsIG1heERpc3RVcHBlciwgbWF4RGlzdExvd2VyLCBzaXplKSB7XG5cdFx0dmFyIGRlY2VsZXJhdGlvbiA9IDAuMDAwNixcblx0XHRcdHNwZWVkID0gbS5hYnMoZGlzdCkgLyB0aW1lLFxuXHRcdFx0bmV3RGlzdCA9IChzcGVlZCAqIHNwZWVkKSAvICgyICogZGVjZWxlcmF0aW9uKSxcblx0XHRcdG5ld1RpbWUgPSAwLCBvdXRzaWRlRGlzdCA9IDA7XG5cblx0XHQvLyBQcm9wb3J0aW5hbGx5IHJlZHVjZSBzcGVlZCBpZiB3ZSBhcmUgb3V0c2lkZSBvZiB0aGUgYm91bmRhcmllc1xuXHRcdGlmIChkaXN0ID4gMCAmJiBuZXdEaXN0ID4gbWF4RGlzdFVwcGVyKSB7XG5cdFx0XHRvdXRzaWRlRGlzdCA9IHNpemUgLyAoNiAvIChuZXdEaXN0IC8gc3BlZWQgKiBkZWNlbGVyYXRpb24pKTtcblx0XHRcdG1heERpc3RVcHBlciA9IG1heERpc3RVcHBlciArIG91dHNpZGVEaXN0O1xuXHRcdFx0c3BlZWQgPSBzcGVlZCAqIG1heERpc3RVcHBlciAvIG5ld0Rpc3Q7XG5cdFx0XHRuZXdEaXN0ID0gbWF4RGlzdFVwcGVyO1xuXHRcdH0gZWxzZSBpZiAoZGlzdCA8IDAgJiYgbmV3RGlzdCA+IG1heERpc3RMb3dlcikge1xuXHRcdFx0b3V0c2lkZURpc3QgPSBzaXplIC8gKDYgLyAobmV3RGlzdCAvIHNwZWVkICogZGVjZWxlcmF0aW9uKSk7XG5cdFx0XHRtYXhEaXN0TG93ZXIgPSBtYXhEaXN0TG93ZXIgKyBvdXRzaWRlRGlzdDtcblx0XHRcdHNwZWVkID0gc3BlZWQgKiBtYXhEaXN0TG93ZXIgLyBuZXdEaXN0O1xuXHRcdFx0bmV3RGlzdCA9IG1heERpc3RMb3dlcjtcblx0XHR9XG5cblx0XHRuZXdEaXN0ID0gbmV3RGlzdCAqIChkaXN0IDwgMCA/IC0xIDogMSk7XG5cdFx0bmV3VGltZSA9IHNwZWVkIC8gZGVjZWxlcmF0aW9uO1xuXG5cdFx0cmV0dXJuIHsgZGlzdDogbmV3RGlzdCwgdGltZTogbS5yb3VuZChuZXdUaW1lKSB9O1xuXHR9LFxuXG5cdF9vZmZzZXQ6IGZ1bmN0aW9uIChlbCkge1xuXHRcdHZhciBsZWZ0ID0gLWVsLm9mZnNldExlZnQsXG5cdFx0XHR0b3AgPSAtZWwub2Zmc2V0VG9wO1xuXHRcdFx0XG5cdFx0d2hpbGUgKGVsID0gZWwub2Zmc2V0UGFyZW50KSB7XG5cdFx0XHRsZWZ0IC09IGVsLm9mZnNldExlZnQ7XG5cdFx0XHR0b3AgLT0gZWwub2Zmc2V0VG9wO1xuXHRcdH1cblx0XHRcblx0XHRpZiAoZWwgIT0gdGhpcy53cmFwcGVyKSB7XG5cdFx0XHRsZWZ0ICo9IHRoaXMuc2NhbGU7XG5cdFx0XHR0b3AgKj0gdGhpcy5zY2FsZTtcblx0XHR9XG5cblx0XHRyZXR1cm4geyBsZWZ0OiBsZWZ0LCB0b3A6IHRvcCB9O1xuXHR9LFxuXG5cdF9zbmFwOiBmdW5jdGlvbiAoeCwgeSkge1xuXHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdGksIGwsXG5cdFx0XHRwYWdlLCB0aW1lLFxuXHRcdFx0c2l6ZVgsIHNpemVZO1xuXG5cdFx0Ly8gQ2hlY2sgcGFnZSBYXG5cdFx0cGFnZSA9IHRoYXQucGFnZXNYLmxlbmd0aCAtIDE7XG5cdFx0Zm9yIChpPTAsIGw9dGhhdC5wYWdlc1gubGVuZ3RoOyBpPGw7IGkrKykge1xuXHRcdFx0aWYgKHggPj0gdGhhdC5wYWdlc1hbaV0pIHtcblx0XHRcdFx0cGFnZSA9IGk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZiAocGFnZSA9PSB0aGF0LmN1cnJQYWdlWCAmJiBwYWdlID4gMCAmJiB0aGF0LmRpclggPCAwKSBwYWdlLS07XG5cdFx0eCA9IHRoYXQucGFnZXNYW3BhZ2VdO1xuXHRcdHNpemVYID0gbS5hYnMoeCAtIHRoYXQucGFnZXNYW3RoYXQuY3VyclBhZ2VYXSk7XG5cdFx0c2l6ZVggPSBzaXplWCA/IG0uYWJzKHRoYXQueCAtIHgpIC8gc2l6ZVggKiA1MDAgOiAwO1xuXHRcdHRoYXQuY3VyclBhZ2VYID0gcGFnZTtcblxuXHRcdC8vIENoZWNrIHBhZ2UgWVxuXHRcdHBhZ2UgPSB0aGF0LnBhZ2VzWS5sZW5ndGgtMTtcblx0XHRmb3IgKGk9MDsgaTxwYWdlOyBpKyspIHtcblx0XHRcdGlmICh5ID49IHRoYXQucGFnZXNZW2ldKSB7XG5cdFx0XHRcdHBhZ2UgPSBpO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdFx0aWYgKHBhZ2UgPT0gdGhhdC5jdXJyUGFnZVkgJiYgcGFnZSA+IDAgJiYgdGhhdC5kaXJZIDwgMCkgcGFnZS0tO1xuXHRcdHkgPSB0aGF0LnBhZ2VzWVtwYWdlXTtcblx0XHRzaXplWSA9IG0uYWJzKHkgLSB0aGF0LnBhZ2VzWVt0aGF0LmN1cnJQYWdlWV0pO1xuXHRcdHNpemVZID0gc2l6ZVkgPyBtLmFicyh0aGF0LnkgLSB5KSAvIHNpemVZICogNTAwIDogMDtcblx0XHR0aGF0LmN1cnJQYWdlWSA9IHBhZ2U7XG5cblx0XHQvLyBTbmFwIHdpdGggY29uc3RhbnQgc3BlZWQgKHByb3BvcnRpb25hbCBkdXJhdGlvbilcblx0XHR0aW1lID0gbS5yb3VuZChtLm1heChzaXplWCwgc2l6ZVkpKSB8fCAyMDA7XG5cblx0XHRyZXR1cm4geyB4OiB4LCB5OiB5LCB0aW1lOiB0aW1lIH07XG5cdH0sXG5cblx0X2JpbmQ6IGZ1bmN0aW9uICh0eXBlLCBlbCwgYnViYmxlKSB7XG5cdFx0KGVsIHx8IHRoaXMuc2Nyb2xsZXIpLmFkZEV2ZW50TGlzdGVuZXIodHlwZSwgdGhpcywgISFidWJibGUpO1xuXHR9LFxuXG5cdF91bmJpbmQ6IGZ1bmN0aW9uICh0eXBlLCBlbCwgYnViYmxlKSB7XG5cdFx0KGVsIHx8IHRoaXMuc2Nyb2xsZXIpLnJlbW92ZUV2ZW50TGlzdGVuZXIodHlwZSwgdGhpcywgISFidWJibGUpO1xuXHR9LFxuXG5cblx0LyoqXG5cdCpcblx0KiBQdWJsaWMgbWV0aG9kc1xuXHQqXG5cdCovXG5cdGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXM7XG5cblx0XHR0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zZm9ybV0gPSAnJztcblxuXHRcdC8vIFJlbW92ZSB0aGUgc2Nyb2xsYmFyc1xuXHRcdHRoYXQuaFNjcm9sbGJhciA9IGZhbHNlO1xuXHRcdHRoYXQudlNjcm9sbGJhciA9IGZhbHNlO1xuXHRcdHRoYXQuX3Njcm9sbGJhcignaCcpO1xuXHRcdHRoYXQuX3Njcm9sbGJhcigndicpO1xuXG5cdFx0Ly8gUmVtb3ZlIHRoZSBldmVudCBsaXN0ZW5lcnNcblx0XHR0aGF0Ll91bmJpbmQoUkVTSVpFX0VWLCB3aW5kb3cpO1xuXHRcdHRoYXQuX3VuYmluZChTVEFSVF9FVik7XG5cdFx0dGhhdC5fdW5iaW5kKE1PVkVfRVYsIHdpbmRvdyk7XG5cdFx0dGhhdC5fdW5iaW5kKEVORF9FViwgd2luZG93KTtcblx0XHR0aGF0Ll91bmJpbmQoQ0FOQ0VMX0VWLCB3aW5kb3cpO1xuXHRcdFxuXHRcdGlmICghdGhhdC5vcHRpb25zLmhhc1RvdWNoKSB7XG5cdFx0XHR0aGF0Ll91bmJpbmQoJ0RPTU1vdXNlU2Nyb2xsJyk7XG5cdFx0XHR0aGF0Ll91bmJpbmQoJ21vdXNld2hlZWwnKTtcblx0XHR9XG5cdFx0XG5cdFx0aWYgKHRoYXQub3B0aW9ucy51c2VUcmFuc2l0aW9uKSB0aGF0Ll91bmJpbmQoVFJORU5EX0VWKTtcblx0XHRcblx0XHRpZiAodGhhdC5vcHRpb25zLmNoZWNrRE9NQ2hhbmdlcykgY2xlYXJJbnRlcnZhbCh0aGF0LmNoZWNrRE9NVGltZSk7XG5cdFx0XG5cdFx0aWYgKHRoYXQub3B0aW9ucy5vbkRlc3Ryb3kpIHRoYXQub3B0aW9ucy5vbkRlc3Ryb3kuY2FsbCh0aGF0KTtcblx0fSxcblxuXHRyZWZyZXNoOiBmdW5jdGlvbiAoKSB7XG5cdFx0dmFyIHRoYXQgPSB0aGlzLFxuXHRcdFx0b2Zmc2V0LFxuXHRcdFx0aSwgbCxcblx0XHRcdGVscyxcblx0XHRcdHBvcyA9IDAsXG5cdFx0XHRwYWdlID0gMDtcblxuXHRcdGlmICh0aGF0LnNjYWxlIDwgdGhhdC5vcHRpb25zLnpvb21NaW4pIHRoYXQuc2NhbGUgPSB0aGF0Lm9wdGlvbnMuem9vbU1pbjtcblx0XHR0aGF0LndyYXBwZXJXID0gdGhhdC53cmFwcGVyLmNsaWVudFdpZHRoIHx8IDE7XG5cdFx0dGhhdC53cmFwcGVySCA9IHRoYXQud3JhcHBlci5jbGllbnRIZWlnaHQgfHwgMTtcblxuXHRcdHRoYXQubWluU2Nyb2xsWSA9IC10aGF0Lm9wdGlvbnMudG9wT2Zmc2V0IHx8IDA7XG5cdFx0dGhhdC5zY3JvbGxlclcgPSBtLnJvdW5kKHRoYXQuc2Nyb2xsZXIub2Zmc2V0V2lkdGggKiB0aGF0LnNjYWxlKTtcblx0XHR0aGF0LnNjcm9sbGVySCA9IG0ucm91bmQoKHRoYXQuc2Nyb2xsZXIub2Zmc2V0SGVpZ2h0ICsgdGhhdC5taW5TY3JvbGxZKSAqIHRoYXQuc2NhbGUpO1xuXHRcdHRoYXQubWF4U2Nyb2xsWCA9IHRoYXQud3JhcHBlclcgLSB0aGF0LnNjcm9sbGVyVztcblx0XHR0aGF0Lm1heFNjcm9sbFkgPSB0aGF0LndyYXBwZXJIIC0gdGhhdC5zY3JvbGxlckggKyB0aGF0Lm1pblNjcm9sbFk7XG5cdFx0dGhhdC5kaXJYID0gMDtcblx0XHR0aGF0LmRpclkgPSAwO1xuXG5cdFx0aWYgKHRoYXQub3B0aW9ucy5vblJlZnJlc2gpIHRoYXQub3B0aW9ucy5vblJlZnJlc2guY2FsbCh0aGF0KTtcblxuXHRcdHRoYXQuaFNjcm9sbCA9IHRoYXQub3B0aW9ucy5oU2Nyb2xsICYmIHRoYXQubWF4U2Nyb2xsWCA8IDA7XG5cdFx0dGhhdC52U2Nyb2xsID0gdGhhdC5vcHRpb25zLnZTY3JvbGwgJiYgKCF0aGF0Lm9wdGlvbnMuYm91bmNlTG9jayAmJiAhdGhhdC5oU2Nyb2xsIHx8IHRoYXQuc2Nyb2xsZXJIID4gdGhhdC53cmFwcGVySCk7XG5cblx0XHR0aGF0LmhTY3JvbGxiYXIgPSB0aGF0LmhTY3JvbGwgJiYgdGhhdC5vcHRpb25zLmhTY3JvbGxiYXI7XG5cdFx0dGhhdC52U2Nyb2xsYmFyID0gdGhhdC52U2Nyb2xsICYmIHRoYXQub3B0aW9ucy52U2Nyb2xsYmFyICYmIHRoYXQuc2Nyb2xsZXJIID4gdGhhdC53cmFwcGVySDtcblxuXHRcdG9mZnNldCA9IHRoYXQuX29mZnNldCh0aGF0LndyYXBwZXIpO1xuXHRcdHRoYXQud3JhcHBlck9mZnNldExlZnQgPSAtb2Zmc2V0LmxlZnQ7XG5cdFx0dGhhdC53cmFwcGVyT2Zmc2V0VG9wID0gLW9mZnNldC50b3A7XG5cblx0XHQvLyBQcmVwYXJlIHNuYXBcblx0XHRpZiAodHlwZW9mIHRoYXQub3B0aW9ucy5zbmFwID09ICdzdHJpbmcnKSB7XG5cdFx0XHR0aGF0LnBhZ2VzWCA9IFtdO1xuXHRcdFx0dGhhdC5wYWdlc1kgPSBbXTtcblx0XHRcdGVscyA9IHRoYXQuc2Nyb2xsZXIucXVlcnlTZWxlY3RvckFsbCh0aGF0Lm9wdGlvbnMuc25hcCk7XG5cdFx0XHRmb3IgKGk9MCwgbD1lbHMubGVuZ3RoOyBpPGw7IGkrKykge1xuXHRcdFx0XHRwb3MgPSB0aGF0Ll9vZmZzZXQoZWxzW2ldKTtcblx0XHRcdFx0cG9zLmxlZnQgKz0gdGhhdC53cmFwcGVyT2Zmc2V0TGVmdDtcblx0XHRcdFx0cG9zLnRvcCArPSB0aGF0LndyYXBwZXJPZmZzZXRUb3A7XG5cdFx0XHRcdHRoYXQucGFnZXNYW2ldID0gcG9zLmxlZnQgPCB0aGF0Lm1heFNjcm9sbFggPyB0aGF0Lm1heFNjcm9sbFggOiBwb3MubGVmdCAqIHRoYXQuc2NhbGU7XG5cdFx0XHRcdHRoYXQucGFnZXNZW2ldID0gcG9zLnRvcCA8IHRoYXQubWF4U2Nyb2xsWSA/IHRoYXQubWF4U2Nyb2xsWSA6IHBvcy50b3AgKiB0aGF0LnNjYWxlO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSBpZiAodGhhdC5vcHRpb25zLnNuYXApIHtcblx0XHRcdHRoYXQucGFnZXNYID0gW107XG5cdFx0XHR3aGlsZSAocG9zID49IHRoYXQubWF4U2Nyb2xsWCkge1xuXHRcdFx0XHR0aGF0LnBhZ2VzWFtwYWdlXSA9IHBvcztcblx0XHRcdFx0cG9zID0gcG9zIC0gdGhhdC53cmFwcGVyVztcblx0XHRcdFx0cGFnZSsrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKHRoYXQubWF4U2Nyb2xsWCV0aGF0LndyYXBwZXJXKSB0aGF0LnBhZ2VzWFt0aGF0LnBhZ2VzWC5sZW5ndGhdID0gdGhhdC5tYXhTY3JvbGxYIC0gdGhhdC5wYWdlc1hbdGhhdC5wYWdlc1gubGVuZ3RoLTFdICsgdGhhdC5wYWdlc1hbdGhhdC5wYWdlc1gubGVuZ3RoLTFdO1xuXG5cdFx0XHRwb3MgPSAwO1xuXHRcdFx0cGFnZSA9IDA7XG5cdFx0XHR0aGF0LnBhZ2VzWSA9IFtdO1xuXHRcdFx0d2hpbGUgKHBvcyA+PSB0aGF0Lm1heFNjcm9sbFkpIHtcblx0XHRcdFx0dGhhdC5wYWdlc1lbcGFnZV0gPSBwb3M7XG5cdFx0XHRcdHBvcyA9IHBvcyAtIHRoYXQud3JhcHBlckg7XG5cdFx0XHRcdHBhZ2UrKztcblx0XHRcdH1cblx0XHRcdGlmICh0aGF0Lm1heFNjcm9sbFkldGhhdC53cmFwcGVySCkgdGhhdC5wYWdlc1lbdGhhdC5wYWdlc1kubGVuZ3RoXSA9IHRoYXQubWF4U2Nyb2xsWSAtIHRoYXQucGFnZXNZW3RoYXQucGFnZXNZLmxlbmd0aC0xXSArIHRoYXQucGFnZXNZW3RoYXQucGFnZXNZLmxlbmd0aC0xXTtcblx0XHR9XG5cblx0XHQvLyBQcmVwYXJlIHRoZSBzY3JvbGxiYXJzXG5cdFx0dGhhdC5fc2Nyb2xsYmFyKCdoJyk7XG5cdFx0dGhhdC5fc2Nyb2xsYmFyKCd2Jyk7XG5cblx0XHRpZiAoIXRoYXQuem9vbWVkKSB7XG5cdFx0XHR0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zaXRpb25EdXJhdGlvbl0gPSAnMCc7XG5cdFx0XHR0aGF0Ll9yZXNldFBvcyg0MDApO1xuXHRcdH1cblx0fSxcblxuXHRzY3JvbGxUbzogZnVuY3Rpb24gKHgsIHksIHRpbWUsIHJlbGF0aXZlKSB7XG5cdFx0dmFyIHRoYXQgPSB0aGlzLFxuXHRcdFx0c3RlcCA9IHgsXG5cdFx0XHRpLCBsO1xuXG5cdFx0dGhhdC5zdG9wKCk7XG5cblx0XHRpZiAoIXN0ZXAubGVuZ3RoKSBzdGVwID0gW3sgeDogeCwgeTogeSwgdGltZTogdGltZSwgcmVsYXRpdmU6IHJlbGF0aXZlIH1dO1xuXHRcdFxuXHRcdGZvciAoaT0wLCBsPXN0ZXAubGVuZ3RoOyBpPGw7IGkrKykge1xuXHRcdFx0aWYgKHN0ZXBbaV0ucmVsYXRpdmUpIHsgc3RlcFtpXS54ID0gdGhhdC54IC0gc3RlcFtpXS54OyBzdGVwW2ldLnkgPSB0aGF0LnkgLSBzdGVwW2ldLnk7IH1cblx0XHRcdHRoYXQuc3RlcHMucHVzaCh7IHg6IHN0ZXBbaV0ueCwgeTogc3RlcFtpXS55LCB0aW1lOiBzdGVwW2ldLnRpbWUgfHwgMCB9KTtcblx0XHR9XG5cblx0XHR0aGF0Ll9zdGFydEFuaSgpO1xuXHR9LFxuXG5cdHNjcm9sbFRvRWxlbWVudDogZnVuY3Rpb24gKGVsLCB0aW1lKSB7XG5cdFx0dmFyIHRoYXQgPSB0aGlzLCBwb3M7XG5cdFx0ZWwgPSBlbC5ub2RlVHlwZSA/IGVsIDogdGhhdC5zY3JvbGxlci5xdWVyeVNlbGVjdG9yKGVsKTtcblx0XHRpZiAoIWVsKSByZXR1cm47XG5cblx0XHRwb3MgPSB0aGF0Ll9vZmZzZXQoZWwpO1xuXHRcdHBvcy5sZWZ0ICs9IHRoYXQud3JhcHBlck9mZnNldExlZnQ7XG5cdFx0cG9zLnRvcCArPSB0aGF0LndyYXBwZXJPZmZzZXRUb3A7XG5cblx0XHRwb3MubGVmdCA9IHBvcy5sZWZ0ID4gMCA/IDAgOiBwb3MubGVmdCA8IHRoYXQubWF4U2Nyb2xsWCA/IHRoYXQubWF4U2Nyb2xsWCA6IHBvcy5sZWZ0O1xuXHRcdHBvcy50b3AgPSBwb3MudG9wID4gdGhhdC5taW5TY3JvbGxZID8gdGhhdC5taW5TY3JvbGxZIDogcG9zLnRvcCA8IHRoYXQubWF4U2Nyb2xsWSA/IHRoYXQubWF4U2Nyb2xsWSA6IHBvcy50b3A7XG5cdFx0dGltZSA9IHRpbWUgPT09IHVuZGVmaW5lZCA/IG0ubWF4KG0uYWJzKHBvcy5sZWZ0KSoyLCBtLmFicyhwb3MudG9wKSoyKSA6IHRpbWU7XG5cblx0XHR0aGF0LnNjcm9sbFRvKHBvcy5sZWZ0LCBwb3MudG9wLCB0aW1lKTtcblx0fSxcblxuXHRzY3JvbGxUb1BhZ2U6IGZ1bmN0aW9uIChwYWdlWCwgcGFnZVksIHRpbWUpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsIHgsIHk7XG5cdFx0XG5cdFx0dGltZSA9IHRpbWUgPT09IHVuZGVmaW5lZCA/IDQwMCA6IHRpbWU7XG5cblx0XHRpZiAodGhhdC5vcHRpb25zLm9uU2Nyb2xsU3RhcnQpIHRoYXQub3B0aW9ucy5vblNjcm9sbFN0YXJ0LmNhbGwodGhhdCk7XG5cblx0XHRpZiAodGhhdC5vcHRpb25zLnNuYXApIHtcblx0XHRcdHBhZ2VYID0gcGFnZVggPT0gJ25leHQnID8gdGhhdC5jdXJyUGFnZVgrMSA6IHBhZ2VYID09ICdwcmV2JyA/IHRoYXQuY3VyclBhZ2VYLTEgOiBwYWdlWDtcblx0XHRcdHBhZ2VZID0gcGFnZVkgPT0gJ25leHQnID8gdGhhdC5jdXJyUGFnZVkrMSA6IHBhZ2VZID09ICdwcmV2JyA/IHRoYXQuY3VyclBhZ2VZLTEgOiBwYWdlWTtcblxuXHRcdFx0cGFnZVggPSBwYWdlWCA8IDAgPyAwIDogcGFnZVggPiB0aGF0LnBhZ2VzWC5sZW5ndGgtMSA/IHRoYXQucGFnZXNYLmxlbmd0aC0xIDogcGFnZVg7XG5cdFx0XHRwYWdlWSA9IHBhZ2VZIDwgMCA/IDAgOiBwYWdlWSA+IHRoYXQucGFnZXNZLmxlbmd0aC0xID8gdGhhdC5wYWdlc1kubGVuZ3RoLTEgOiBwYWdlWTtcblxuXHRcdFx0dGhhdC5jdXJyUGFnZVggPSBwYWdlWDtcblx0XHRcdHRoYXQuY3VyclBhZ2VZID0gcGFnZVk7XG5cdFx0XHR4ID0gdGhhdC5wYWdlc1hbcGFnZVhdO1xuXHRcdFx0eSA9IHRoYXQucGFnZXNZW3BhZ2VZXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0eCA9IC10aGF0LndyYXBwZXJXICogcGFnZVg7XG5cdFx0XHR5ID0gLXRoYXQud3JhcHBlckggKiBwYWdlWTtcblx0XHRcdGlmICh4IDwgdGhhdC5tYXhTY3JvbGxYKSB4ID0gdGhhdC5tYXhTY3JvbGxYO1xuXHRcdFx0aWYgKHkgPCB0aGF0Lm1heFNjcm9sbFkpIHkgPSB0aGF0Lm1heFNjcm9sbFk7XG5cdFx0fVxuXG5cdFx0dGhhdC5zY3JvbGxUbyh4LCB5LCB0aW1lKTtcblx0fSxcblxuXHRkaXNhYmxlOiBmdW5jdGlvbiAoKSB7XG5cdFx0dGhpcy5zdG9wKCk7XG5cdFx0dGhpcy5fcmVzZXRQb3MoMCk7XG5cdFx0dGhpcy5lbmFibGVkID0gZmFsc2U7XG5cblx0XHQvLyBJZiBkaXNhYmxlZCBhZnRlciB0b3VjaHN0YXJ0IHdlIG1ha2Ugc3VyZSB0aGF0IHRoZXJlIGFyZSBubyBsZWZ0IG92ZXIgZXZlbnRzXG5cdFx0dGhpcy5fdW5iaW5kKE1PVkVfRVYsIHdpbmRvdyk7XG5cdFx0dGhpcy5fdW5iaW5kKEVORF9FViwgd2luZG93KTtcblx0XHR0aGlzLl91bmJpbmQoQ0FOQ0VMX0VWLCB3aW5kb3cpO1xuXHR9LFxuXHRcblx0ZW5hYmxlOiBmdW5jdGlvbiAoKSB7XG5cdFx0dGhpcy5lbmFibGVkID0gdHJ1ZTtcblx0fSxcblx0XG5cdHN0b3A6IGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodGhpcy5vcHRpb25zLnVzZVRyYW5zaXRpb24pIHRoaXMuX3VuYmluZChUUk5FTkRfRVYpO1xuXHRcdGVsc2UgY2FuY2VsRnJhbWUodGhpcy5hbmlUaW1lKTtcblx0XHR0aGlzLnN0ZXBzID0gW107XG5cdFx0dGhpcy5tb3ZlZCA9IGZhbHNlO1xuXHRcdHRoaXMuYW5pbWF0aW5nID0gZmFsc2U7XG5cdH0sXG5cdFxuXHR6b29tOiBmdW5jdGlvbiAoeCwgeSwgc2NhbGUsIHRpbWUpIHtcblx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRyZWxTY2FsZSA9IHNjYWxlIC8gdGhhdC5zY2FsZTtcblxuXHRcdGlmICghdGhhdC5vcHRpb25zLnVzZVRyYW5zZm9ybSkgcmV0dXJuO1xuXG5cdFx0dGhhdC56b29tZWQgPSB0cnVlO1xuXHRcdHRpbWUgPSB0aW1lID09PSB1bmRlZmluZWQgPyAyMDAgOiB0aW1lO1xuXHRcdHggPSB4IC0gdGhhdC53cmFwcGVyT2Zmc2V0TGVmdCAtIHRoYXQueDtcblx0XHR5ID0geSAtIHRoYXQud3JhcHBlck9mZnNldFRvcCAtIHRoYXQueTtcblx0XHR0aGF0LnggPSB4IC0geCAqIHJlbFNjYWxlICsgdGhhdC54O1xuXHRcdHRoYXQueSA9IHkgLSB5ICogcmVsU2NhbGUgKyB0aGF0Lnk7XG5cblx0XHR0aGF0LnNjYWxlID0gc2NhbGU7XG5cdFx0dGhhdC5yZWZyZXNoKCk7XG5cblx0XHR0aGF0LnggPSB0aGF0LnggPiAwID8gMCA6IHRoYXQueCA8IHRoYXQubWF4U2Nyb2xsWCA/IHRoYXQubWF4U2Nyb2xsWCA6IHRoYXQueDtcblx0XHR0aGF0LnkgPSB0aGF0LnkgPiB0aGF0Lm1pblNjcm9sbFkgPyB0aGF0Lm1pblNjcm9sbFkgOiB0aGF0LnkgPCB0aGF0Lm1heFNjcm9sbFkgPyB0aGF0Lm1heFNjcm9sbFkgOiB0aGF0Lnk7XG5cblx0XHR0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zaXRpb25EdXJhdGlvbl0gPSB0aW1lICsgJ21zJztcblx0XHR0aGF0LnNjcm9sbGVyLnN0eWxlW3RyYW5zZm9ybV0gPSAndHJhbnNsYXRlKCcgKyB0aGF0LnggKyAncHgsJyArIHRoYXQueSArICdweCkgc2NhbGUoJyArIHNjYWxlICsgJyknICsgdHJhbnNsYXRlWjtcblx0XHR0aGF0Lnpvb21lZCA9IGZhbHNlO1xuXHR9LFxuXHRcblx0aXNSZWFkeTogZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAhdGhpcy5tb3ZlZCAmJiAhdGhpcy56b29tZWQgJiYgIXRoaXMuYW5pbWF0aW5nO1xuXHR9XG59O1xuXG5mdW5jdGlvbiBwcmVmaXhTdHlsZSAoc3R5bGUpIHtcblx0aWYgKCB2ZW5kb3IgPT09ICcnICkgcmV0dXJuIHN0eWxlO1xuXG5cdHN0eWxlID0gc3R5bGUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHlsZS5zdWJzdHIoMSk7XG5cdHJldHVybiB2ZW5kb3IgKyBzdHlsZTtcbn1cblxuZHVtbXlTdHlsZSA9IG51bGw7XHQvLyBmb3IgdGhlIHNha2Ugb2YgaXRcblxuaWYgKHR5cGVvZiBleHBvcnRzICE9PSAndW5kZWZpbmVkJykgZXhwb3J0cy5pU2Nyb2xsID0gaVNjcm9sbDtcbmVsc2Ugd2luZG93LmlTY3JvbGwgPSBpU2Nyb2xsO1xuXG59KSh3aW5kb3csIGRvY3VtZW50KTtcblxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3p4L2pzL2lzY3JvbGwuanNcbiAqKiBtb2R1bGUgaWQgPSA4XG4gKiogbW9kdWxlIGNodW5rcyA9IDAgMSAzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports){eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n//     Zepto.js\r\n//     (c) 2010-2016 Thomas Fuchs\r\n//     Zepto.js may be freely distributed under the MIT license.\r\n\r\n;(function($){\r\n  var touch = {},\r\n    touchTimeout, tapTimeout, swipeTimeout, longTapTimeout,\r\n    longTapDelay = 750,\r\n    gesture\r\n\r\n  function swipeDirection(x1, x2, y1, y2) {\r\n    return Math.abs(x1 - x2) >=\r\n      Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')\r\n  }\r\n\r\n  function longTap() {\r\n    longTapTimeout = null\r\n    if (touch.last) {\r\n      touch.el.trigger('longTap')\r\n      touch = {}\r\n    }\r\n  }\r\n\r\n  function cancelLongTap() {\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    longTapTimeout = null\r\n  }\r\n\r\n  function cancelAll() {\r\n    if (touchTimeout) clearTimeout(touchTimeout)\r\n    if (tapTimeout) clearTimeout(tapTimeout)\r\n    if (swipeTimeout) clearTimeout(swipeTimeout)\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null\r\n    touch = {}\r\n  }\r\n\r\n  function isPrimaryTouch(event){\r\n    return (event.pointerType == 'touch' ||\r\n      event.pointerType == event.MSPOINTER_TYPE_TOUCH)\r\n      && event.isPrimary\r\n  }\r\n\r\n  function isPointerEventType(e, type){\r\n    return (e.type == 'pointer'+type ||\r\n      e.type.toLowerCase() == 'mspointer'+type)\r\n  }\r\n\r\n  $(document).ready(function(){\r\n    var now, delta, deltaX = 0, deltaY = 0, firstTouch, _isPointerType\r\n\r\n    if ('MSGesture' in window) {\r\n      gesture = new MSGesture()\r\n      gesture.target = document.body\r\n    }\r\n\r\n    $(document)\r\n      .bind('MSGestureEnd', function(e){\r\n        var swipeDirectionFromVelocity =\r\n          e.velocityX > 1 ? 'Right' : e.velocityX < -1 ? 'Left' : e.velocityY > 1 ? 'Down' : e.velocityY < -1 ? 'Up' : null;\r\n        if (swipeDirectionFromVelocity) {\r\n          touch.el.trigger('swipe')\r\n          touch.el.trigger('swipe'+ swipeDirectionFromVelocity)\r\n        }\r\n      })\r\n      .on('touchstart MSPointerDown pointerdown', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'down')) &&\r\n          !isPrimaryTouch(e)) return\r\n        firstTouch = _isPointerType ? e : e.touches[0]\r\n        if (e.touches && e.touches.length === 1 && touch.x2) {\r\n          // Clear out touch movement data if we have it sticking around\r\n          // This can occur if touchcancel doesn't fire due to preventDefault, etc.\r\n          touch.x2 = undefined\r\n          touch.y2 = undefined\r\n        }\r\n        now = Date.now()\r\n        delta = now - (touch.last || now)\r\n        touch.el = $('tagName' in firstTouch.target ?\r\n          firstTouch.target : firstTouch.target.parentNode)\r\n        touchTimeout && clearTimeout(touchTimeout)\r\n        touch.x1 = firstTouch.pageX\r\n        touch.y1 = firstTouch.pageY\r\n        if (delta > 0 && delta <= 250) touch.isDoubleTap = true\r\n        touch.last = now\r\n        longTapTimeout = setTimeout(longTap, longTapDelay)\r\n        // adds the current touch contact for IE gesture recognition\r\n        if (gesture && _isPointerType) gesture.addPointer(e.pointerId);\r\n      })\r\n      .on('touchmove MSPointerMove pointermove', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'move')) &&\r\n          !isPrimaryTouch(e)) return\r\n        firstTouch = _isPointerType ? e : e.touches[0]\r\n        cancelLongTap()\r\n        touch.x2 = firstTouch.pageX\r\n        touch.y2 = firstTouch.pageY\r\n\r\n        deltaX += Math.abs(touch.x1 - touch.x2)\r\n        deltaY += Math.abs(touch.y1 - touch.y2)\r\n      })\r\n      .on('touchend MSPointerUp pointerup', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'up')) &&\r\n          !isPrimaryTouch(e)) return\r\n        cancelLongTap()\r\n\r\n        // swipe\r\n        if ((touch.x2 && Math.abs(touch.x1 - touch.x2) > 30) ||\r\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > 30))\r\n\r\n          swipeTimeout = setTimeout(function() {\r\n            touch.el.trigger('swipe')\r\n            touch.el.trigger('swipe' + (swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)))\r\n            touch = {}\r\n          }, 0)\r\n\r\n        // normal tap\r\n        else if ('last' in touch)\r\n          // don't fire tap when delta position changed by more than 30 pixels,\r\n          // for instance when moving to a point and back to origin\r\n          if (deltaX < 30 && deltaY < 30) {\r\n            // delay by one tick so we can cancel the 'tap' event if 'scroll' fires\r\n            // ('tap' fires before 'scroll')\r\n            tapTimeout = setTimeout(function() {\r\n\r\n              // trigger universal 'tap' with the option to cancelTouch()\r\n              // (cancelTouch cancels processing of single vs double taps for faster 'tap' response)\r\n              var event = $.Event('tap')\r\n              event.cancelTouch = cancelAll\r\n              touch.el.trigger(event)\r\n\r\n              // trigger double tap immediately\r\n              if (touch.isDoubleTap) {\r\n                if (touch.el) touch.el.trigger('doubleTap')\r\n                touch = {}\r\n              }\r\n\r\n              // trigger single tap after 250ms of inactivity\r\n              else {\r\n                touchTimeout = setTimeout(function(){\r\n                  touchTimeout = null\r\n                  if (touch.el) touch.el.trigger('singleTap')\r\n                  touch = {}\r\n                }, 250)\r\n              }\r\n            }, 0)\r\n          } else {\r\n            touch = {}\r\n          }\r\n          deltaX = deltaY = 0\r\n\r\n      })\r\n      // when the browser window loses focus,\r\n      // for example when a modal dialog is shown,\r\n      // cancel all ongoing events\r\n      .on('touchcancel MSPointerCancel pointercancel', cancelAll)\r\n\r\n    // scrolling the window indicates intention of the user\r\n    // to scroll, not tap or swipe, so cancel all ongoing events\r\n    $(window).on('scroll', cancelAll)\r\n  })\r\n\r\n  ;['swipe', 'swipeLeft', 'swipeRight', 'swipeUp', 'swipeDown',\r\n    'doubleTap', 'tap', 'singleTap', 'longTap'].forEach(function(eventName){\r\n    $.fn[eventName] = function(callback){ return this.on(eventName, callback) }\r\n  })\r\n})(Zepto)\n\n//# sourceMappingURL=data:application/json;base64,")}]);