!function(g){function I(n){if(c[n])return c[n].exports;var l=c[n]={exports:{},id:n,loaded:!1};return g[n].call(l.exports,l,l.exports,I),l.loaded=!0,l.exports}var c={};return I.m=g,I.c=c,I.p="",I(0)}({0:function(g,I,c){g.exports=c(9)},9:function(module,exports){eval("/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\n//     Zepto.js\r\n//     (c) 2010-2016 Thomas Fuchs\r\n//     Zepto.js may be freely distributed under the MIT license.\r\n\r\n;(function($){\r\n  var touch = {},\r\n    touchTimeout, tapTimeout, swipeTimeout, longTapTimeout,\r\n    longTapDelay = 750,\r\n    gesture\r\n\r\n  function swipeDirection(x1, x2, y1, y2) {\r\n    return Math.abs(x1 - x2) >=\r\n      Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')\r\n  }\r\n\r\n  function longTap() {\r\n    longTapTimeout = null\r\n    if (touch.last) {\r\n      touch.el.trigger('longTap')\r\n      touch = {}\r\n    }\r\n  }\r\n\r\n  function cancelLongTap() {\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    longTapTimeout = null\r\n  }\r\n\r\n  function cancelAll() {\r\n    if (touchTimeout) clearTimeout(touchTimeout)\r\n    if (tapTimeout) clearTimeout(tapTimeout)\r\n    if (swipeTimeout) clearTimeout(swipeTimeout)\r\n    if (longTapTimeout) clearTimeout(longTapTimeout)\r\n    touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null\r\n    touch = {}\r\n  }\r\n\r\n  function isPrimaryTouch(event){\r\n    return (event.pointerType == 'touch' ||\r\n      event.pointerType == event.MSPOINTER_TYPE_TOUCH)\r\n      && event.isPrimary\r\n  }\r\n\r\n  function isPointerEventType(e, type){\r\n    return (e.type == 'pointer'+type ||\r\n      e.type.toLowerCase() == 'mspointer'+type)\r\n  }\r\n\r\n  $(document).ready(function(){\r\n    var now, delta, deltaX = 0, deltaY = 0, firstTouch, _isPointerType\r\n\r\n    if ('MSGesture' in window) {\r\n      gesture = new MSGesture()\r\n      gesture.target = document.body\r\n    }\r\n\r\n    $(document)\r\n      .bind('MSGestureEnd', function(e){\r\n        var swipeDirectionFromVelocity =\r\n          e.velocityX > 1 ? 'Right' : e.velocityX < -1 ? 'Left' : e.velocityY > 1 ? 'Down' : e.velocityY < -1 ? 'Up' : null;\r\n        if (swipeDirectionFromVelocity) {\r\n          touch.el.trigger('swipe')\r\n          touch.el.trigger('swipe'+ swipeDirectionFromVelocity)\r\n        }\r\n      })\r\n      .on('touchstart MSPointerDown pointerdown', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'down')) &&\r\n          !isPrimaryTouch(e)) return\r\n        firstTouch = _isPointerType ? e : e.touches[0]\r\n        if (e.touches && e.touches.length === 1 && touch.x2) {\r\n          // Clear out touch movement data if we have it sticking around\r\n          // This can occur if touchcancel doesn't fire due to preventDefault, etc.\r\n          touch.x2 = undefined\r\n          touch.y2 = undefined\r\n        }\r\n        now = Date.now()\r\n        delta = now - (touch.last || now)\r\n        touch.el = $('tagName' in firstTouch.target ?\r\n          firstTouch.target : firstTouch.target.parentNode)\r\n        touchTimeout && clearTimeout(touchTimeout)\r\n        touch.x1 = firstTouch.pageX\r\n        touch.y1 = firstTouch.pageY\r\n        if (delta > 0 && delta <= 250) touch.isDoubleTap = true\r\n        touch.last = now\r\n        longTapTimeout = setTimeout(longTap, longTapDelay)\r\n        // adds the current touch contact for IE gesture recognition\r\n        if (gesture && _isPointerType) gesture.addPointer(e.pointerId);\r\n      })\r\n      .on('touchmove MSPointerMove pointermove', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'move')) &&\r\n          !isPrimaryTouch(e)) return\r\n        firstTouch = _isPointerType ? e : e.touches[0]\r\n        cancelLongTap()\r\n        touch.x2 = firstTouch.pageX\r\n        touch.y2 = firstTouch.pageY\r\n\r\n        deltaX += Math.abs(touch.x1 - touch.x2)\r\n        deltaY += Math.abs(touch.y1 - touch.y2)\r\n      })\r\n      .on('touchend MSPointerUp pointerup', function(e){\r\n        if((_isPointerType = isPointerEventType(e, 'up')) &&\r\n          !isPrimaryTouch(e)) return\r\n        cancelLongTap()\r\n\r\n        // swipe\r\n        if ((touch.x2 && Math.abs(touch.x1 - touch.x2) > 30) ||\r\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > 30))\r\n\r\n          swipeTimeout = setTimeout(function() {\r\n            touch.el.trigger('swipe')\r\n            touch.el.trigger('swipe' + (swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)))\r\n            touch = {}\r\n          }, 0)\r\n\r\n        // normal tap\r\n        else if ('last' in touch)\r\n          // don't fire tap when delta position changed by more than 30 pixels,\r\n          // for instance when moving to a point and back to origin\r\n          if (deltaX < 30 && deltaY < 30) {\r\n            // delay by one tick so we can cancel the 'tap' event if 'scroll' fires\r\n            // ('tap' fires before 'scroll')\r\n            tapTimeout = setTimeout(function() {\r\n\r\n              // trigger universal 'tap' with the option to cancelTouch()\r\n              // (cancelTouch cancels processing of single vs double taps for faster 'tap' response)\r\n              var event = $.Event('tap')\r\n              event.cancelTouch = cancelAll\r\n              touch.el.trigger(event)\r\n\r\n              // trigger double tap immediately\r\n              if (touch.isDoubleTap) {\r\n                if (touch.el) touch.el.trigger('doubleTap')\r\n                touch = {}\r\n              }\r\n\r\n              // trigger single tap after 250ms of inactivity\r\n              else {\r\n                touchTimeout = setTimeout(function(){\r\n                  touchTimeout = null\r\n                  if (touch.el) touch.el.trigger('singleTap')\r\n                  touch = {}\r\n                }, 250)\r\n              }\r\n            }, 0)\r\n          } else {\r\n            touch = {}\r\n          }\r\n          deltaX = deltaY = 0\r\n\r\n      })\r\n      // when the browser window loses focus,\r\n      // for example when a modal dialog is shown,\r\n      // cancel all ongoing events\r\n      .on('touchcancel MSPointerCancel pointercancel', cancelAll)\r\n\r\n    // scrolling the window indicates intention of the user\r\n    // to scroll, not tap or swipe, so cancel all ongoing events\r\n    $(window).on('scroll', cancelAll)\r\n  })\r\n\r\n  ;['swipe', 'swipeLeft', 'swipeRight', 'swipeUp', 'swipeDown',\r\n    'doubleTap', 'tap', 'singleTap', 'longTap'].forEach(function(eventName){\r\n    $.fn[eventName] = function(callback){ return this.on(eventName, callback) }\r\n  })\r\n})(Zepto)\n\n//# sourceMappingURL=data:application/json;base64,")}});